2016-10-10 18:53:59.974 - DEBUG - [main] HibernatePersistenceProvider:<clinit>:55 :: Logging Provider: org.jboss.logging.Log4jLoggerProvider 
2016-10-10 18:54:00.005 - TRACE - [main] HibernatePersistenceProvider:createContainerEntityManagerFactory:150 :: Starting createContainerEntityManagerFactory : default 
2016-10-10 18:54:00.040 - DEBUG - [main] LogHelper:logPersistenceUnitInformation:117 :: PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@6d06d69c
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.commons.dbcp.BasicDataSource@2d0399f4
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/IdeaProjects/SpringMVC/target/test-classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.total.spring.entity.Country
		org.total.spring.entity.Role
		org.total.spring.entity.Team
		org.total.spring.entity.User]
	Mapping files names []
	Properties [] 
2016-10-10 18:54:00.058 - DEBUG - [main] IntegratorServiceImpl:addIntegrator:63 :: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator]. 
2016-10-10 18:54:00.060 - DEBUG - [main] IntegratorServiceImpl:addIntegrator:63 :: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator]. 
2016-10-10 18:54:00.062 - DEBUG - [main] IntegratorServiceImpl:addIntegrator:63 :: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. 
2016-10-10 18:54:00.063 - DEBUG - [main] IntegratorServiceImpl:addIntegrator:63 :: Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator]. 
2016-10-10 18:54:00.108 - DEBUG - [main] IntegratorServiceImpl:addIntegrator:63 :: Adding Integrator [org.jadira.usertype.dateandtime.joda.integrator.UserTypeJodaTimeHibernateIntegrator]. 
2016-10-10 18:54:00.108 - DEBUG - [main] IntegratorServiceImpl:addIntegrator:63 :: Adding Integrator [org.jadira.usertype.moneyandcurrency.joda.integrator.UserTypeJodaMoneyHibernateIntegrator]. 
2016-10-10 18:54:00.109 - DEBUG - [main] IntegratorServiceImpl:addIntegrator:63 :: Adding Integrator [org.jadira.usertype.moneyandcurrency.legacyjdk.integrator.UserTypeLegacyJdkMoneyHibernateIntegrator]. 
2016-10-10 18:54:00.114 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.dialect.Dialect] : [Cache71] -> [org.hibernate.dialect.Cache71Dialect] 
2016-10-10 18:54:00.116 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.dialect.Dialect] : [CUBRID] -> [org.hibernate.dialect.CUBRIDDialect] 
2016-10-10 18:54:00.117 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.dialect.Dialect] : [DB2] -> [org.hibernate.dialect.DB2Dialect] 
2016-10-10 18:54:00.118 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.dialect.Dialect] : [DB2390] -> [org.hibernate.dialect.DB2390Dialect] 
2016-10-10 18:54:00.119 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.dialect.Dialect] : [DB2400] -> [org.hibernate.dialect.DB2400Dialect] 
2016-10-10 18:54:00.120 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.dialect.Dialect] : [DerbyTenFive] -> [org.hibernate.dialect.DerbyTenFiveDialect] 
2016-10-10 18:54:00.122 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.dialect.Dialect] : [DerbyTenSix] -> [org.hibernate.dialect.DerbyTenSixDialect] 
2016-10-10 18:54:00.123 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.dialect.Dialect] : [DerbyTenSeven] -> [org.hibernate.dialect.DerbyTenSevenDialect] 
2016-10-10 18:54:00.124 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.dialect.Dialect] : [Firebird] -> [org.hibernate.dialect.FirebirdDialect] 
2016-10-10 18:54:00.125 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.dialect.Dialect] : [FrontBase] -> [org.hibernate.dialect.FrontBaseDialect] 
2016-10-10 18:54:00.127 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.dialect.Dialect] : [H2] -> [org.hibernate.dialect.H2Dialect] 
2016-10-10 18:54:00.128 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.dialect.Dialect] : [HSQL] -> [org.hibernate.dialect.HSQLDialect] 
2016-10-10 18:54:00.129 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.dialect.Dialect] : [Informix] -> [org.hibernate.dialect.InformixDialect] 
2016-10-10 18:54:00.130 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.dialect.Dialect] : [Ingres] -> [org.hibernate.dialect.IngresDialect] 
2016-10-10 18:54:00.131 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.dialect.Dialect] : [Ingres9] -> [org.hibernate.dialect.Ingres9Dialect] 
2016-10-10 18:54:00.132 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.dialect.Dialect] : [Ingres10] -> [org.hibernate.dialect.Ingres10Dialect] 
2016-10-10 18:54:00.133 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.dialect.Dialect] : [Interbase] -> [org.hibernate.dialect.InterbaseDialect] 
2016-10-10 18:54:00.134 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.dialect.Dialect] : [JDataStore] -> [org.hibernate.dialect.JDataStoreDialect] 
2016-10-10 18:54:00.136 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.dialect.Dialect] : [Mckoi] -> [org.hibernate.dialect.MckoiDialect] 
2016-10-10 18:54:00.138 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.dialect.Dialect] : [MimerSQL] -> [org.hibernate.dialect.MimerSQLDialect] 
2016-10-10 18:54:00.140 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5] -> [org.hibernate.dialect.MySQL5Dialect] 
2016-10-10 18:54:00.141 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5InnoDB] -> [org.hibernate.dialect.MySQL5InnoDBDialect] 
2016-10-10 18:54:00.142 - DEBUG - [main] StrategySelectorImpl:registerStrategyImplementor:79 :: Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5] -> [org.hibernate.dialect.MySQL5Dialect] (replacing [org.hibernate.dialect.MySQL5Dialect]) 
2016-10-10 18:54:00.142 - DEBUG - [main] StrategySelectorImpl:registerStrategyImplementor:79 :: Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5InnoDB] -> [org.hibernate.dialect.MySQL5InnoDBDialect] (replacing [org.hibernate.dialect.MySQL5InnoDBDialect]) 
2016-10-10 18:54:00.144 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.dialect.Dialect] : [Oracle8i] -> [org.hibernate.dialect.Oracle8iDialect] 
2016-10-10 18:54:00.145 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.dialect.Dialect] : [Oracle9i] -> [org.hibernate.dialect.Oracle9iDialect] 
2016-10-10 18:54:00.146 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.dialect.Dialect] : [Oracle10g] -> [org.hibernate.dialect.Oracle10gDialect] 
2016-10-10 18:54:00.148 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.dialect.Dialect] : [Pointbase] -> [org.hibernate.dialect.PointbaseDialect] 
2016-10-10 18:54:00.150 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.dialect.Dialect] : [PostgresPlus] -> [org.hibernate.dialect.PostgresPlusDialect] 
2016-10-10 18:54:00.151 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.dialect.Dialect] : [PostgreSQL81] -> [org.hibernate.dialect.PostgreSQL81Dialect] 
2016-10-10 18:54:00.152 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.dialect.Dialect] : [PostgreSQL82] -> [org.hibernate.dialect.PostgreSQL82Dialect] 
2016-10-10 18:54:00.152 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.dialect.Dialect] : [PostgreSQL9] -> [org.hibernate.dialect.PostgreSQL9Dialect] 
2016-10-10 18:54:00.153 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.dialect.Dialect] : [Progress] -> [org.hibernate.dialect.ProgressDialect] 
2016-10-10 18:54:00.156 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.dialect.Dialect] : [SAPDB] -> [org.hibernate.dialect.SAPDBDialect] 
2016-10-10 18:54:00.158 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.dialect.Dialect] : [SQLServer] -> [org.hibernate.dialect.SQLServerDialect] 
2016-10-10 18:54:00.159 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.dialect.Dialect] : [SQLServer2005] -> [org.hibernate.dialect.SQLServer2005Dialect] 
2016-10-10 18:54:00.160 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.dialect.Dialect] : [SQLServer2008] -> [org.hibernate.dialect.SQLServer2008Dialect] 
2016-10-10 18:54:00.161 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.dialect.Dialect] : [Sybase11] -> [org.hibernate.dialect.Sybase11Dialect] 
2016-10-10 18:54:00.162 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.dialect.Dialect] : [SybaseAnywhere] -> [org.hibernate.dialect.SybaseAnywhereDialect] 
2016-10-10 18:54:00.163 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.dialect.Dialect] : [SybaseASE15] -> [org.hibernate.dialect.SybaseASE15Dialect] 
2016-10-10 18:54:00.164 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.dialect.Dialect] : [SybaseASE157] -> [org.hibernate.dialect.SybaseASE157Dialect] 
2016-10-10 18:54:00.165 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.dialect.Dialect] : [Teradata] -> [org.hibernate.dialect.TeradataDialect] 
2016-10-10 18:54:00.165 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.dialect.Dialect] : [TimesTen] -> [org.hibernate.dialect.TimesTenDialect] 
2016-10-10 18:54:00.167 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [Borland] -> [org.hibernate.engine.transaction.jta.platform.internal.BorlandEnterpriseServerJtaPlatform] 
2016-10-10 18:54:00.168 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.BorlandEnterpriseServerJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.BorlandEnterpriseServerJtaPlatform] 
2016-10-10 18:54:00.169 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [Bitronix] -> [org.hibernate.engine.transaction.jta.platform.internal.BitronixJtaPlatform] 
2016-10-10 18:54:00.170 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.BitronixJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.BitronixJtaPlatform] 
2016-10-10 18:54:00.171 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [JBossAS] -> [org.hibernate.engine.transaction.jta.platform.internal.JBossAppServerJtaPlatform] 
2016-10-10 18:54:00.172 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.JBossAppServerJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.JBossAppServerJtaPlatform] 
2016-10-10 18:54:00.173 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [JBossTS] -> [org.hibernate.engine.transaction.jta.platform.internal.JBossStandAloneJtaPlatform] 
2016-10-10 18:54:00.174 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.JBossStandAloneJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.JBossStandAloneJtaPlatform] 
2016-10-10 18:54:00.175 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [JOnAS] -> [org.hibernate.engine.transaction.jta.platform.internal.JOnASJtaPlatform] 
2016-10-10 18:54:00.175 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.JOnASJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.JOnASJtaPlatform] 
2016-10-10 18:54:00.177 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [JOTM] -> [org.hibernate.engine.transaction.jta.platform.internal.JOTMJtaPlatform] 
2016-10-10 18:54:00.177 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.JOTMJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.JOTMJtaPlatform] 
2016-10-10 18:54:00.178 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [JRun4] -> [org.hibernate.engine.transaction.jta.platform.internal.JRun4JtaPlatform] 
2016-10-10 18:54:00.179 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.JRun4JtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.JRun4JtaPlatform] 
2016-10-10 18:54:00.180 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [OC4J] -> [org.hibernate.engine.transaction.jta.platform.internal.OC4JJtaPlatform] 
2016-10-10 18:54:00.180 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.OC4JJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.OC4JJtaPlatform] 
2016-10-10 18:54:00.181 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [Orion] -> [org.hibernate.engine.transaction.jta.platform.internal.OrionJtaPlatform] 
2016-10-10 18:54:00.181 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.OrionJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.OrionJtaPlatform] 
2016-10-10 18:54:00.183 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [Resin] -> [org.hibernate.engine.transaction.jta.platform.internal.ResinJtaPlatform] 
2016-10-10 18:54:00.184 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.ResinJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.ResinJtaPlatform] 
2016-10-10 18:54:00.185 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [SunOne] -> [org.hibernate.engine.transaction.jta.platform.internal.SunOneJtaPlatform] 
2016-10-10 18:54:00.185 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.SunOneJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.SunOneJtaPlatform] 
2016-10-10 18:54:00.186 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [Weblogic] -> [org.hibernate.engine.transaction.jta.platform.internal.WeblogicJtaPlatform] 
2016-10-10 18:54:00.187 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.WeblogicJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.WeblogicJtaPlatform] 
2016-10-10 18:54:00.188 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [WebSphere] -> [org.hibernate.engine.transaction.jta.platform.internal.WebSphereJtaPlatform] 
2016-10-10 18:54:00.189 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.WebSphereJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.WebSphereJtaPlatform] 
2016-10-10 18:54:00.190 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [WebSphereExtended] -> [org.hibernate.engine.transaction.jta.platform.internal.WebSphereExtendedJtaPlatform] 
2016-10-10 18:54:00.191 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.WebSphereExtendedJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.WebSphereExtendedJtaPlatform] 
2016-10-10 18:54:00.192 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.engine.transaction.spi.TransactionFactory] : [jdbc] -> [org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory] 
2016-10-10 18:54:00.193 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.engine.transaction.spi.TransactionFactory] : [org.hibernate.transaction.JDBCTransactionFactory] -> [org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory] 
2016-10-10 18:54:00.194 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.engine.transaction.spi.TransactionFactory] : [jta] -> [org.hibernate.engine.transaction.internal.jta.JtaTransactionFactory] 
2016-10-10 18:54:00.195 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.engine.transaction.spi.TransactionFactory] : [org.hibernate.transaction.JTATransactionFactory] -> [org.hibernate.engine.transaction.internal.jta.JtaTransactionFactory] 
2016-10-10 18:54:00.196 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.engine.transaction.spi.TransactionFactory] : [cmt] -> [org.hibernate.engine.transaction.internal.jta.CMTTransactionFactory] 
2016-10-10 18:54:00.197 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.engine.transaction.spi.TransactionFactory] : [org.hibernate.transaction.CMTTransactionFactory] -> [org.hibernate.engine.transaction.internal.jta.CMTTransactionFactory] 
2016-10-10 18:54:00.199 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.hql.spi.MultiTableBulkIdStrategy] : [persistent] -> [org.hibernate.hql.spi.PersistentTableBulkIdStrategy] 
2016-10-10 18:54:00.200 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.hql.spi.MultiTableBulkIdStrategy] : [temporary] -> [org.hibernate.hql.spi.TemporaryTableBulkIdStrategy] 
2016-10-10 18:54:00.201 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.event.spi.EntityCopyObserver] : [disallow] -> [org.hibernate.event.internal.EntityCopyNotAllowedObserver] 
2016-10-10 18:54:00.202 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.event.spi.EntityCopyObserver] : [allow] -> [org.hibernate.event.internal.EntityCopyAllowedObserver] 
2016-10-10 18:54:00.203 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.event.spi.EntityCopyObserver] : [log] -> [org.hibernate.event.internal.EntityCopyAllowedLoggedObserver] 
2016-10-10 18:54:00.206 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider] : [c3p0] -> [org.hibernate.c3p0.internal.C3P0ConnectionProvider] 
2016-10-10 18:54:00.207 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider] : [C3P0ConnectionProvider] -> [org.hibernate.c3p0.internal.C3P0ConnectionProvider] 
2016-10-10 18:54:00.207 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider] : [org.hibernate.connection.C3P0ConnectionProvider] -> [org.hibernate.c3p0.internal.C3P0ConnectionProvider] 
2016-10-10 18:54:00.208 - TRACE - [main] StrategySelectorImpl:registerStrategyImplementor:69 :: Registering named strategy selector [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider] : [org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider] -> [org.hibernate.c3p0.internal.C3P0ConnectionProvider] 
2016-10-10 18:54:00.232 -  INFO - [main] Version:logVersion:54 :: HHH000412: Hibernate Core {4.3.10.Final} 
2016-10-10 18:54:00.234 -  INFO - [main] Environment:<clinit>:239 :: HHH000206: hibernate.properties not found 
2016-10-10 18:54:00.235 -  INFO - [main] Environment:buildBytecodeProvider:346 :: HHH000021: Bytecode provider name : javassist 
2016-10-10 18:54:00.373 - DEBUG - [main] ServiceBinding:setService:85 :: Overriding existing service binding [org.hibernate.secure.spi.JaccService] 
2016-10-10 18:54:00.407 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration boolean -> org.hibernate.type.BooleanType@2c7b5824 
2016-10-10 18:54:00.408 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration boolean -> org.hibernate.type.BooleanType@2c7b5824 
2016-10-10 18:54:00.408 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2c7b5824 
2016-10-10 18:54:00.410 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@681a8b4e 
2016-10-10 18:54:00.413 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration true_false -> org.hibernate.type.TrueFalseType@4bff64c2 
2016-10-10 18:54:00.414 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration yes_no -> org.hibernate.type.YesNoType@c2db68f 
2016-10-10 18:54:00.417 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration byte -> org.hibernate.type.ByteType@7f6f61c8 
2016-10-10 18:54:00.418 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration byte -> org.hibernate.type.ByteType@7f6f61c8 
2016-10-10 18:54:00.419 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7f6f61c8 
2016-10-10 18:54:00.421 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration character -> org.hibernate.type.CharacterType@2a5b3fee 
2016-10-10 18:54:00.422 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration char -> org.hibernate.type.CharacterType@2a5b3fee 
2016-10-10 18:54:00.423 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2a5b3fee 
2016-10-10 18:54:00.426 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration short -> org.hibernate.type.ShortType@119020fb 
2016-10-10 18:54:00.427 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration short -> org.hibernate.type.ShortType@119020fb 
2016-10-10 18:54:00.427 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@119020fb 
2016-10-10 18:54:00.429 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration integer -> org.hibernate.type.IntegerType@73173f63 
2016-10-10 18:54:00.431 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration int -> org.hibernate.type.IntegerType@73173f63 
2016-10-10 18:54:00.432 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@73173f63 
2016-10-10 18:54:00.435 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration long -> org.hibernate.type.LongType@77d2e85 
2016-10-10 18:54:00.436 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration long -> org.hibernate.type.LongType@77d2e85 
2016-10-10 18:54:00.437 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration java.lang.Long -> org.hibernate.type.LongType@77d2e85 
2016-10-10 18:54:00.439 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration float -> org.hibernate.type.FloatType@2f4205be 
2016-10-10 18:54:00.441 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration float -> org.hibernate.type.FloatType@2f4205be 
2016-10-10 18:54:00.442 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2f4205be 
2016-10-10 18:54:00.445 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration double -> org.hibernate.type.DoubleType@20b12f8a 
2016-10-10 18:54:00.446 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration double -> org.hibernate.type.DoubleType@20b12f8a 
2016-10-10 18:54:00.447 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@20b12f8a 
2016-10-10 18:54:00.450 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5ddea849 
2016-10-10 18:54:00.451 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5ddea849 
2016-10-10 18:54:00.453 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@13e547a9 
2016-10-10 18:54:00.454 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@13e547a9 
2016-10-10 18:54:00.457 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration string -> org.hibernate.type.StringType@4b9df8a 
2016-10-10 18:54:00.458 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration java.lang.String -> org.hibernate.type.StringType@4b9df8a 
2016-10-10 18:54:00.460 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2b5f4d54 
2016-10-10 18:54:00.463 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@395b56bb 
2016-10-10 18:54:00.466 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration url -> org.hibernate.type.UrlType@68fa0ba8 
2016-10-10 18:54:00.466 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration java.net.URL -> org.hibernate.type.UrlType@68fa0ba8 
2016-10-10 18:54:00.470 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration date -> org.hibernate.type.DateType@18c5069b 
2016-10-10 18:54:00.471 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration java.sql.Date -> org.hibernate.type.DateType@18c5069b 
2016-10-10 18:54:00.475 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration time -> org.hibernate.type.TimeType@17cdf2d0 
2016-10-10 18:54:00.476 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@17cdf2d0 
2016-10-10 18:54:00.480 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration timestamp -> org.hibernate.type.TimestampType@5553d0f5 
2016-10-10 18:54:00.481 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5553d0f5 
2016-10-10 18:54:00.482 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5553d0f5 
2016-10-10 18:54:00.485 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3f390d63 
2016-10-10 18:54:00.488 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration calendar -> org.hibernate.type.CalendarType@1506f20f 
2016-10-10 18:54:00.489 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1506f20f 
2016-10-10 18:54:00.490 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1506f20f 
2016-10-10 18:54:00.492 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1a45193b 
2016-10-10 18:54:00.495 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration locale -> org.hibernate.type.LocaleType@6c25e6c4 
2016-10-10 18:54:00.496 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6c25e6c4 
2016-10-10 18:54:00.499 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration currency -> org.hibernate.type.CurrencyType@70efb718 
2016-10-10 18:54:00.500 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@70efb718 
2016-10-10 18:54:00.502 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration timezone -> org.hibernate.type.TimeZoneType@4e70a728 
2016-10-10 18:54:00.503 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4e70a728 
2016-10-10 18:54:00.506 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration class -> org.hibernate.type.ClassType@56c698e3 
2016-10-10 18:54:00.506 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@56c698e3 
2016-10-10 18:54:00.509 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@73dce0e6 
2016-10-10 18:54:00.510 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@73dce0e6 
2016-10-10 18:54:00.512 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4795ded0 
2016-10-10 18:54:00.515 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@42f33b5d 
2016-10-10 18:54:00.517 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration binary -> org.hibernate.type.BinaryType@4bd1f8dd 
2016-10-10 18:54:00.518 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration byte[] -> org.hibernate.type.BinaryType@4bd1f8dd 
2016-10-10 18:54:00.519 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration [B -> org.hibernate.type.BinaryType@4bd1f8dd 
2016-10-10 18:54:00.521 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@25bc0606 
2016-10-10 18:54:00.521 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@25bc0606 
2016-10-10 18:54:00.521 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@25bc0606 
2016-10-10 18:54:00.522 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration image -> org.hibernate.type.ImageType@33aeca0b 
2016-10-10 18:54:00.524 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration characters -> org.hibernate.type.CharArrayType@1ae67cad 
2016-10-10 18:54:00.524 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration char[] -> org.hibernate.type.CharArrayType@1ae67cad 
2016-10-10 18:54:00.524 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration [C -> org.hibernate.type.CharArrayType@1ae67cad 
2016-10-10 18:54:00.526 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@765f05af 
2016-10-10 18:54:00.527 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@765f05af 
2016-10-10 18:54:00.527 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@765f05af 
2016-10-10 18:54:00.529 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration text -> org.hibernate.type.TextType@4bc28c33 
2016-10-10 18:54:00.531 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration ntext -> org.hibernate.type.NTextType@7ec3394b 
2016-10-10 18:54:00.535 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration blob -> org.hibernate.type.BlobType@7c541c15 
2016-10-10 18:54:00.536 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7c541c15 
2016-10-10 18:54:00.537 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4212a0c8 
2016-10-10 18:54:00.542 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration clob -> org.hibernate.type.ClobType@3e10dc6 
2016-10-10 18:54:00.542 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3e10dc6 
2016-10-10 18:54:00.545 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration nclob -> org.hibernate.type.NClobType@58fe0499 
2016-10-10 18:54:00.546 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@58fe0499 
2016-10-10 18:54:00.546 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@68b6f0d6 
2016-10-10 18:54:00.547 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@36f48b4 
2016-10-10 18:54:00.549 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration serializable -> org.hibernate.type.SerializableType@3f792b9b 
2016-10-10 18:54:00.551 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration object -> org.hibernate.type.ObjectType@21baa903 
2016-10-10 18:54:00.552 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@21baa903 
2016-10-10 18:54:00.553 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@29df4d43 
2016-10-10 18:54:00.553 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5dd91bca 
2016-10-10 18:54:00.554 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@40cb698e 
2016-10-10 18:54:00.554 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3382f8ae 
2016-10-10 18:54:00.555 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@60641ec8 
2016-10-10 18:54:00.555 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@75f65e45 
2016-10-10 18:54:00.555 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6eeade6c 
2016-10-10 18:54:00.556 - DEBUG - [main] BasicTypeRegistry:register:146 :: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4a891c97 
2016-10-10 18:54:00.570 -  INFO - [main] JavaReflectionManager:<clinit>:66 :: HCANN000001: Hibernate Commons Annotations {4.0.5.Final} 
2016-10-10 18:54:00.579 - DEBUG - [main] DefaultIdentifierGeneratorFactory:register:93 :: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] 
2016-10-10 18:54:00.580 - DEBUG - [main] DefaultIdentifierGeneratorFactory:register:93 :: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] 
2016-10-10 18:54:00.581 - DEBUG - [main] DefaultIdentifierGeneratorFactory:register:93 :: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] 
2016-10-10 18:54:00.582 - DEBUG - [main] DefaultIdentifierGeneratorFactory:register:93 :: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] 
2016-10-10 18:54:00.583 - DEBUG - [main] DefaultIdentifierGeneratorFactory:register:93 :: Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator] 
2016-10-10 18:54:00.584 - DEBUG - [main] DefaultIdentifierGeneratorFactory:register:93 :: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] 
2016-10-10 18:54:00.585 - DEBUG - [main] DefaultIdentifierGeneratorFactory:register:93 :: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] 
2016-10-10 18:54:00.585 - DEBUG - [main] DefaultIdentifierGeneratorFactory:register:93 :: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] 
2016-10-10 18:54:00.586 - DEBUG - [main] DefaultIdentifierGeneratorFactory:register:93 :: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator] 
2016-10-10 18:54:00.587 - DEBUG - [main] DefaultIdentifierGeneratorFactory:register:93 :: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator] 
2016-10-10 18:54:00.589 - DEBUG - [main] DefaultIdentifierGeneratorFactory:register:93 :: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] 
2016-10-10 18:54:00.589 - DEBUG - [main] DefaultIdentifierGeneratorFactory:register:93 :: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] 
2016-10-10 18:54:00.590 - DEBUG - [main] DefaultIdentifierGeneratorFactory:register:93 :: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator] 
2016-10-10 18:54:00.591 - DEBUG - [main] DefaultIdentifierGeneratorFactory:register:93 :: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] 
2016-10-10 18:54:00.592 - DEBUG - [main] DefaultIdentifierGeneratorFactory:register:93 :: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] 
2016-10-10 18:54:00.601 - DEBUG - [main] Configuration:buildSessionFactory:1843 :: Preparing to build session factory with filters : {} 
2016-10-10 18:54:00.602 - TRACE - [main] AbstractServiceRegistryImpl:initializeService:221 :: Initializing service [role=org.hibernate.engine.jdbc.spi.JdbcServices] 
2016-10-10 18:54:00.608 - TRACE - [main] AbstractServiceRegistryImpl:initializeService:221 :: Initializing service [role=org.hibernate.engine.jdbc.connections.spi.ConnectionProvider] 
2016-10-10 18:54:00.610 - TRACE - [main] AbstractServiceRegistryImpl:initializeService:221 :: Initializing service [role=org.hibernate.engine.jndi.spi.JndiService] 
2016-10-10 18:54:00.613 - TRACE - [main] AbstractServiceRegistryImpl:initializeService:221 :: Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectFactory] 
2016-10-10 18:54:00.614 - TRACE - [main] AbstractServiceRegistryImpl:initializeService:221 :: Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectResolver] 
2016-10-10 18:54:00.625 -  INFO - [main] Dialect:<init>:145 :: HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect 
2016-10-10 18:54:00.632 -  INFO - [main] LobCreatorBuilder:useContextualLobCreation:88 :: HHH000422: Disabling contextual LOB creation as connection was null 
2016-10-10 18:54:00.640 - TRACE - [main] Configuration:secondPassCompile:1377 :: Starting secondPassCompile() processing 
2016-10-10 18:54:00.681 - DEBUG - [main] Configuration$MetadataSourceQueue:processHbmXmlQueue:3805 :: Processing hbm.xml files 
2016-10-10 18:54:00.682 - DEBUG - [main] Configuration$MetadataSourceQueue:processAnnotatedClassesQueue:3835 :: Process annotated classes 
2016-10-10 18:54:00.688 - DEBUG - [main] AnnotationBinder:bindClass:601 :: Binding entity from annotated class: org.total.spring.entity.Role 
2016-10-10 18:54:00.762 - DEBUG - [main] Ejb3Column:bind:240 :: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} 
2016-10-10 18:54:00.768 - DEBUG - [main] EntityBinder:bindEntity:399 :: Import with entity name Role 
2016-10-10 18:54:00.771 - DEBUG - [main] EntityBinder:bindTable:612 :: Bind entity org.total.spring.entity.Role on table Role 
2016-10-10 18:54:00.792 - TRACE - [main] AnnotationBinder:processElementAnnotations:1674 :: Processing annotations of org.total.spring.entity.Role.roleId 
2016-10-10 18:54:00.795 - DEBUG - [main] Ejb3Column:bind:240 :: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=roleId, insertable=true, updatable=true, unique=true} 
2016-10-10 18:54:00.799 - DEBUG - [main] PropertyBinder:makePropertyAndValue:185 :: MetadataSourceProcessor property roleId with lazy=false 
2016-10-10 18:54:00.801 - DEBUG - [main] AbstractPropertyHolder:resolveAttributeConverterDefinition:106 :: Attempting to locate auto-apply AttributeConverter for property [org.total.spring.entity.Role:roleId] 
2016-10-10 18:54:00.802 - DEBUG - [main] SimpleValueBinder:make:388 :: building SimpleValue for roleId 
2016-10-10 18:54:00.804 - DEBUG - [main] PropertyBinder:makeProperty:271 :: Building property roleId 
2016-10-10 18:54:00.806 - TRACE - [main] PropertyBinder:makeProperty:329 :: Cascading roleId with null 
2016-10-10 18:54:00.807 - TRACE - [main] AnnotationBinder:processId:2365 :: Bind @Id on roleId 
2016-10-10 18:54:00.807 - TRACE - [main] AnnotationBinder:processElementAnnotations:1674 :: Processing annotations of org.total.spring.entity.Role.roleType 
2016-10-10 18:54:00.808 - DEBUG - [main] Ejb3Column:bind:240 :: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=roleType, insertable=true, updatable=true, unique=true} 
2016-10-10 18:54:00.808 - DEBUG - [main] PropertyBinder:makePropertyAndValue:185 :: MetadataSourceProcessor property roleType with lazy=false 
2016-10-10 18:54:00.809 - DEBUG - [main] AbstractPropertyHolder:resolveAttributeConverterDefinition:106 :: Attempting to locate auto-apply AttributeConverter for property [org.total.spring.entity.Role:roleType] 
2016-10-10 18:54:00.811 - DEBUG - [main] SimpleValueBinder:make:388 :: building SimpleValue for roleType 
2016-10-10 18:54:00.812 - DEBUG - [main] PropertyBinder:makeProperty:271 :: Building property roleType 
2016-10-10 18:54:00.813 - TRACE - [main] PropertyBinder:makeProperty:329 :: Cascading roleType with null 
2016-10-10 18:54:00.813 - TRACE - [main] AnnotationBinder:processElementAnnotations:1674 :: Processing annotations of org.total.spring.entity.Role.users 
2016-10-10 18:54:00.815 - DEBUG - [main] Ejb3Column:bind:240 :: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=null, insertable=true, updatable=true, unique=false} 
2016-10-10 18:54:00.826 - DEBUG - [main] Ejb3Column:bind:240 :: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=element, insertable=true, updatable=true, unique=false} 
2016-10-10 18:54:00.827 - DEBUG - [main] Ejb3Column:bind:240 :: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=users_KEY, insertable=true, updatable=true, unique=false} 
2016-10-10 18:54:00.828 - DEBUG - [main] Ejb3Column:bind:240 :: Binding column: Ejb3JoinColumn{logicalColumnName='users_KEY', referencedColumn='null', mappedBy='null'} 
2016-10-10 18:54:00.828 - DEBUG - [main] Ejb3Column:bind:240 :: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='roles'} 
2016-10-10 18:54:00.829 - DEBUG - [main] Ejb3Column:bind:240 :: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='roles'} 
2016-10-10 18:54:00.830 - DEBUG - [main] CollectionBinder:bind:401 :: Collection role: org.total.spring.entity.Role.users 
2016-10-10 18:54:00.832 - DEBUG - [main] PropertyBinder:makeProperty:271 :: Building property users 
2016-10-10 18:54:00.833 - TRACE - [main] PropertyBinder:makeProperty:329 :: Cascading users with all 
2016-10-10 18:54:00.835 - DEBUG - [main] AnnotationBinder:bindClass:601 :: Binding entity from annotated class: org.total.spring.entity.Country 
2016-10-10 18:54:00.835 - DEBUG - [main] Ejb3Column:bind:240 :: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} 
2016-10-10 18:54:00.836 - DEBUG - [main] EntityBinder:bindEntity:399 :: Import with entity name Country 
2016-10-10 18:54:00.837 - DEBUG - [main] EntityBinder:bindTable:612 :: Bind entity org.total.spring.entity.Country on table Country 
2016-10-10 18:54:00.842 - TRACE - [main] AnnotationBinder:processElementAnnotations:1674 :: Processing annotations of org.total.spring.entity.Country.countryId 
2016-10-10 18:54:00.842 - DEBUG - [main] Ejb3Column:bind:240 :: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Country), mappingColumn=countryId, insertable=true, updatable=true, unique=true} 
2016-10-10 18:54:00.843 - DEBUG - [main] PropertyBinder:makePropertyAndValue:185 :: MetadataSourceProcessor property countryId with lazy=false 
2016-10-10 18:54:00.844 - DEBUG - [main] AbstractPropertyHolder:resolveAttributeConverterDefinition:106 :: Attempting to locate auto-apply AttributeConverter for property [org.total.spring.entity.Country:countryId] 
2016-10-10 18:54:00.845 - DEBUG - [main] SimpleValueBinder:make:388 :: building SimpleValue for countryId 
2016-10-10 18:54:00.845 - DEBUG - [main] PropertyBinder:makeProperty:271 :: Building property countryId 
2016-10-10 18:54:00.846 - TRACE - [main] PropertyBinder:makeProperty:329 :: Cascading countryId with null 
2016-10-10 18:54:00.847 - TRACE - [main] AnnotationBinder:processId:2365 :: Bind @Id on countryId 
2016-10-10 18:54:00.848 - TRACE - [main] AnnotationBinder:processElementAnnotations:1674 :: Processing annotations of org.total.spring.entity.Country.countryCode 
2016-10-10 18:54:00.848 - DEBUG - [main] Ejb3Column:bind:240 :: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Country), mappingColumn=countryCode, insertable=true, updatable=true, unique=true} 
2016-10-10 18:54:00.849 - DEBUG - [main] PropertyBinder:makePropertyAndValue:185 :: MetadataSourceProcessor property countryCode with lazy=false 
2016-10-10 18:54:00.849 - DEBUG - [main] AbstractPropertyHolder:resolveAttributeConverterDefinition:106 :: Attempting to locate auto-apply AttributeConverter for property [org.total.spring.entity.Country:countryCode] 
2016-10-10 18:54:00.850 - DEBUG - [main] SimpleValueBinder:make:388 :: building SimpleValue for countryCode 
2016-10-10 18:54:00.850 - DEBUG - [main] PropertyBinder:makeProperty:271 :: Building property countryCode 
2016-10-10 18:54:00.850 - TRACE - [main] PropertyBinder:makeProperty:329 :: Cascading countryCode with null 
2016-10-10 18:54:00.851 - TRACE - [main] AnnotationBinder:processElementAnnotations:1674 :: Processing annotations of org.total.spring.entity.Country.countryName 
2016-10-10 18:54:00.852 - DEBUG - [main] Ejb3Column:bind:240 :: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Country), mappingColumn=countryName, insertable=true, updatable=true, unique=true} 
2016-10-10 18:54:00.852 - DEBUG - [main] PropertyBinder:makePropertyAndValue:185 :: MetadataSourceProcessor property countryName with lazy=false 
2016-10-10 18:54:00.853 - DEBUG - [main] AbstractPropertyHolder:resolveAttributeConverterDefinition:106 :: Attempting to locate auto-apply AttributeConverter for property [org.total.spring.entity.Country:countryName] 
2016-10-10 18:54:00.854 - DEBUG - [main] SimpleValueBinder:make:388 :: building SimpleValue for countryName 
2016-10-10 18:54:00.855 - DEBUG - [main] PropertyBinder:makeProperty:271 :: Building property countryName 
2016-10-10 18:54:00.855 - TRACE - [main] PropertyBinder:makeProperty:329 :: Cascading countryName with null 
2016-10-10 18:54:00.856 - TRACE - [main] AnnotationBinder:processElementAnnotations:1674 :: Processing annotations of org.total.spring.entity.Country.teams 
2016-10-10 18:54:00.856 - DEBUG - [main] Ejb3Column:bind:240 :: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='country'} 
2016-10-10 18:54:00.857 - DEBUG - [main] Ejb3Column:bind:240 :: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Country), mappingColumn=teams, insertable=true, updatable=true, unique=false} 
2016-10-10 18:54:00.857 - DEBUG - [main] Ejb3Column:bind:240 :: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Country), mappingColumn=null, insertable=true, updatable=true, unique=false} 
2016-10-10 18:54:00.858 - DEBUG - [main] Ejb3Column:bind:240 :: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Country), mappingColumn=element, insertable=true, updatable=true, unique=false} 
2016-10-10 18:54:00.859 - DEBUG - [main] Ejb3Column:bind:240 :: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Country), mappingColumn=teams_KEY, insertable=true, updatable=true, unique=false} 
2016-10-10 18:54:00.859 - DEBUG - [main] Ejb3Column:bind:240 :: Binding column: Ejb3JoinColumn{logicalColumnName='teams_KEY', referencedColumn='null', mappedBy='null'} 
2016-10-10 18:54:00.860 - DEBUG - [main] Ejb3Column:bind:240 :: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='country'} 
2016-10-10 18:54:00.860 - DEBUG - [main] Ejb3Column:bind:240 :: Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='country'} 
2016-10-10 18:54:00.860 - DEBUG - [main] CollectionBinder:bind:401 :: Collection role: org.total.spring.entity.Country.teams 
2016-10-10 18:54:00.861 - DEBUG - [main] PropertyBinder:makeProperty:271 :: Building property teams 
2016-10-10 18:54:00.861 - TRACE - [main] PropertyBinder:makeProperty:329 :: Cascading teams with none 
2016-10-10 18:54:00.862 - DEBUG - [main] AnnotationBinder:bindClass:601 :: Binding entity from annotated class: org.total.spring.entity.Team 
2016-10-10 18:54:00.863 - DEBUG - [main] Ejb3Column:bind:240 :: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} 
2016-10-10 18:54:00.863 - DEBUG - [main] EntityBinder:bindEntity:399 :: Import with entity name Team 
2016-10-10 18:54:00.863 - DEBUG - [main] EntityBinder:bindTable:612 :: Bind entity org.total.spring.entity.Team on table Team 
2016-10-10 18:54:00.867 - TRACE - [main] AnnotationBinder:processElementAnnotations:1674 :: Processing annotations of org.total.spring.entity.Team.teamId 
2016-10-10 18:54:00.868 - DEBUG - [main] Ejb3Column:bind:240 :: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Team), mappingColumn=teamId, insertable=true, updatable=true, unique=true} 
2016-10-10 18:54:00.869 - DEBUG - [main] PropertyBinder:makePropertyAndValue:185 :: MetadataSourceProcessor property teamId with lazy=false 
2016-10-10 18:54:00.869 - DEBUG - [main] AbstractPropertyHolder:resolveAttributeConverterDefinition:106 :: Attempting to locate auto-apply AttributeConverter for property [org.total.spring.entity.Team:teamId] 
2016-10-10 18:54:00.870 - DEBUG - [main] SimpleValueBinder:make:388 :: building SimpleValue for teamId 
2016-10-10 18:54:00.871 - DEBUG - [main] PropertyBinder:makeProperty:271 :: Building property teamId 
2016-10-10 18:54:00.871 - TRACE - [main] PropertyBinder:makeProperty:329 :: Cascading teamId with null 
2016-10-10 18:54:00.872 - TRACE - [main] AnnotationBinder:processId:2365 :: Bind @Id on teamId 
2016-10-10 18:54:00.872 - TRACE - [main] AnnotationBinder:processElementAnnotations:1674 :: Processing annotations of org.total.spring.entity.Team.country 
2016-10-10 18:54:00.873 - DEBUG - [main] Ejb3Column:bind:240 :: Binding column: Ejb3JoinColumn{logicalColumnName='countryId', referencedColumn='', mappedBy=''} 
2016-10-10 18:54:00.874 - DEBUG - [main] Ejb3Column:bind:240 :: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Team), mappingColumn=country, insertable=true, updatable=true, unique=false} 
2016-10-10 18:54:00.876 - DEBUG - [main] PropertyBinder:makeProperty:271 :: Building property country 
2016-10-10 18:54:00.877 - TRACE - [main] PropertyBinder:makeProperty:329 :: Cascading country with none 
2016-10-10 18:54:00.877 - TRACE - [main] AnnotationBinder:processElementAnnotations:1674 :: Processing annotations of org.total.spring.entity.Team.teamName 
2016-10-10 18:54:00.878 - DEBUG - [main] Ejb3Column:bind:240 :: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Team), mappingColumn=teamName, insertable=true, updatable=true, unique=true} 
2016-10-10 18:54:00.879 - DEBUG - [main] PropertyBinder:makePropertyAndValue:185 :: MetadataSourceProcessor property teamName with lazy=false 
2016-10-10 18:54:00.879 - DEBUG - [main] AbstractPropertyHolder:resolveAttributeConverterDefinition:106 :: Attempting to locate auto-apply AttributeConverter for property [org.total.spring.entity.Team:teamName] 
2016-10-10 18:54:00.880 - DEBUG - [main] SimpleValueBinder:make:388 :: building SimpleValue for teamName 
2016-10-10 18:54:00.880 - DEBUG - [main] PropertyBinder:makeProperty:271 :: Building property teamName 
2016-10-10 18:54:00.881 - TRACE - [main] PropertyBinder:makeProperty:329 :: Cascading teamName with null 
2016-10-10 18:54:00.881 - DEBUG - [main] AnnotationBinder:bindClass:601 :: Binding entity from annotated class: org.total.spring.entity.User 
2016-10-10 18:54:00.882 - DEBUG - [main] Ejb3Column:bind:240 :: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} 
2016-10-10 18:54:00.883 - DEBUG - [main] EntityBinder:bindEntity:399 :: Import with entity name User 
2016-10-10 18:54:00.884 - DEBUG - [main] EntityBinder:bindTable:612 :: Bind entity org.total.spring.entity.User on table User 
2016-10-10 18:54:00.890 - TRACE - [main] AnnotationBinder:processElementAnnotations:1674 :: Processing annotations of org.total.spring.entity.User.userId 
2016-10-10 18:54:00.891 - DEBUG - [main] Ejb3Column:bind:240 :: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=userId, insertable=true, updatable=true, unique=true} 
2016-10-10 18:54:00.892 - DEBUG - [main] PropertyBinder:makePropertyAndValue:185 :: MetadataSourceProcessor property userId with lazy=false 
2016-10-10 18:54:00.893 - DEBUG - [main] AbstractPropertyHolder:resolveAttributeConverterDefinition:106 :: Attempting to locate auto-apply AttributeConverter for property [org.total.spring.entity.User:userId] 
2016-10-10 18:54:00.894 - DEBUG - [main] SimpleValueBinder:make:388 :: building SimpleValue for userId 
2016-10-10 18:54:00.896 - DEBUG - [main] PropertyBinder:makeProperty:271 :: Building property userId 
2016-10-10 18:54:00.897 - TRACE - [main] PropertyBinder:makeProperty:329 :: Cascading userId with null 
2016-10-10 18:54:00.897 - TRACE - [main] AnnotationBinder:processId:2365 :: Bind @Id on userId 
2016-10-10 18:54:00.898 - TRACE - [main] AnnotationBinder:processElementAnnotations:1674 :: Processing annotations of org.total.spring.entity.User.password 
2016-10-10 18:54:00.898 - DEBUG - [main] Ejb3Column:bind:240 :: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=password, insertable=true, updatable=true, unique=false} 
2016-10-10 18:54:00.899 - DEBUG - [main] PropertyBinder:makePropertyAndValue:185 :: MetadataSourceProcessor property password with lazy=false 
2016-10-10 18:54:00.900 - DEBUG - [main] AbstractPropertyHolder:resolveAttributeConverterDefinition:106 :: Attempting to locate auto-apply AttributeConverter for property [org.total.spring.entity.User:password] 
2016-10-10 18:54:00.900 - DEBUG - [main] SimpleValueBinder:make:388 :: building SimpleValue for password 
2016-10-10 18:54:00.901 - DEBUG - [main] PropertyBinder:makeProperty:271 :: Building property password 
2016-10-10 18:54:00.901 - TRACE - [main] PropertyBinder:makeProperty:329 :: Cascading password with null 
2016-10-10 18:54:00.902 - TRACE - [main] AnnotationBinder:processElementAnnotations:1674 :: Processing annotations of org.total.spring.entity.User.roles 
2016-10-10 18:54:00.902 - DEBUG - [main] Ejb3Column:bind:240 :: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=null, insertable=true, updatable=true, unique=false} 
2016-10-10 18:54:00.903 - DEBUG - [main] Ejb3Column:bind:240 :: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=element, insertable=true, updatable=true, unique=false} 
2016-10-10 18:54:00.904 - DEBUG - [main] Ejb3Column:bind:240 :: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false} 
2016-10-10 18:54:00.905 - DEBUG - [main] Ejb3Column:bind:240 :: Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'} 
2016-10-10 18:54:00.906 - DEBUG - [main] Ejb3Column:bind:240 :: Binding column: Ejb3JoinColumn{logicalColumnName='userId', referencedColumn='', mappedBy=''} 
2016-10-10 18:54:00.906 - DEBUG - [main] Ejb3Column:bind:240 :: Binding column: Ejb3JoinColumn{logicalColumnName='roleId', referencedColumn='', mappedBy=''} 
2016-10-10 18:54:00.907 - DEBUG - [main] CollectionBinder:bind:401 :: Collection role: org.total.spring.entity.User.roles 
2016-10-10 18:54:00.907 - DEBUG - [main] PropertyBinder:makeProperty:271 :: Building property roles 
2016-10-10 18:54:00.908 - TRACE - [main] PropertyBinder:makeProperty:329 :: Cascading roles with all 
2016-10-10 18:54:00.909 - TRACE - [main] AnnotationBinder:processElementAnnotations:1674 :: Processing annotations of org.total.spring.entity.User.userName 
2016-10-10 18:54:00.909 - DEBUG - [main] Ejb3Column:bind:240 :: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=userName, insertable=true, updatable=true, unique=true} 
2016-10-10 18:54:00.910 - DEBUG - [main] PropertyBinder:makePropertyAndValue:185 :: MetadataSourceProcessor property userName with lazy=false 
2016-10-10 18:54:00.911 - DEBUG - [main] AbstractPropertyHolder:resolveAttributeConverterDefinition:106 :: Attempting to locate auto-apply AttributeConverter for property [org.total.spring.entity.User:userName] 
2016-10-10 18:54:00.911 - DEBUG - [main] SimpleValueBinder:make:388 :: building SimpleValue for userName 
2016-10-10 18:54:00.912 - DEBUG - [main] PropertyBinder:makeProperty:271 :: Building property userName 
2016-10-10 18:54:00.913 - TRACE - [main] PropertyBinder:makeProperty:329 :: Cascading userName with null 
2016-10-10 18:54:00.914 - DEBUG - [main] SimpleValueBinder:fillSimpleValue:428 :: Starting fillSimpleValue for roleId 
2016-10-10 18:54:00.915 - DEBUG - [main] SimpleValueBinder:fillSimpleValue:428 :: Starting fillSimpleValue for roleType 
2016-10-10 18:54:00.916 - DEBUG - [main] SimpleValueBinder:fillSimpleValue:428 :: Starting fillSimpleValue for countryId 
2016-10-10 18:54:00.917 - DEBUG - [main] SimpleValueBinder:fillSimpleValue:428 :: Starting fillSimpleValue for countryCode 
2016-10-10 18:54:00.918 - DEBUG - [main] SimpleValueBinder:fillSimpleValue:428 :: Starting fillSimpleValue for countryName 
2016-10-10 18:54:00.919 - DEBUG - [main] SimpleValueBinder:fillSimpleValue:428 :: Starting fillSimpleValue for teamId 
2016-10-10 18:54:00.920 - DEBUG - [main] SimpleValueBinder:fillSimpleValue:428 :: Starting fillSimpleValue for teamName 
2016-10-10 18:54:00.920 - DEBUG - [main] SimpleValueBinder:fillSimpleValue:428 :: Starting fillSimpleValue for userId 
2016-10-10 18:54:00.921 - DEBUG - [main] SimpleValueBinder:fillSimpleValue:428 :: Starting fillSimpleValue for password 
2016-10-10 18:54:00.922 - DEBUG - [main] SimpleValueBinder:fillSimpleValue:428 :: Starting fillSimpleValue for userName 
2016-10-10 18:54:00.923 - DEBUG - [main] Configuration:processFkSecondPassInOrder:1484 :: Processing fk mappings (*ToOne and JoinedSubclass) 
2016-10-10 18:54:00.946 - DEBUG - [main] Configuration:originalSecondPassCompile:1689 :: Processing extends queue 
2016-10-10 18:54:00.947 - DEBUG - [main] Configuration:processExtendsQueue:1747 :: Processing extends queue 
2016-10-10 18:54:00.947 - DEBUG - [main] Configuration:originalSecondPassCompile:1692 :: Processing collection mappings 
2016-10-10 18:54:00.947 - DEBUG - [main] CollectionSecondPass:doSecondPass:67 :: Second pass for collection: org.total.spring.entity.User.roles 
2016-10-10 18:54:00.948 - DEBUG - [main] CollectionBinder:bindManyToManySecondPass:1127 :: Binding as ManyToMany: org.total.spring.entity.User.roles 
2016-10-10 18:54:00.954 - DEBUG - [main] CollectionSecondPass:doSecondPass:84 :: Mapped collection key: userId, element: roleId 
2016-10-10 18:54:00.955 - DEBUG - [main] CollectionSecondPass:doSecondPass:67 :: Second pass for collection: org.total.spring.entity.Role.users 
2016-10-10 18:54:00.957 - DEBUG - [main] CollectionBinder:bindManyToManySecondPass:1127 :: Binding as ManyToMany: org.total.spring.entity.Role.users 
2016-10-10 18:54:00.958 - DEBUG - [main] TableBinder:bindFk:414 :: Retrieving property org.total.spring.entity.User.roles 
2016-10-10 18:54:00.959 - DEBUG - [main] CollectionSecondPass:doSecondPass:84 :: Mapped collection key: roleId, element: userId 
2016-10-10 18:54:00.959 - DEBUG - [main] CollectionSecondPass:doSecondPass:67 :: Second pass for collection: org.total.spring.entity.Country.teams 
2016-10-10 18:54:00.960 - DEBUG - [main] CollectionBinder:bindOneToManySecondPass:824 :: Binding a OneToMany: org.total.spring.entity.Country.teams through a foreign key 
2016-10-10 18:54:00.961 - DEBUG - [main] CollectionBinder:bindOneToManySecondPass:862 :: Mapping collection: org.total.spring.entity.Country.teams -> Team 
2016-10-10 18:54:00.961 - DEBUG - [main] TableBinder:bindFk:414 :: Retrieving property org.total.spring.entity.Team.country 
2016-10-10 18:54:00.963 - DEBUG - [main] CollectionSecondPass:doSecondPass:84 :: Mapped collection key: countryId, one-to-many: org.total.spring.entity.Team 
2016-10-10 18:54:00.964 - DEBUG - [main] Configuration:originalSecondPassCompile:1702 :: Processing native query and ResultSetMapping mappings 
2016-10-10 18:54:00.965 - DEBUG - [main] Configuration:originalSecondPassCompile:1710 :: Processing association property references 
2016-10-10 18:54:00.965 - DEBUG - [main] Configuration:originalSecondPassCompile:1732 :: Creating tables' unique integer identifiers 
2016-10-10 18:54:00.966 - DEBUG - [main] Configuration:originalSecondPassCompile:1733 :: Processing foreign key constraints 
2016-10-10 18:54:00.967 - DEBUG - [main] Configuration:secondPassCompileForeignKeys:1804 :: Resolving reference to class: org.total.spring.entity.Country 
2016-10-10 18:54:00.967 - DEBUG - [main] Configuration:secondPassCompileForeignKeys:1804 :: Resolving reference to class: org.total.spring.entity.Role 
2016-10-10 18:54:00.968 - DEBUG - [main] Configuration:secondPassCompileForeignKeys:1804 :: Resolving reference to class: org.total.spring.entity.User 
2016-10-10 18:54:00.984 - TRACE - [main] AbstractServiceRegistryImpl:initializeService:221 :: Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] 
2016-10-10 18:54:00.985 - DEBUG - [main] JtaPlatformInitiator:initiateService:59 :: No JtaPlatform was specified, checking resolver 
2016-10-10 18:54:00.986 - TRACE - [main] AbstractServiceRegistryImpl:initializeService:221 :: Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatformResolver] 
2016-10-10 18:54:00.988 - DEBUG - [main] JtaPlatformResolverInitiator:initiateService:50 :: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] 
2016-10-10 18:54:00.993 - DEBUG - [main] StandardJtaPlatformResolver:resolveJtaPlatform:118 :: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform] 
2016-10-10 18:54:00.997 - DEBUG - [main] SettingsFactory:buildSettings:122 :: Automatic flush during beforeCompletion(): disabled 
2016-10-10 18:54:00.998 - DEBUG - [main] SettingsFactory:buildSettings:128 :: Automatic session close at end of transaction: disabled 
2016-10-10 18:54:00.999 - DEBUG - [main] SettingsFactory:buildSettings:155 :: Scrollable result sets: disabled 
2016-10-10 18:54:00.999 - DEBUG - [main] SettingsFactory:buildSettings:161 :: Wrap result sets: disabled 
2016-10-10 18:54:00.999 - DEBUG - [main] SettingsFactory:buildSettings:167 :: JDBC3 getGeneratedKeys(): disabled 
2016-10-10 18:54:01.000 - DEBUG - [main] SettingsFactory:buildSettings:179 :: multi-tenancy strategy : NONE 
2016-10-10 18:54:01.000 - DEBUG - [main] SettingsFactory:buildSettings:185 :: Connection release mode: auto 
2016-10-10 18:54:01.000 - TRACE - [main] AbstractServiceRegistryImpl:initializeService:221 :: Initializing service [role=org.hibernate.engine.transaction.spi.TransactionFactory] 
2016-10-10 18:54:01.003 - TRACE - [main] BatchFetchStyle:interpret:68 :: Interpreting BatchFetchStyle from setting : null 
2016-10-10 18:54:01.004 - DEBUG - [main] SettingsFactory:buildSettings:207 :: Using BatchFetchStyle : LEGACY 
2016-10-10 18:54:01.004 - DEBUG - [main] SettingsFactory:buildSettings:226 :: Maximum outer join fetch depth: 2 
2016-10-10 18:54:01.004 - DEBUG - [main] SettingsFactory:buildSettings:232 :: Default batch fetch size: 1 
2016-10-10 18:54:01.005 - DEBUG - [main] SettingsFactory:buildSettings:238 :: Generate SQL with comments: disabled 
2016-10-10 18:54:01.005 - DEBUG - [main] SettingsFactory:buildSettings:244 :: Order SQL updates by primary key: enabled 
2016-10-10 18:54:01.005 - DEBUG - [main] SettingsFactory:buildSettings:250 :: Order SQL inserts for batching: disabled 
2016-10-10 18:54:01.006 - DEBUG - [main] SettingsFactory:buildSettings:258 :: Default null ordering: none 
2016-10-10 18:54:01.006 - DEBUG - [main] SettingsFactory:createQueryTranslatorFactory:501 :: Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory 
2016-10-10 18:54:01.009 -  INFO - [main] ASTQueryTranslatorFactory:<init>:47 :: HHH000397: Using ASTQueryTranslatorFactory 
2016-10-10 18:54:01.010 - DEBUG - [main] SettingsFactory:buildSettings:268 :: Query language substitutions: {} 
2016-10-10 18:54:01.010 - DEBUG - [main] SettingsFactory:buildSettings:274 :: JPA-QL strict compliance: disabled 
2016-10-10 18:54:01.011 - DEBUG - [main] SettingsFactory:buildSettings:282 :: Second-level cache: enabled 
2016-10-10 18:54:01.011 - DEBUG - [main] SettingsFactory:buildSettings:288 :: Query cache: disabled 
2016-10-10 18:54:01.011 - TRACE - [main] AbstractServiceRegistryImpl:initializeService:221 :: Initializing service [role=org.hibernate.cache.spi.RegionFactory] 
2016-10-10 18:54:01.013 - DEBUG - [main] RegionFactoryInitiator:initiateService:105 :: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory 
2016-10-10 18:54:01.016 - DEBUG - [main] SettingsFactory:buildSettings:301 :: Optimize cache for minimal puts: disabled 
2016-10-10 18:54:01.016 - DEBUG - [main] SettingsFactory:buildSettings:316 :: Structured second-level cache entries: disabled 
2016-10-10 18:54:01.017 - DEBUG - [main] SettingsFactory:buildSettings:326 :: Second-level cache direct-reference entries: disabled 
2016-10-10 18:54:01.017 - DEBUG - [main] SettingsFactory:buildSettings:332 :: Automatic eviction of collection cache: disabled 
2016-10-10 18:54:01.018 - DEBUG - [main] SettingsFactory:buildSettings:340 :: Statistics: disabled 
2016-10-10 18:54:01.018 - DEBUG - [main] SettingsFactory:buildSettings:346 :: Deleted entity synthetic identifier rollback: disabled 
2016-10-10 18:54:01.019 - DEBUG - [main] SettingsFactory:buildSettings:373 :: Default entity-mode: pojo 
2016-10-10 18:54:01.019 - DEBUG - [main] SettingsFactory:buildSettings:379 :: Named query checking : enabled 
2016-10-10 18:54:01.020 - DEBUG - [main] SettingsFactory:buildSettings:385 :: Check Nullability in Core (should be disabled when Bean Validation is on): enabled 
2016-10-10 18:54:01.020 - DEBUG - [main] SettingsFactory:buildSettings:403 :: Allow initialization of lazy state outside session : : disabled 
2016-10-10 18:54:01.021 - DEBUG - [main] SettingsFactory:buildSettings:413 :: JTA Track by Thread: enabled 
2016-10-10 18:54:01.029 - DEBUG - [main] SessionFactoryImpl:<init>:229 :: Building session factory 
2016-10-10 18:54:01.030 - TRACE - [main] AbstractServiceRegistryImpl:initializeService:221 :: Initializing service [role=org.hibernate.service.spi.SessionFactoryServiceRegistryFactory] 
2016-10-10 18:54:01.035 - TRACE - [main] AbstractServiceRegistryImpl:initializeService:221 :: Initializing service [role=org.hibernate.engine.spi.CacheImplementor] 
2016-10-10 18:54:01.038 - TRACE - [main] TypeFactory$TypeScopeImpl:injectSessionFactory:72 :: Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@4fbdc0f0 
2016-10-10 18:54:01.040 - DEBUG - [main] SessionFactoryImpl:<init>:285 :: Session factory constructed with filter configurations : {} 
2016-10-10 18:54:01.041 - DEBUG - [main] SessionFactoryImpl:<init>:286 :: Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Windows 7, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_92\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_92\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_92\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_92\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_92\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_92\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_92\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_92\jre\classes, hibernate.temp.use_jdbc_metadata_defaults=false, sun.desktop=windows, hibernate.c3p0.max_size=20, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_92-b14, hibernate.c3p0.min_size=10, user.name=pavlo.fandych, javax.persistence.validation.mode=AUTO, idea.launcher.bin.path=C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 14.0.3\bin, hibernate.c3p0.timeout=1800, user.language=en, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_92\jre\bin, java.version=1.8.0_92, user.timezone=Europe/Helsinki, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_92\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=US, java.home=C:\Program Files\Java\jdk1.8.0_92\jre, java.vm.info=mixed mode, os.version=6.1, path.separator=;, java.vm.version=25.92-b14, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.order_updates=true, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, user.script=, hibernate.globally_quoted_identifiers=false, user.home=C:\Users\pavlo.fandych, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.8.0_92\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0;C:\Program Files\Java\jdk1.8.0_92\bin;D:\tools\eclipse36\plugins\org.apache.ant_1.7.1.v20100518-1145\bin;D:\apache-maven-3.2.5\bin;C:\Program Files (x86)\OpenSSH\bin;C:\Program Files (x86)\Skype\Phone\;C:\Program Files\TortoiseSVN\bin;., java.vendor.url=http://java.oracle.com/, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.ejb.persistenceUnitName=default, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=com.intellij.rt.execution.application.AppMain com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 org.total.spring.TestDrive,createUserTest, java.class.path=C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 14.0.3\lib\idea_rt.jar;C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 14.0.3\plugins\junit\lib\junit-rt.jar;C:\Program Files\Java\jdk1.8.0_92\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_92\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_92\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_92\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_92\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_92\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_92\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_92\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_92\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_92\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_92\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_92\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_92\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_92\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_92\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_92\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_92\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_92\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_92\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_92\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_92\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_92\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_92\jre\lib\ext\zipfs.jar;D:\IdeaProjects\SpringMVC\target\test-classes;D:\IdeaProjects\SpringMVC\target\classes;C:\Users\pavlo.fandych\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\pavlo.fandych\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\pavlo.fandych\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\pavlo.fandych\.m2\repository\org\slf4j\slf4j-simple\1.7.5\slf4j-simple-1.7.5.jar;C:\Users\pavlo.fandych\.m2\repository\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;C:\Users\pavlo.fandych\.m2\repository\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;C:\Users\pavlo.fandych\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\pavlo.fandych\.m2\repository\taglibs\standard\1.1.2\standard-1.1.2.jar;C:\Users\pavlo.fandych\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.5-b10\jaxb-impl-2.2.5-b10.jar;C:\Users\pavlo.fandych\.m2\repository\joda-time\joda-time\2.9.4\joda-time-2.9.4.jar;C:\Users\pavlo.fandych\.m2\repository\org\jadira\usertype\usertype.core\3.2.0.GA\usertype.core-3.2.0.GA.jar;C:\Users\pavlo.fandych\.m2\repository\org\jadira\usertype\usertype.spi\3.2.0.GA\usertype.spi-3.2.0.GA.jar;C:\Users\pavlo.fandych\.m2\repository\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;C:\Users\pavlo.fandych\.m2\repository\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;C:\Users\pavlo.fandych\.m2\repository\commons-codec\commons-codec\1.9\commons-codec-1.9.jar;C:\Users\pavlo.fandych\.m2\repository\org\springframework\spring-context\4.3.3.RELEASE\spring-context-4.3.3.RELEASE.jar;C:\Users\pavlo.fandych\.m2\repository\org\springframework\spring-aop\4.3.3.RELEASE\spring-aop-4.3.3.RELEASE.jar;C:\Users\pavlo.fandych\.m2\repository\org\springframework\spring-beans\4.3.3.RELEASE\spring-beans-4.3.3.RELEASE.jar;C:\Users\pavlo.fandych\.m2\repository\org\springframework\spring-core\4.3.3.RELEASE\spring-core-4.3.3.RELEASE.jar;C:\Users\pavlo.fandych\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\pavlo.fandych\.m2\repository\org\springframework\spring-expression\4.3.3.RELEASE\spring-expression-4.3.3.RELEASE.jar;C:\Users\pavlo.fandych\.m2\repository\org\springframework\spring-orm\4.3.3.RELEASE\spring-orm-4.3.3.RELEASE.jar;C:\Users\pavlo.fandych\.m2\repository\org\springframework\spring-jdbc\4.3.3.RELEASE\spring-jdbc-4.3.3.RELEASE.jar;C:\Users\pavlo.fandych\.m2\repository\org\springframework\spring-tx\4.3.3.RELEASE\spring-tx-4.3.3.RELEASE.jar;C:\Users\pavlo.fandych\.m2\repository\org\springframework\data\spring-data-jpa\1.10.1.RELEASE\spring-data-jpa-1.10.1.RELEASE.jar;C:\Users\pavlo.fandych\.m2\repository\org\springframework\data\spring-data-commons\1.12.1.RELEASE\spring-data-commons-1.12.1.RELEASE.jar;C:\Users\pavlo.fandych\.m2\repository\org\aspectj\aspectjrt\1.8.9\aspectjrt-1.8.9.jar;C:\Users\pavlo.fandych\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.19\jcl-over-slf4j-1.7.19.jar;C:\Users\pavlo.fandych\.m2\repository\org\springframework\spring-web\4.3.3.RELEASE\spring-web-4.3.3.RELEASE.jar;C:\Users\pavlo.fandych\.m2\repository\org\springframework\spring-webmvc\4.3.3.RELEASE\spring-webmvc-4.3.3.RELEASE.jar;C:\Users\pavlo.fandych\.m2\repository\mysql\mysql-connector-java\5.1.34\mysql-connector-java-5.1.34.jar;C:\Users\pavlo.fandych\.m2\repository\org\hibernate\hibernate-core\4.3.10.Final\hibernate-core-4.3.10.Final.jar;C:\Users\pavlo.fandych\.m2\repository\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;C:\Users\pavlo.fandych\.m2\repository\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;C:\Users\pavlo.fandych\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;C:\Users\pavlo.fandych\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\pavlo.fandych\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\pavlo.fandych\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.5.Final\hibernate-commons-annotations-4.0.5.Final.jar;C:\Users\pavlo.fandych\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\pavlo.fandych\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\pavlo.fandych\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\pavlo.fandych\.m2\repository\org\jboss\jandex\1.1.0.Final\jandex-1.1.0.Final.jar;C:\Users\pavlo.fandych\.m2\repository\org\hibernate\hibernate-entitymanager\4.3.10.Final\hibernate-entitymanager-4.3.10.Final.jar;C:\Users\pavlo.fandych\.m2\repository\org\hibernate\hibernate-c3p0\4.3.6.Final\hibernate-c3p0-4.3.6.Final.jar;C:\Users\pavlo.fandych\.m2\repository\com\mchange\c3p0\0.9.2.1\c3p0-0.9.2.1.jar;C:\Users\pavlo.fandych\.m2\repository\com\mchange\mchange-commons-java\0.2.3.4\mchange-commons-java-0.2.3.4.jar;C:\Users\pavlo.fandych\.m2\repository\c3p0\c3p0\0.9.1.2\c3p0-0.9.1.2.jar, hibernate.bytecode.use_reflection_optimizer=false, idea.launcher.port=7534, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, javax.persistence.nonJtaDataSource=org.apache.commons.dbcp.BasicDataSource@2d0399f4, sun.cpu.endian=little, sun.os.patch.level=Service Pack 1, java.io.tmpdir=C:\Users\PAVLO~1.FAN\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_92\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=D:\IdeaProjects\SpringMVC, hibernate.c3p0.idle_test_period=3000, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.c3p0.acquire_increment=1, file.encoding=UTF-8, java.specification.version=1.8, hibernate.c3p0.max_statements=50} 
2016-10-10 18:54:01.063 - TRACE - [main] AbstractServiceRegistryImpl:initializeService:221 :: Initializing service [role=org.hibernate.engine.query.spi.NativeQueryInterpreter] 
2016-10-10 18:54:01.067 - DEBUG - [main] JaccIntegrator:doIntegration:90 :: Skipping JACC integration as it was not enabled 
2016-10-10 18:54:01.071 - TRACE - [main] CascadeStyles:registerCascadeStyle:282 :: Registering external cascade style [persist : STYLE_PERSIST_SKIPLAZY] 
2016-10-10 18:54:01.071 - DEBUG - [main] CascadeStyles:registerCascadeStyle:285 :: External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST] 
2016-10-10 18:54:01.072 - TRACE - [main] AbstractServiceRegistryImpl:initializeService:221 :: Initializing service [role=org.hibernate.event.service.spi.EventListenerRegistry] 
2016-10-10 18:54:01.468 - DEBUG - [main] DefaultIdentifierGeneratorFactory:setDialect:107 :: Setting dialect [org.hibernate.dialect.MySQLDialect] 
2016-10-10 18:54:01.469 - DEBUG - [main] DefaultIdentifierGeneratorFactory:setDialect:107 :: Setting dialect [org.hibernate.dialect.MySQLDialect] 
2016-10-10 18:54:01.470 - DEBUG - [main] DefaultIdentifierGeneratorFactory:setDialect:107 :: Setting dialect [org.hibernate.dialect.MySQLDialect] 
2016-10-10 18:54:01.470 - DEBUG - [main] DefaultIdentifierGeneratorFactory:setDialect:107 :: Setting dialect [org.hibernate.dialect.MySQLDialect] 
2016-10-10 18:54:01.471 - TRACE - [main] AbstractServiceRegistryImpl:initializeService:221 :: Initializing service [role=org.hibernate.persister.spi.PersisterFactory] 
2016-10-10 18:54:01.476 - TRACE - [main] AbstractServiceRegistryImpl:initializeService:221 :: Initializing service [role=org.hibernate.persister.spi.PersisterClassResolver] 
2016-10-10 18:54:01.534 - TRACE - [main] AbstractPropertyMapping:addPropertyPath:143 :: Skipping duplicate registration of path [roleType], existing type = [org.hibernate.type.CustomType@6b04acb2], incoming type = [org.hibernate.type.CustomType@6b04acb2] 
2016-10-10 18:54:01.535 - TRACE - [main] AbstractPropertyMapping:addPropertyPath:143 :: Skipping duplicate registration of path [users], existing type = [org.hibernate.type.SetType(org.total.spring.entity.Role.users)], incoming type = [org.hibernate.type.SetType(org.total.spring.entity.Role.users)] 
2016-10-10 18:54:01.549 - TRACE - [main] AbstractPropertyMapping:addPropertyPath:143 :: Skipping duplicate registration of path [countryCode], existing type = [org.hibernate.type.CustomType@2f4919b0], incoming type = [org.hibernate.type.CustomType@2f4919b0] 
2016-10-10 18:54:01.550 - TRACE - [main] AbstractPropertyMapping:addPropertyPath:143 :: Skipping duplicate registration of path [countryName], existing type = [org.hibernate.type.StringType@4b9df8a], incoming type = [org.hibernate.type.StringType@4b9df8a] 
2016-10-10 18:54:01.551 - TRACE - [main] AbstractPropertyMapping:addPropertyPath:143 :: Skipping duplicate registration of path [teams], existing type = [org.hibernate.type.SetType(org.total.spring.entity.Country.teams)], incoming type = [org.hibernate.type.SetType(org.total.spring.entity.Country.teams)] 
2016-10-10 18:54:01.563 - TRACE - [main] AbstractPropertyMapping:addPropertyPath:143 :: Skipping duplicate registration of path [country.id], existing type = [org.hibernate.type.LongType@77d2e85], incoming type = [org.hibernate.type.LongType@77d2e85] 
2016-10-10 18:54:01.564 - TRACE - [main] AbstractPropertyMapping:addPropertyPath:143 :: Skipping duplicate registration of path [country.countryId], existing type = [org.hibernate.type.LongType@77d2e85], incoming type = [org.hibernate.type.LongType@77d2e85] 
2016-10-10 18:54:01.565 - TRACE - [main] AbstractPropertyMapping:addPropertyPath:143 :: Skipping duplicate registration of path [country], existing type = [org.hibernate.type.ManyToOneType(org.total.spring.entity.Country)], incoming type = [org.hibernate.type.ManyToOneType(org.total.spring.entity.Country)] 
2016-10-10 18:54:01.566 - TRACE - [main] AbstractPropertyMapping:addPropertyPath:143 :: Skipping duplicate registration of path [country.id], existing type = [org.hibernate.type.LongType@77d2e85], incoming type = [org.hibernate.type.LongType@77d2e85] 
2016-10-10 18:54:01.567 - TRACE - [main] AbstractPropertyMapping:addPropertyPath:143 :: Skipping duplicate registration of path [country.id], existing type = [org.hibernate.type.LongType@77d2e85], incoming type = [org.hibernate.type.LongType@77d2e85] 
2016-10-10 18:54:01.568 - TRACE - [main] AbstractPropertyMapping:addPropertyPath:143 :: Skipping duplicate registration of path [country.countryId], existing type = [org.hibernate.type.LongType@77d2e85], incoming type = [org.hibernate.type.LongType@77d2e85] 
2016-10-10 18:54:01.569 - TRACE - [main] AbstractPropertyMapping:addPropertyPath:143 :: Skipping duplicate registration of path [country.countryId], existing type = [org.hibernate.type.LongType@77d2e85], incoming type = [org.hibernate.type.LongType@77d2e85] 
2016-10-10 18:54:01.570 - TRACE - [main] AbstractPropertyMapping:addPropertyPath:143 :: Skipping duplicate registration of path [teamName], existing type = [org.hibernate.type.StringType@4b9df8a], incoming type = [org.hibernate.type.StringType@4b9df8a] 
2016-10-10 18:54:01.573 - TRACE - [main] AbstractPropertyMapping:addPropertyPath:143 :: Skipping duplicate registration of path [password], existing type = [org.hibernate.type.StringType@4b9df8a], incoming type = [org.hibernate.type.StringType@4b9df8a] 
2016-10-10 18:54:01.574 - TRACE - [main] AbstractPropertyMapping:addPropertyPath:143 :: Skipping duplicate registration of path [roles], existing type = [org.hibernate.type.SetType(org.total.spring.entity.User.roles)], incoming type = [org.hibernate.type.SetType(org.total.spring.entity.User.roles)] 
2016-10-10 18:54:01.575 - TRACE - [main] AbstractPropertyMapping:addPropertyPath:143 :: Skipping duplicate registration of path [userName], existing type = [org.hibernate.type.StringType@4b9df8a], incoming type = [org.hibernate.type.StringType@4b9df8a] 
2016-10-10 18:54:01.589 - DEBUG - [main] AbstractCollectionPersister:logStaticSQL:683 :: Static SQL for collection: org.total.spring.entity.User.roles 
2016-10-10 18:54:01.590 - DEBUG - [main] AbstractCollectionPersister:logStaticSQL:684 ::  Row insert: insert into User_Role (userId, roleId) values (?, ?) 
2016-10-10 18:54:01.590 - DEBUG - [main] AbstractCollectionPersister:logStaticSQL:685 ::  Row update: update User_Role set roleId=? where userId=? and roleId=? 
2016-10-10 18:54:01.591 - DEBUG - [main] AbstractCollectionPersister:logStaticSQL:686 ::  Row delete: delete from User_Role where userId=? and roleId=? 
2016-10-10 18:54:01.591 - DEBUG - [main] AbstractCollectionPersister:logStaticSQL:687 ::  One-shot delete: delete from User_Role where userId=? 
2016-10-10 18:54:01.594 - DEBUG - [main] AbstractCollectionPersister:logStaticSQL:683 :: Static SQL for collection: org.total.spring.entity.Country.teams 
2016-10-10 18:54:01.595 - DEBUG - [main] AbstractCollectionPersister:logStaticSQL:684 ::  Row insert: update Team set countryId=? where teamId=? 
2016-10-10 18:54:01.595 - DEBUG - [main] AbstractCollectionPersister:logStaticSQL:685 ::  Row update: update Team set  where teamId=? 
2016-10-10 18:54:01.596 - DEBUG - [main] AbstractCollectionPersister:logStaticSQL:686 ::  Row delete: update Team set countryId=null where countryId=? and teamId=? 
2016-10-10 18:54:01.597 - DEBUG - [main] AbstractCollectionPersister:logStaticSQL:687 ::  One-shot delete: update Team set countryId=null where countryId=? 
2016-10-10 18:54:01.597 - DEBUG - [main] AbstractCollectionPersister:logStaticSQL:683 :: Static SQL for collection: org.total.spring.entity.Role.users 
2016-10-10 18:54:01.598 - DEBUG - [main] AbstractCollectionPersister:logStaticSQL:684 ::  Row insert: insert into User_Role (roleId, userId) values (?, ?) 
2016-10-10 18:54:01.599 - DEBUG - [main] AbstractCollectionPersister:logStaticSQL:685 ::  Row update: update User_Role set userId=? where roleId=? and userId=? 
2016-10-10 18:54:01.600 - DEBUG - [main] AbstractCollectionPersister:logStaticSQL:686 ::  Row delete: delete from User_Role where roleId=? and userId=? 
2016-10-10 18:54:01.600 - DEBUG - [main] AbstractCollectionPersister:logStaticSQL:687 ::  One-shot delete: delete from User_Role where roleId=? 
2016-10-10 18:54:01.607 - DEBUG - [main] AbstractEntityPersister:logStaticSQL:3676 :: Static SQL for entity: org.total.spring.entity.Role 
2016-10-10 18:54:01.608 - DEBUG - [main] AbstractEntityPersister:logStaticSQL:3681 ::  Version select: select roleId from Role where roleId =? 
2016-10-10 18:54:01.609 - DEBUG - [main] AbstractEntityPersister:logStaticSQL:3684 ::  Snapshot select: select role_.roleId, role_.roleType as roleType2_1_ from Role role_ where role_.roleId=? 
2016-10-10 18:54:01.609 - DEBUG - [main] AbstractEntityPersister:logStaticSQL:3687 ::  Insert 0: insert into Role (roleType, roleId) values (?, ?) 
2016-10-10 18:54:01.610 - DEBUG - [main] AbstractEntityPersister:logStaticSQL:3688 ::  Update 0: update Role set roleType=? where roleId=? 
2016-10-10 18:54:01.610 - DEBUG - [main] AbstractEntityPersister:logStaticSQL:3689 ::  Delete 0: delete from Role where roleId=? 
2016-10-10 18:54:01.611 - DEBUG - [main] AbstractEntityPersister:logStaticSQL:3692 ::  Identity insert: insert into Role (roleType) values (?) 
2016-10-10 18:54:01.632 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntity:188 ::  Starting root entity : org.total.spring.entity.Role 
2016-10-10 18:54:01.640 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ed9ae94] 
2016-10-10 18:54:01.641 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToStack:129 :: Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2bc12da 
2016-10-10 18:54:01.642 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 :: .. Registering AssociationKey : AssociationKey(table=Role, columns={roleId}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2bc12da 
2016-10-10 18:54:01.643 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntityIdentifier:255 :: >> Starting entity identifier : org.total.spring.entity.Role 
2016-10-10 18:54:01.643 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : roleType 
2016-10-10 18:54:01.643 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=roleType, type=org.hibernate.type.EnumType [non-identifier]) 
2016-10-10 18:54:01.644 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=roleType, type=org.hibernate.type.EnumType [non-identifier]) 
2016-10-10 18:54:01.644 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : users 
2016-10-10 18:54:01.646 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=users, type=java.util.Set(org.total.spring.entity.Role.users) [non-identifier,association]) 
2016-10-10 18:54:01.649 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=users, type=java.util.Set(org.total.spring.entity.Role.users) [non-identifier,association]) 
2016-10-10 18:54:01.650 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromStack:136 :: Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2bc12da 
2016-10-10 18:54:01.651 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingEntity:224 ::  Finished root entity : org.total.spring.entity.Role 
2016-10-10 18:54:01.651 - DEBUG - [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:94 :: Building LoadPlan... 
2016-10-10 18:54:01.666 - DEBUG - [main] LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:112 :: processing queryspace <gen:0> 
2016-10-10 18:54:01.671 - DEBUG - [main] LoadPlanTreePrinter:logTree:72 :: LoadPlan(entity=org.total.spring.entity.Role)
    - Returns
       - EntityReturnImpl(entity=org.total.spring.entity.Role, querySpaceUid=<gen:0>, path=org.total.spring.entity.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.total.spring.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {roleId1_1_0_}
 
2016-10-10 18:54:01.674 - DEBUG - [main] EntityLoader:<init>:146 :: Static select for entity org.total.spring.entity.Role [NONE]: select role0_.roleId as roleId1_1_0_, role0_.roleType as roleType2_1_0_ from Role role0_ where role0_.roleId=? 
2016-10-10 18:54:01.675 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntity:188 ::  Starting root entity : org.total.spring.entity.Role 
2016-10-10 18:54:01.676 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b44b63d] 
2016-10-10 18:54:01.676 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToStack:129 :: Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4a699efa 
2016-10-10 18:54:01.677 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 :: .. Registering AssociationKey : AssociationKey(table=Role, columns={roleId}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4a699efa 
2016-10-10 18:54:01.677 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntityIdentifier:255 :: >> Starting entity identifier : org.total.spring.entity.Role 
2016-10-10 18:54:01.678 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : roleType 
2016-10-10 18:54:01.678 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=roleType, type=org.hibernate.type.EnumType [non-identifier]) 
2016-10-10 18:54:01.679 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=roleType, type=org.hibernate.type.EnumType [non-identifier]) 
2016-10-10 18:54:01.681 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : users 
2016-10-10 18:54:01.681 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=users, type=java.util.Set(org.total.spring.entity.Role.users) [non-identifier,association]) 
2016-10-10 18:54:01.682 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=users, type=java.util.Set(org.total.spring.entity.Role.users) [non-identifier,association]) 
2016-10-10 18:54:01.683 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromStack:136 :: Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4a699efa 
2016-10-10 18:54:01.684 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingEntity:224 ::  Finished root entity : org.total.spring.entity.Role 
2016-10-10 18:54:01.685 - DEBUG - [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:94 :: Building LoadPlan... 
2016-10-10 18:54:01.685 - DEBUG - [main] LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:112 :: processing queryspace <gen:0> 
2016-10-10 18:54:01.686 - DEBUG - [main] LoadPlanTreePrinter:logTree:72 :: LoadPlan(entity=org.total.spring.entity.Role)
    - Returns
       - EntityReturnImpl(entity=org.total.spring.entity.Role, querySpaceUid=<gen:0>, path=org.total.spring.entity.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.total.spring.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {roleId1_1_0_}
 
2016-10-10 18:54:01.687 - DEBUG - [main] EntityLoader:<init>:146 :: Static select for entity org.total.spring.entity.Role [READ]: select role0_.roleId as roleId1_1_0_, role0_.roleType as roleType2_1_0_ from Role role0_ where role0_.roleId=? 
2016-10-10 18:54:01.691 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntity:188 ::  Starting root entity : org.total.spring.entity.Role 
2016-10-10 18:54:01.692 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38499e48] 
2016-10-10 18:54:01.693 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToStack:129 :: Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4905c46b 
2016-10-10 18:54:01.693 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 :: .. Registering AssociationKey : AssociationKey(table=Role, columns={roleId}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4905c46b 
2016-10-10 18:54:01.694 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntityIdentifier:255 :: >> Starting entity identifier : org.total.spring.entity.Role 
2016-10-10 18:54:01.695 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : roleType 
2016-10-10 18:54:01.695 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=roleType, type=org.hibernate.type.EnumType [non-identifier]) 
2016-10-10 18:54:01.696 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=roleType, type=org.hibernate.type.EnumType [non-identifier]) 
2016-10-10 18:54:01.697 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : users 
2016-10-10 18:54:01.698 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=users, type=java.util.Set(org.total.spring.entity.Role.users) [non-identifier,association]) 
2016-10-10 18:54:01.698 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=users, type=java.util.Set(org.total.spring.entity.Role.users) [non-identifier,association]) 
2016-10-10 18:54:01.699 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromStack:136 :: Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4905c46b 
2016-10-10 18:54:01.700 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingEntity:224 ::  Finished root entity : org.total.spring.entity.Role 
2016-10-10 18:54:01.701 - DEBUG - [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:94 :: Building LoadPlan... 
2016-10-10 18:54:01.702 - DEBUG - [main] LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:112 :: processing queryspace <gen:0> 
2016-10-10 18:54:01.711 - DEBUG - [main] LoadPlanTreePrinter:logTree:72 :: LoadPlan(entity=org.total.spring.entity.Role)
    - Returns
       - EntityReturnImpl(entity=org.total.spring.entity.Role, querySpaceUid=<gen:0>, path=org.total.spring.entity.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.total.spring.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {roleId1_1_0_}
 
2016-10-10 18:54:01.712 - DEBUG - [main] EntityLoader:<init>:146 :: Static select for entity org.total.spring.entity.Role [UPGRADE]: select role0_.roleId as roleId1_1_0_, role0_.roleType as roleType2_1_0_ from Role role0_ where role0_.roleId=? for update 
2016-10-10 18:54:01.713 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntity:188 ::  Starting root entity : org.total.spring.entity.Role 
2016-10-10 18:54:01.714 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17ae7628] 
2016-10-10 18:54:01.714 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToStack:129 :: Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1136b469 
2016-10-10 18:54:01.715 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 :: .. Registering AssociationKey : AssociationKey(table=Role, columns={roleId}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1136b469 
2016-10-10 18:54:01.716 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntityIdentifier:255 :: >> Starting entity identifier : org.total.spring.entity.Role 
2016-10-10 18:54:01.716 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : roleType 
2016-10-10 18:54:01.717 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=roleType, type=org.hibernate.type.EnumType [non-identifier]) 
2016-10-10 18:54:01.718 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=roleType, type=org.hibernate.type.EnumType [non-identifier]) 
2016-10-10 18:54:01.718 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : users 
2016-10-10 18:54:01.719 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=users, type=java.util.Set(org.total.spring.entity.Role.users) [non-identifier,association]) 
2016-10-10 18:54:01.720 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=users, type=java.util.Set(org.total.spring.entity.Role.users) [non-identifier,association]) 
2016-10-10 18:54:01.722 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromStack:136 :: Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1136b469 
2016-10-10 18:54:01.723 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingEntity:224 ::  Finished root entity : org.total.spring.entity.Role 
2016-10-10 18:54:01.724 - DEBUG - [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:94 :: Building LoadPlan... 
2016-10-10 18:54:01.725 - DEBUG - [main] LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:112 :: processing queryspace <gen:0> 
2016-10-10 18:54:01.727 - DEBUG - [main] LoadPlanTreePrinter:logTree:72 :: LoadPlan(entity=org.total.spring.entity.Role)
    - Returns
       - EntityReturnImpl(entity=org.total.spring.entity.Role, querySpaceUid=<gen:0>, path=org.total.spring.entity.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.total.spring.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {roleId1_1_0_}
 
2016-10-10 18:54:01.728 - DEBUG - [main] EntityLoader:<init>:146 :: Static select for entity org.total.spring.entity.Role [UPGRADE_NOWAIT]: select role0_.roleId as roleId1_1_0_, role0_.roleType as roleType2_1_0_ from Role role0_ where role0_.roleId=? for update 
2016-10-10 18:54:01.730 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntity:188 ::  Starting root entity : org.total.spring.entity.Role 
2016-10-10 18:54:01.730 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6579c3d9] 
2016-10-10 18:54:01.731 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToStack:129 :: Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2b87581 
2016-10-10 18:54:01.732 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 :: .. Registering AssociationKey : AssociationKey(table=Role, columns={roleId}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2b87581 
2016-10-10 18:54:01.733 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntityIdentifier:255 :: >> Starting entity identifier : org.total.spring.entity.Role 
2016-10-10 18:54:01.733 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : roleType 
2016-10-10 18:54:01.734 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=roleType, type=org.hibernate.type.EnumType [non-identifier]) 
2016-10-10 18:54:01.734 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=roleType, type=org.hibernate.type.EnumType [non-identifier]) 
2016-10-10 18:54:01.735 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : users 
2016-10-10 18:54:01.736 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=users, type=java.util.Set(org.total.spring.entity.Role.users) [non-identifier,association]) 
2016-10-10 18:54:01.736 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=users, type=java.util.Set(org.total.spring.entity.Role.users) [non-identifier,association]) 
2016-10-10 18:54:01.737 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromStack:136 :: Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2b87581 
2016-10-10 18:54:01.738 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingEntity:224 ::  Finished root entity : org.total.spring.entity.Role 
2016-10-10 18:54:01.738 - DEBUG - [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:94 :: Building LoadPlan... 
2016-10-10 18:54:01.740 - DEBUG - [main] LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:112 :: processing queryspace <gen:0> 
2016-10-10 18:54:01.740 - DEBUG - [main] LoadPlanTreePrinter:logTree:72 :: LoadPlan(entity=org.total.spring.entity.Role)
    - Returns
       - EntityReturnImpl(entity=org.total.spring.entity.Role, querySpaceUid=<gen:0>, path=org.total.spring.entity.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.total.spring.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {roleId1_1_0_}
 
2016-10-10 18:54:01.742 - DEBUG - [main] EntityLoader:<init>:146 :: Static select for entity org.total.spring.entity.Role [UPGRADE_SKIPLOCKED]: select role0_.roleId as roleId1_1_0_, role0_.roleType as roleType2_1_0_ from Role role0_ where role0_.roleId=? for update 
2016-10-10 18:54:01.743 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntity:188 ::  Starting root entity : org.total.spring.entity.Role 
2016-10-10 18:54:01.743 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66434cc8] 
2016-10-10 18:54:01.744 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToStack:129 :: Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@42f22995 
2016-10-10 18:54:01.745 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 :: .. Registering AssociationKey : AssociationKey(table=Role, columns={roleId}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@42f22995 
2016-10-10 18:54:01.746 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntityIdentifier:255 :: >> Starting entity identifier : org.total.spring.entity.Role 
2016-10-10 18:54:01.746 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : roleType 
2016-10-10 18:54:01.747 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=roleType, type=org.hibernate.type.EnumType [non-identifier]) 
2016-10-10 18:54:01.747 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=roleType, type=org.hibernate.type.EnumType [non-identifier]) 
2016-10-10 18:54:01.748 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : users 
2016-10-10 18:54:01.749 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=users, type=java.util.Set(org.total.spring.entity.Role.users) [non-identifier,association]) 
2016-10-10 18:54:01.749 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=users, type=java.util.Set(org.total.spring.entity.Role.users) [non-identifier,association]) 
2016-10-10 18:54:01.750 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromStack:136 :: Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@42f22995 
2016-10-10 18:54:01.751 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingEntity:224 ::  Finished root entity : org.total.spring.entity.Role 
2016-10-10 18:54:01.752 - DEBUG - [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:94 :: Building LoadPlan... 
2016-10-10 18:54:01.752 - DEBUG - [main] LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:112 :: processing queryspace <gen:0> 
2016-10-10 18:54:01.753 - DEBUG - [main] LoadPlanTreePrinter:logTree:72 :: LoadPlan(entity=org.total.spring.entity.Role)
    - Returns
       - EntityReturnImpl(entity=org.total.spring.entity.Role, querySpaceUid=<gen:0>, path=org.total.spring.entity.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.total.spring.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {roleId1_1_0_}
 
2016-10-10 18:54:01.754 - DEBUG - [main] EntityLoader:<init>:146 :: Static select for entity org.total.spring.entity.Role [FORCE]: select role0_.roleId as roleId1_1_0_, role0_.roleType as roleType2_1_0_ from Role role0_ where role0_.roleId=? for update 
2016-10-10 18:54:01.754 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntity:188 ::  Starting root entity : org.total.spring.entity.Role 
2016-10-10 18:54:01.755 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@693e4d19] 
2016-10-10 18:54:01.756 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToStack:129 :: Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@286b39c2 
2016-10-10 18:54:01.757 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 :: .. Registering AssociationKey : AssociationKey(table=Role, columns={roleId}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@286b39c2 
2016-10-10 18:54:01.758 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntityIdentifier:255 :: >> Starting entity identifier : org.total.spring.entity.Role 
2016-10-10 18:54:01.758 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : roleType 
2016-10-10 18:54:01.758 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=roleType, type=org.hibernate.type.EnumType [non-identifier]) 
2016-10-10 18:54:01.759 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=roleType, type=org.hibernate.type.EnumType [non-identifier]) 
2016-10-10 18:54:01.760 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : users 
2016-10-10 18:54:01.760 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=users, type=java.util.Set(org.total.spring.entity.Role.users) [non-identifier,association]) 
2016-10-10 18:54:01.761 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=users, type=java.util.Set(org.total.spring.entity.Role.users) [non-identifier,association]) 
2016-10-10 18:54:01.762 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromStack:136 :: Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@286b39c2 
2016-10-10 18:54:01.762 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingEntity:224 ::  Finished root entity : org.total.spring.entity.Role 
2016-10-10 18:54:01.763 - DEBUG - [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:94 :: Building LoadPlan... 
2016-10-10 18:54:01.763 - DEBUG - [main] LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:112 :: processing queryspace <gen:0> 
2016-10-10 18:54:01.766 - DEBUG - [main] LoadPlanTreePrinter:logTree:72 :: LoadPlan(entity=org.total.spring.entity.Role)
    - Returns
       - EntityReturnImpl(entity=org.total.spring.entity.Role, querySpaceUid=<gen:0>, path=org.total.spring.entity.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.total.spring.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {roleId1_1_0_}
 
2016-10-10 18:54:01.767 - DEBUG - [main] EntityLoader:<init>:146 :: Static select for entity org.total.spring.entity.Role [PESSIMISTIC_READ]: select role0_.roleId as roleId1_1_0_, role0_.roleType as roleType2_1_0_ from Role role0_ where role0_.roleId=? lock in share mode 
2016-10-10 18:54:01.768 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntity:188 ::  Starting root entity : org.total.spring.entity.Role 
2016-10-10 18:54:01.769 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5432050b] 
2016-10-10 18:54:01.769 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToStack:129 :: Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@75f2099 
2016-10-10 18:54:01.770 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 :: .. Registering AssociationKey : AssociationKey(table=Role, columns={roleId}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@75f2099 
2016-10-10 18:54:01.770 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntityIdentifier:255 :: >> Starting entity identifier : org.total.spring.entity.Role 
2016-10-10 18:54:01.772 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : roleType 
2016-10-10 18:54:01.773 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=roleType, type=org.hibernate.type.EnumType [non-identifier]) 
2016-10-10 18:54:01.774 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=roleType, type=org.hibernate.type.EnumType [non-identifier]) 
2016-10-10 18:54:01.775 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : users 
2016-10-10 18:54:01.775 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=users, type=java.util.Set(org.total.spring.entity.Role.users) [non-identifier,association]) 
2016-10-10 18:54:01.776 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=users, type=java.util.Set(org.total.spring.entity.Role.users) [non-identifier,association]) 
2016-10-10 18:54:01.777 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromStack:136 :: Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@75f2099 
2016-10-10 18:54:01.778 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingEntity:224 ::  Finished root entity : org.total.spring.entity.Role 
2016-10-10 18:54:01.779 - DEBUG - [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:94 :: Building LoadPlan... 
2016-10-10 18:54:01.779 - DEBUG - [main] LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:112 :: processing queryspace <gen:0> 
2016-10-10 18:54:01.780 - DEBUG - [main] LoadPlanTreePrinter:logTree:72 :: LoadPlan(entity=org.total.spring.entity.Role)
    - Returns
       - EntityReturnImpl(entity=org.total.spring.entity.Role, querySpaceUid=<gen:0>, path=org.total.spring.entity.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.total.spring.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {roleId1_1_0_}
 
2016-10-10 18:54:01.781 - DEBUG - [main] EntityLoader:<init>:146 :: Static select for entity org.total.spring.entity.Role [PESSIMISTIC_WRITE]: select role0_.roleId as roleId1_1_0_, role0_.roleType as roleType2_1_0_ from Role role0_ where role0_.roleId=? for update 
2016-10-10 18:54:01.782 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntity:188 ::  Starting root entity : org.total.spring.entity.Role 
2016-10-10 18:54:01.782 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c12f3ee] 
2016-10-10 18:54:01.783 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToStack:129 :: Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6d467c87 
2016-10-10 18:54:01.784 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 :: .. Registering AssociationKey : AssociationKey(table=Role, columns={roleId}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6d467c87 
2016-10-10 18:54:01.785 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntityIdentifier:255 :: >> Starting entity identifier : org.total.spring.entity.Role 
2016-10-10 18:54:01.785 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : roleType 
2016-10-10 18:54:01.786 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=roleType, type=org.hibernate.type.EnumType [non-identifier]) 
2016-10-10 18:54:01.786 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=roleType, type=org.hibernate.type.EnumType [non-identifier]) 
2016-10-10 18:54:01.787 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : users 
2016-10-10 18:54:01.787 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=users, type=java.util.Set(org.total.spring.entity.Role.users) [non-identifier,association]) 
2016-10-10 18:54:01.788 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=users, type=java.util.Set(org.total.spring.entity.Role.users) [non-identifier,association]) 
2016-10-10 18:54:01.789 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromStack:136 :: Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6d467c87 
2016-10-10 18:54:01.789 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingEntity:224 ::  Finished root entity : org.total.spring.entity.Role 
2016-10-10 18:54:01.791 - DEBUG - [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:94 :: Building LoadPlan... 
2016-10-10 18:54:01.792 - DEBUG - [main] LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:112 :: processing queryspace <gen:0> 
2016-10-10 18:54:01.792 - DEBUG - [main] LoadPlanTreePrinter:logTree:72 :: LoadPlan(entity=org.total.spring.entity.Role)
    - Returns
       - EntityReturnImpl(entity=org.total.spring.entity.Role, querySpaceUid=<gen:0>, path=org.total.spring.entity.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.total.spring.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {roleId1_1_0_}
 
2016-10-10 18:54:01.793 - DEBUG - [main] EntityLoader:<init>:146 :: Static select for entity org.total.spring.entity.Role [PESSIMISTIC_FORCE_INCREMENT]: select role0_.roleId as roleId1_1_0_, role0_.roleType as roleType2_1_0_ from Role role0_ where role0_.roleId=? for update 
2016-10-10 18:54:01.794 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntity:188 ::  Starting root entity : org.total.spring.entity.Role 
2016-10-10 18:54:01.794 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29182679] 
2016-10-10 18:54:01.795 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToStack:129 :: Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@57bd802b 
2016-10-10 18:54:01.795 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 :: .. Registering AssociationKey : AssociationKey(table=Role, columns={roleId}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@57bd802b 
2016-10-10 18:54:01.796 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntityIdentifier:255 :: >> Starting entity identifier : org.total.spring.entity.Role 
2016-10-10 18:54:01.796 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : roleType 
2016-10-10 18:54:01.797 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=roleType, type=org.hibernate.type.EnumType [non-identifier]) 
2016-10-10 18:54:01.797 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=roleType, type=org.hibernate.type.EnumType [non-identifier]) 
2016-10-10 18:54:01.798 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : users 
2016-10-10 18:54:01.798 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=users, type=java.util.Set(org.total.spring.entity.Role.users) [non-identifier,association]) 
2016-10-10 18:54:01.799 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=users, type=java.util.Set(org.total.spring.entity.Role.users) [non-identifier,association]) 
2016-10-10 18:54:01.799 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromStack:136 :: Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@57bd802b 
2016-10-10 18:54:01.800 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingEntity:224 ::  Finished root entity : org.total.spring.entity.Role 
2016-10-10 18:54:01.800 - DEBUG - [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:94 :: Building LoadPlan... 
2016-10-10 18:54:01.801 - DEBUG - [main] LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:112 :: processing queryspace <gen:0> 
2016-10-10 18:54:01.801 - DEBUG - [main] LoadPlanTreePrinter:logTree:72 :: LoadPlan(entity=org.total.spring.entity.Role)
    - Returns
       - EntityReturnImpl(entity=org.total.spring.entity.Role, querySpaceUid=<gen:0>, path=org.total.spring.entity.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.total.spring.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {roleId1_1_0_}
 
2016-10-10 18:54:01.805 - DEBUG - [main] EntityLoader:<init>:146 :: Static select for entity org.total.spring.entity.Role [OPTIMISTIC]: select role0_.roleId as roleId1_1_0_, role0_.roleType as roleType2_1_0_ from Role role0_ where role0_.roleId=? 
2016-10-10 18:54:01.806 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntity:188 ::  Starting root entity : org.total.spring.entity.Role 
2016-10-10 18:54:01.806 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cbb84b1] 
2016-10-10 18:54:01.807 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToStack:129 :: Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2c779e5 
2016-10-10 18:54:01.808 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 :: .. Registering AssociationKey : AssociationKey(table=Role, columns={roleId}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2c779e5 
2016-10-10 18:54:01.809 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntityIdentifier:255 :: >> Starting entity identifier : org.total.spring.entity.Role 
2016-10-10 18:54:01.809 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : roleType 
2016-10-10 18:54:01.810 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=roleType, type=org.hibernate.type.EnumType [non-identifier]) 
2016-10-10 18:54:01.810 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=roleType, type=org.hibernate.type.EnumType [non-identifier]) 
2016-10-10 18:54:01.811 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : users 
2016-10-10 18:54:01.811 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=users, type=java.util.Set(org.total.spring.entity.Role.users) [non-identifier,association]) 
2016-10-10 18:54:01.812 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=users, type=java.util.Set(org.total.spring.entity.Role.users) [non-identifier,association]) 
2016-10-10 18:54:01.812 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromStack:136 :: Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2c779e5 
2016-10-10 18:54:01.813 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingEntity:224 ::  Finished root entity : org.total.spring.entity.Role 
2016-10-10 18:54:01.814 - DEBUG - [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:94 :: Building LoadPlan... 
2016-10-10 18:54:01.814 - DEBUG - [main] LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:112 :: processing queryspace <gen:0> 
2016-10-10 18:54:01.815 - DEBUG - [main] LoadPlanTreePrinter:logTree:72 :: LoadPlan(entity=org.total.spring.entity.Role)
    - Returns
       - EntityReturnImpl(entity=org.total.spring.entity.Role, querySpaceUid=<gen:0>, path=org.total.spring.entity.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.total.spring.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {roleId1_1_0_}
 
2016-10-10 18:54:01.816 - DEBUG - [main] EntityLoader:<init>:146 :: Static select for entity org.total.spring.entity.Role [OPTIMISTIC_FORCE_INCREMENT]: select role0_.roleId as roleId1_1_0_, role0_.roleType as roleType2_1_0_ from Role role0_ where role0_.roleId=? 
2016-10-10 18:54:01.833 - DEBUG - [main] CascadeEntityLoader:<init>:56 :: Static select for action ACTION_MERGE on entity org.total.spring.entity.Role: select role0_.roleId as roleId1_1_1_, role0_.roleType as roleType2_1_1_, users1_.roleId as roleId2_1_3_, user2_.userId as userId1_4_3_, user2_.userId as userId1_3_0_, user2_.password as password2_3_0_, user2_.userName as userName3_3_0_ from Role role0_ left outer join User_Role users1_ on role0_.roleId=users1_.roleId left outer join User user2_ on users1_.userId=user2_.userId where role0_.roleId=? 
2016-10-10 18:54:01.834 - DEBUG - [main] CascadeEntityLoader:<init>:56 :: Static select for action ACTION_REFRESH on entity org.total.spring.entity.Role: select role0_.roleId as roleId1_1_1_, role0_.roleType as roleType2_1_1_, users1_.roleId as roleId2_1_3_, user2_.userId as userId1_4_3_, user2_.userId as userId1_3_0_, user2_.password as password2_3_0_, user2_.userName as userName3_3_0_ from Role role0_ left outer join User_Role users1_ on role0_.roleId=users1_.roleId left outer join User user2_ on users1_.userId=user2_.userId where role0_.roleId=? 
2016-10-10 18:54:01.835 - DEBUG - [main] AbstractEntityPersister:logStaticSQL:3676 :: Static SQL for entity: org.total.spring.entity.Country 
2016-10-10 18:54:01.836 - DEBUG - [main] AbstractEntityPersister:logStaticSQL:3681 ::  Version select: select countryId from Country where countryId =? 
2016-10-10 18:54:01.836 - DEBUG - [main] AbstractEntityPersister:logStaticSQL:3684 ::  Snapshot select: select country_.countryId, country_.countryCode as countryC2_0_, country_.countryName as countryN3_0_ from Country country_ where country_.countryId=? 
2016-10-10 18:54:01.837 - DEBUG - [main] AbstractEntityPersister:logStaticSQL:3687 ::  Insert 0: insert into Country (countryCode, countryName, countryId) values (?, ?, ?) 
2016-10-10 18:54:01.838 - DEBUG - [main] AbstractEntityPersister:logStaticSQL:3688 ::  Update 0: update Country set countryCode=?, countryName=? where countryId=? 
2016-10-10 18:54:01.839 - DEBUG - [main] AbstractEntityPersister:logStaticSQL:3689 ::  Delete 0: delete from Country where countryId=? 
2016-10-10 18:54:01.839 - DEBUG - [main] AbstractEntityPersister:logStaticSQL:3692 ::  Identity insert: insert into Country (countryCode, countryName) values (?, ?) 
2016-10-10 18:54:01.840 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntity:188 ::  Starting root entity : org.total.spring.entity.Country 
2016-10-10 18:54:01.841 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@332f25c8] 
2016-10-10 18:54:01.841 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToStack:129 :: Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1b32cd16 
2016-10-10 18:54:01.842 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 :: .. Registering AssociationKey : AssociationKey(table=Country, columns={countryId}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1b32cd16 
2016-10-10 18:54:01.843 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntityIdentifier:255 :: >> Starting entity identifier : org.total.spring.entity.Country 
2016-10-10 18:54:01.843 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : countryCode 
2016-10-10 18:54:01.843 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=countryCode, type=org.hibernate.type.EnumType [non-identifier]) 
2016-10-10 18:54:01.844 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=countryCode, type=org.hibernate.type.EnumType [non-identifier]) 
2016-10-10 18:54:01.845 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : countryName 
2016-10-10 18:54:01.845 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=countryName, type=string [non-identifier]) 
2016-10-10 18:54:01.845 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=countryName, type=string [non-identifier]) 
2016-10-10 18:54:01.846 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : teams 
2016-10-10 18:54:01.847 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=teams, type=java.util.Set(org.total.spring.entity.Country.teams) [non-identifier,association]) 
2016-10-10 18:54:01.847 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=teams, type=java.util.Set(org.total.spring.entity.Country.teams) [non-identifier,association]) 
2016-10-10 18:54:01.848 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromStack:136 :: Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1b32cd16 
2016-10-10 18:54:01.849 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingEntity:224 ::  Finished root entity : org.total.spring.entity.Country 
2016-10-10 18:54:01.849 - DEBUG - [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:94 :: Building LoadPlan... 
2016-10-10 18:54:01.850 - DEBUG - [main] LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:112 :: processing queryspace <gen:0> 
2016-10-10 18:54:01.850 - DEBUG - [main] LoadPlanTreePrinter:logTree:72 :: LoadPlan(entity=org.total.spring.entity.Country)
    - Returns
       - EntityReturnImpl(entity=org.total.spring.entity.Country, querySpaceUid=<gen:0>, path=org.total.spring.entity.Country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.total.spring.entity.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {countryI1_0_0_}
 
2016-10-10 18:54:01.851 - DEBUG - [main] EntityLoader:<init>:146 :: Static select for entity org.total.spring.entity.Country [NONE]: select country0_.countryId as countryI1_0_0_, country0_.countryCode as countryC2_0_0_, country0_.countryName as countryN3_0_0_ from Country country0_ where country0_.countryId=? 
2016-10-10 18:54:01.853 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntity:188 ::  Starting root entity : org.total.spring.entity.Country 
2016-10-10 18:54:01.853 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bdcaf36] 
2016-10-10 18:54:01.854 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToStack:129 :: Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@61d01788 
2016-10-10 18:54:01.854 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 :: .. Registering AssociationKey : AssociationKey(table=Country, columns={countryId}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@61d01788 
2016-10-10 18:54:01.855 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntityIdentifier:255 :: >> Starting entity identifier : org.total.spring.entity.Country 
2016-10-10 18:54:01.855 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : countryCode 
2016-10-10 18:54:01.855 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=countryCode, type=org.hibernate.type.EnumType [non-identifier]) 
2016-10-10 18:54:01.856 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=countryCode, type=org.hibernate.type.EnumType [non-identifier]) 
2016-10-10 18:54:01.856 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : countryName 
2016-10-10 18:54:01.857 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=countryName, type=string [non-identifier]) 
2016-10-10 18:54:01.857 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=countryName, type=string [non-identifier]) 
2016-10-10 18:54:01.858 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : teams 
2016-10-10 18:54:01.859 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=teams, type=java.util.Set(org.total.spring.entity.Country.teams) [non-identifier,association]) 
2016-10-10 18:54:01.860 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=teams, type=java.util.Set(org.total.spring.entity.Country.teams) [non-identifier,association]) 
2016-10-10 18:54:01.860 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromStack:136 :: Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@61d01788 
2016-10-10 18:54:01.861 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingEntity:224 ::  Finished root entity : org.total.spring.entity.Country 
2016-10-10 18:54:01.861 - DEBUG - [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:94 :: Building LoadPlan... 
2016-10-10 18:54:01.862 - DEBUG - [main] LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:112 :: processing queryspace <gen:0> 
2016-10-10 18:54:01.863 - DEBUG - [main] LoadPlanTreePrinter:logTree:72 :: LoadPlan(entity=org.total.spring.entity.Country)
    - Returns
       - EntityReturnImpl(entity=org.total.spring.entity.Country, querySpaceUid=<gen:0>, path=org.total.spring.entity.Country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.total.spring.entity.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {countryI1_0_0_}
 
2016-10-10 18:54:01.864 - DEBUG - [main] EntityLoader:<init>:146 :: Static select for entity org.total.spring.entity.Country [READ]: select country0_.countryId as countryI1_0_0_, country0_.countryCode as countryC2_0_0_, country0_.countryName as countryN3_0_0_ from Country country0_ where country0_.countryId=? 
2016-10-10 18:54:01.864 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntity:188 ::  Starting root entity : org.total.spring.entity.Country 
2016-10-10 18:54:01.865 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b9b7f1f] 
2016-10-10 18:54:01.866 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToStack:129 :: Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@264c5d07 
2016-10-10 18:54:01.866 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 :: .. Registering AssociationKey : AssociationKey(table=Country, columns={countryId}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@264c5d07 
2016-10-10 18:54:01.867 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntityIdentifier:255 :: >> Starting entity identifier : org.total.spring.entity.Country 
2016-10-10 18:54:01.868 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : countryCode 
2016-10-10 18:54:01.868 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=countryCode, type=org.hibernate.type.EnumType [non-identifier]) 
2016-10-10 18:54:01.869 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=countryCode, type=org.hibernate.type.EnumType [non-identifier]) 
2016-10-10 18:54:01.869 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : countryName 
2016-10-10 18:54:01.869 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=countryName, type=string [non-identifier]) 
2016-10-10 18:54:01.870 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=countryName, type=string [non-identifier]) 
2016-10-10 18:54:01.870 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : teams 
2016-10-10 18:54:01.871 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=teams, type=java.util.Set(org.total.spring.entity.Country.teams) [non-identifier,association]) 
2016-10-10 18:54:01.871 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=teams, type=java.util.Set(org.total.spring.entity.Country.teams) [non-identifier,association]) 
2016-10-10 18:54:01.871 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromStack:136 :: Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@264c5d07 
2016-10-10 18:54:01.873 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingEntity:224 ::  Finished root entity : org.total.spring.entity.Country 
2016-10-10 18:54:01.873 - DEBUG - [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:94 :: Building LoadPlan... 
2016-10-10 18:54:01.874 - DEBUG - [main] LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:112 :: processing queryspace <gen:0> 
2016-10-10 18:54:01.875 - DEBUG - [main] LoadPlanTreePrinter:logTree:72 :: LoadPlan(entity=org.total.spring.entity.Country)
    - Returns
       - EntityReturnImpl(entity=org.total.spring.entity.Country, querySpaceUid=<gen:0>, path=org.total.spring.entity.Country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.total.spring.entity.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {countryI1_0_0_}
 
2016-10-10 18:54:01.876 - DEBUG - [main] EntityLoader:<init>:146 :: Static select for entity org.total.spring.entity.Country [UPGRADE]: select country0_.countryId as countryI1_0_0_, country0_.countryCode as countryC2_0_0_, country0_.countryName as countryN3_0_0_ from Country country0_ where country0_.countryId=? for update 
2016-10-10 18:54:01.877 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntity:188 ::  Starting root entity : org.total.spring.entity.Country 
2016-10-10 18:54:01.877 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@847f3e7] 
2016-10-10 18:54:01.878 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToStack:129 :: Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@69cac930 
2016-10-10 18:54:01.878 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 :: .. Registering AssociationKey : AssociationKey(table=Country, columns={countryId}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@69cac930 
2016-10-10 18:54:01.879 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntityIdentifier:255 :: >> Starting entity identifier : org.total.spring.entity.Country 
2016-10-10 18:54:01.879 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : countryCode 
2016-10-10 18:54:01.880 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=countryCode, type=org.hibernate.type.EnumType [non-identifier]) 
2016-10-10 18:54:01.880 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=countryCode, type=org.hibernate.type.EnumType [non-identifier]) 
2016-10-10 18:54:01.881 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : countryName 
2016-10-10 18:54:01.881 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=countryName, type=string [non-identifier]) 
2016-10-10 18:54:01.881 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=countryName, type=string [non-identifier]) 
2016-10-10 18:54:01.882 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : teams 
2016-10-10 18:54:01.883 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=teams, type=java.util.Set(org.total.spring.entity.Country.teams) [non-identifier,association]) 
2016-10-10 18:54:01.884 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=teams, type=java.util.Set(org.total.spring.entity.Country.teams) [non-identifier,association]) 
2016-10-10 18:54:01.884 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromStack:136 :: Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@69cac930 
2016-10-10 18:54:01.885 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingEntity:224 ::  Finished root entity : org.total.spring.entity.Country 
2016-10-10 18:54:01.886 - DEBUG - [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:94 :: Building LoadPlan... 
2016-10-10 18:54:01.886 - DEBUG - [main] LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:112 :: processing queryspace <gen:0> 
2016-10-10 18:54:01.887 - DEBUG - [main] LoadPlanTreePrinter:logTree:72 :: LoadPlan(entity=org.total.spring.entity.Country)
    - Returns
       - EntityReturnImpl(entity=org.total.spring.entity.Country, querySpaceUid=<gen:0>, path=org.total.spring.entity.Country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.total.spring.entity.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {countryI1_0_0_}
 
2016-10-10 18:54:01.888 - DEBUG - [main] EntityLoader:<init>:146 :: Static select for entity org.total.spring.entity.Country [UPGRADE_NOWAIT]: select country0_.countryId as countryI1_0_0_, country0_.countryCode as countryC2_0_0_, country0_.countryName as countryN3_0_0_ from Country country0_ where country0_.countryId=? for update 
2016-10-10 18:54:01.889 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntity:188 ::  Starting root entity : org.total.spring.entity.Country 
2016-10-10 18:54:01.890 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19593091] 
2016-10-10 18:54:01.891 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToStack:129 :: Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5d39f2d8 
2016-10-10 18:54:01.891 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 :: .. Registering AssociationKey : AssociationKey(table=Country, columns={countryId}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5d39f2d8 
2016-10-10 18:54:01.892 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntityIdentifier:255 :: >> Starting entity identifier : org.total.spring.entity.Country 
2016-10-10 18:54:01.893 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : countryCode 
2016-10-10 18:54:01.893 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=countryCode, type=org.hibernate.type.EnumType [non-identifier]) 
2016-10-10 18:54:01.894 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=countryCode, type=org.hibernate.type.EnumType [non-identifier]) 
2016-10-10 18:54:01.894 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : countryName 
2016-10-10 18:54:01.895 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=countryName, type=string [non-identifier]) 
2016-10-10 18:54:01.895 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=countryName, type=string [non-identifier]) 
2016-10-10 18:54:01.896 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : teams 
2016-10-10 18:54:01.896 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=teams, type=java.util.Set(org.total.spring.entity.Country.teams) [non-identifier,association]) 
2016-10-10 18:54:01.897 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=teams, type=java.util.Set(org.total.spring.entity.Country.teams) [non-identifier,association]) 
2016-10-10 18:54:01.897 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromStack:136 :: Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5d39f2d8 
2016-10-10 18:54:01.898 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingEntity:224 ::  Finished root entity : org.total.spring.entity.Country 
2016-10-10 18:54:01.899 - DEBUG - [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:94 :: Building LoadPlan... 
2016-10-10 18:54:01.900 - DEBUG - [main] LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:112 :: processing queryspace <gen:0> 
2016-10-10 18:54:01.900 - DEBUG - [main] LoadPlanTreePrinter:logTree:72 :: LoadPlan(entity=org.total.spring.entity.Country)
    - Returns
       - EntityReturnImpl(entity=org.total.spring.entity.Country, querySpaceUid=<gen:0>, path=org.total.spring.entity.Country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.total.spring.entity.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {countryI1_0_0_}
 
2016-10-10 18:54:01.902 - DEBUG - [main] EntityLoader:<init>:146 :: Static select for entity org.total.spring.entity.Country [UPGRADE_SKIPLOCKED]: select country0_.countryId as countryI1_0_0_, country0_.countryCode as countryC2_0_0_, country0_.countryName as countryN3_0_0_ from Country country0_ where country0_.countryId=? for update 
2016-10-10 18:54:01.902 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntity:188 ::  Starting root entity : org.total.spring.entity.Country 
2016-10-10 18:54:01.903 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55ea2d70] 
2016-10-10 18:54:01.904 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToStack:129 :: Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5e742e4 
2016-10-10 18:54:01.904 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 :: .. Registering AssociationKey : AssociationKey(table=Country, columns={countryId}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5e742e4 
2016-10-10 18:54:01.905 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntityIdentifier:255 :: >> Starting entity identifier : org.total.spring.entity.Country 
2016-10-10 18:54:01.905 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : countryCode 
2016-10-10 18:54:01.906 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=countryCode, type=org.hibernate.type.EnumType [non-identifier]) 
2016-10-10 18:54:01.907 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=countryCode, type=org.hibernate.type.EnumType [non-identifier]) 
2016-10-10 18:54:01.908 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : countryName 
2016-10-10 18:54:01.908 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=countryName, type=string [non-identifier]) 
2016-10-10 18:54:01.909 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=countryName, type=string [non-identifier]) 
2016-10-10 18:54:01.910 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : teams 
2016-10-10 18:54:01.910 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=teams, type=java.util.Set(org.total.spring.entity.Country.teams) [non-identifier,association]) 
2016-10-10 18:54:01.911 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=teams, type=java.util.Set(org.total.spring.entity.Country.teams) [non-identifier,association]) 
2016-10-10 18:54:01.911 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromStack:136 :: Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5e742e4 
2016-10-10 18:54:01.912 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingEntity:224 ::  Finished root entity : org.total.spring.entity.Country 
2016-10-10 18:54:01.912 - DEBUG - [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:94 :: Building LoadPlan... 
2016-10-10 18:54:01.913 - DEBUG - [main] LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:112 :: processing queryspace <gen:0> 
2016-10-10 18:54:01.914 - DEBUG - [main] LoadPlanTreePrinter:logTree:72 :: LoadPlan(entity=org.total.spring.entity.Country)
    - Returns
       - EntityReturnImpl(entity=org.total.spring.entity.Country, querySpaceUid=<gen:0>, path=org.total.spring.entity.Country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.total.spring.entity.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {countryI1_0_0_}
 
2016-10-10 18:54:01.915 - DEBUG - [main] EntityLoader:<init>:146 :: Static select for entity org.total.spring.entity.Country [FORCE]: select country0_.countryId as countryI1_0_0_, country0_.countryCode as countryC2_0_0_, country0_.countryName as countryN3_0_0_ from Country country0_ where country0_.countryId=? for update 
2016-10-10 18:54:01.916 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntity:188 ::  Starting root entity : org.total.spring.entity.Country 
2016-10-10 18:54:01.916 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@175acfb2] 
2016-10-10 18:54:01.917 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToStack:129 :: Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4a03bb68 
2016-10-10 18:54:01.917 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 :: .. Registering AssociationKey : AssociationKey(table=Country, columns={countryId}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4a03bb68 
2016-10-10 18:54:01.918 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntityIdentifier:255 :: >> Starting entity identifier : org.total.spring.entity.Country 
2016-10-10 18:54:01.918 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : countryCode 
2016-10-10 18:54:01.919 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=countryCode, type=org.hibernate.type.EnumType [non-identifier]) 
2016-10-10 18:54:01.919 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=countryCode, type=org.hibernate.type.EnumType [non-identifier]) 
2016-10-10 18:54:01.920 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : countryName 
2016-10-10 18:54:01.920 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=countryName, type=string [non-identifier]) 
2016-10-10 18:54:01.921 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=countryName, type=string [non-identifier]) 
2016-10-10 18:54:01.921 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : teams 
2016-10-10 18:54:01.922 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=teams, type=java.util.Set(org.total.spring.entity.Country.teams) [non-identifier,association]) 
2016-10-10 18:54:01.922 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=teams, type=java.util.Set(org.total.spring.entity.Country.teams) [non-identifier,association]) 
2016-10-10 18:54:01.923 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromStack:136 :: Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4a03bb68 
2016-10-10 18:54:01.923 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingEntity:224 ::  Finished root entity : org.total.spring.entity.Country 
2016-10-10 18:54:01.927 - DEBUG - [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:94 :: Building LoadPlan... 
2016-10-10 18:54:01.928 - DEBUG - [main] LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:112 :: processing queryspace <gen:0> 
2016-10-10 18:54:01.928 - DEBUG - [main] LoadPlanTreePrinter:logTree:72 :: LoadPlan(entity=org.total.spring.entity.Country)
    - Returns
       - EntityReturnImpl(entity=org.total.spring.entity.Country, querySpaceUid=<gen:0>, path=org.total.spring.entity.Country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.total.spring.entity.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {countryI1_0_0_}
 
2016-10-10 18:54:01.929 - DEBUG - [main] EntityLoader:<init>:146 :: Static select for entity org.total.spring.entity.Country [PESSIMISTIC_READ]: select country0_.countryId as countryI1_0_0_, country0_.countryCode as countryC2_0_0_, country0_.countryName as countryN3_0_0_ from Country country0_ where country0_.countryId=? lock in share mode 
2016-10-10 18:54:01.930 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntity:188 ::  Starting root entity : org.total.spring.entity.Country 
2016-10-10 18:54:01.931 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e868ef5] 
2016-10-10 18:54:01.932 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToStack:129 :: Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@71c905a3 
2016-10-10 18:54:01.932 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 :: .. Registering AssociationKey : AssociationKey(table=Country, columns={countryId}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@71c905a3 
2016-10-10 18:54:01.933 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntityIdentifier:255 :: >> Starting entity identifier : org.total.spring.entity.Country 
2016-10-10 18:54:01.934 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : countryCode 
2016-10-10 18:54:01.934 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=countryCode, type=org.hibernate.type.EnumType [non-identifier]) 
2016-10-10 18:54:01.935 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=countryCode, type=org.hibernate.type.EnumType [non-identifier]) 
2016-10-10 18:54:01.936 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : countryName 
2016-10-10 18:54:01.936 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=countryName, type=string [non-identifier]) 
2016-10-10 18:54:01.937 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=countryName, type=string [non-identifier]) 
2016-10-10 18:54:01.939 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : teams 
2016-10-10 18:54:01.940 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=teams, type=java.util.Set(org.total.spring.entity.Country.teams) [non-identifier,association]) 
2016-10-10 18:54:01.941 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=teams, type=java.util.Set(org.total.spring.entity.Country.teams) [non-identifier,association]) 
2016-10-10 18:54:01.941 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromStack:136 :: Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@71c905a3 
2016-10-10 18:54:01.942 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingEntity:224 ::  Finished root entity : org.total.spring.entity.Country 
2016-10-10 18:54:01.942 - DEBUG - [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:94 :: Building LoadPlan... 
2016-10-10 18:54:01.944 - DEBUG - [main] LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:112 :: processing queryspace <gen:0> 
2016-10-10 18:54:01.945 - DEBUG - [main] LoadPlanTreePrinter:logTree:72 :: LoadPlan(entity=org.total.spring.entity.Country)
    - Returns
       - EntityReturnImpl(entity=org.total.spring.entity.Country, querySpaceUid=<gen:0>, path=org.total.spring.entity.Country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.total.spring.entity.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {countryI1_0_0_}
 
2016-10-10 18:54:01.946 - DEBUG - [main] EntityLoader:<init>:146 :: Static select for entity org.total.spring.entity.Country [PESSIMISTIC_WRITE]: select country0_.countryId as countryI1_0_0_, country0_.countryCode as countryC2_0_0_, country0_.countryName as countryN3_0_0_ from Country country0_ where country0_.countryId=? for update 
2016-10-10 18:54:01.947 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntity:188 ::  Starting root entity : org.total.spring.entity.Country 
2016-10-10 18:54:01.948 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30af7377] 
2016-10-10 18:54:01.948 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToStack:129 :: Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@67a056f1 
2016-10-10 18:54:01.949 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 :: .. Registering AssociationKey : AssociationKey(table=Country, columns={countryId}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@67a056f1 
2016-10-10 18:54:01.950 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntityIdentifier:255 :: >> Starting entity identifier : org.total.spring.entity.Country 
2016-10-10 18:54:01.950 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : countryCode 
2016-10-10 18:54:01.951 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=countryCode, type=org.hibernate.type.EnumType [non-identifier]) 
2016-10-10 18:54:01.951 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=countryCode, type=org.hibernate.type.EnumType [non-identifier]) 
2016-10-10 18:54:01.952 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : countryName 
2016-10-10 18:54:01.952 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=countryName, type=string [non-identifier]) 
2016-10-10 18:54:01.953 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=countryName, type=string [non-identifier]) 
2016-10-10 18:54:01.954 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : teams 
2016-10-10 18:54:01.954 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=teams, type=java.util.Set(org.total.spring.entity.Country.teams) [non-identifier,association]) 
2016-10-10 18:54:01.955 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=teams, type=java.util.Set(org.total.spring.entity.Country.teams) [non-identifier,association]) 
2016-10-10 18:54:01.959 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromStack:136 :: Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@67a056f1 
2016-10-10 18:54:01.960 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingEntity:224 ::  Finished root entity : org.total.spring.entity.Country 
2016-10-10 18:54:01.961 - DEBUG - [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:94 :: Building LoadPlan... 
2016-10-10 18:54:01.962 - DEBUG - [main] LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:112 :: processing queryspace <gen:0> 
2016-10-10 18:54:01.963 - DEBUG - [main] LoadPlanTreePrinter:logTree:72 :: LoadPlan(entity=org.total.spring.entity.Country)
    - Returns
       - EntityReturnImpl(entity=org.total.spring.entity.Country, querySpaceUid=<gen:0>, path=org.total.spring.entity.Country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.total.spring.entity.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {countryI1_0_0_}
 
2016-10-10 18:54:01.964 - DEBUG - [main] EntityLoader:<init>:146 :: Static select for entity org.total.spring.entity.Country [PESSIMISTIC_FORCE_INCREMENT]: select country0_.countryId as countryI1_0_0_, country0_.countryCode as countryC2_0_0_, country0_.countryName as countryN3_0_0_ from Country country0_ where country0_.countryId=? for update 
2016-10-10 18:54:01.964 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntity:188 ::  Starting root entity : org.total.spring.entity.Country 
2016-10-10 18:54:01.965 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1dab9dd6] 
2016-10-10 18:54:01.966 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToStack:129 :: Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@247667dd 
2016-10-10 18:54:01.967 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 :: .. Registering AssociationKey : AssociationKey(table=Country, columns={countryId}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@247667dd 
2016-10-10 18:54:01.967 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntityIdentifier:255 :: >> Starting entity identifier : org.total.spring.entity.Country 
2016-10-10 18:54:01.968 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : countryCode 
2016-10-10 18:54:01.969 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=countryCode, type=org.hibernate.type.EnumType [non-identifier]) 
2016-10-10 18:54:01.970 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=countryCode, type=org.hibernate.type.EnumType [non-identifier]) 
2016-10-10 18:54:01.970 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : countryName 
2016-10-10 18:54:01.971 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=countryName, type=string [non-identifier]) 
2016-10-10 18:54:01.971 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=countryName, type=string [non-identifier]) 
2016-10-10 18:54:01.975 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : teams 
2016-10-10 18:54:01.976 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=teams, type=java.util.Set(org.total.spring.entity.Country.teams) [non-identifier,association]) 
2016-10-10 18:54:01.977 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=teams, type=java.util.Set(org.total.spring.entity.Country.teams) [non-identifier,association]) 
2016-10-10 18:54:01.977 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromStack:136 :: Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@247667dd 
2016-10-10 18:54:01.978 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingEntity:224 ::  Finished root entity : org.total.spring.entity.Country 
2016-10-10 18:54:01.979 - DEBUG - [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:94 :: Building LoadPlan... 
2016-10-10 18:54:01.979 - DEBUG - [main] LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:112 :: processing queryspace <gen:0> 
2016-10-10 18:54:01.980 - DEBUG - [main] LoadPlanTreePrinter:logTree:72 :: LoadPlan(entity=org.total.spring.entity.Country)
    - Returns
       - EntityReturnImpl(entity=org.total.spring.entity.Country, querySpaceUid=<gen:0>, path=org.total.spring.entity.Country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.total.spring.entity.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {countryI1_0_0_}
 
2016-10-10 18:54:01.982 - DEBUG - [main] EntityLoader:<init>:146 :: Static select for entity org.total.spring.entity.Country [OPTIMISTIC]: select country0_.countryId as countryI1_0_0_, country0_.countryCode as countryC2_0_0_, country0_.countryName as countryN3_0_0_ from Country country0_ where country0_.countryId=? 
2016-10-10 18:54:01.982 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntity:188 ::  Starting root entity : org.total.spring.entity.Country 
2016-10-10 18:54:01.983 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f099cef] 
2016-10-10 18:54:01.984 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToStack:129 :: Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@afb5821 
2016-10-10 18:54:01.985 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 :: .. Registering AssociationKey : AssociationKey(table=Country, columns={countryId}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@afb5821 
2016-10-10 18:54:01.985 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntityIdentifier:255 :: >> Starting entity identifier : org.total.spring.entity.Country 
2016-10-10 18:54:01.986 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : countryCode 
2016-10-10 18:54:01.986 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=countryCode, type=org.hibernate.type.EnumType [non-identifier]) 
2016-10-10 18:54:01.987 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=countryCode, type=org.hibernate.type.EnumType [non-identifier]) 
2016-10-10 18:54:01.988 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : countryName 
2016-10-10 18:54:01.988 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=countryName, type=string [non-identifier]) 
2016-10-10 18:54:01.989 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=countryName, type=string [non-identifier]) 
2016-10-10 18:54:01.989 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : teams 
2016-10-10 18:54:01.990 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=teams, type=java.util.Set(org.total.spring.entity.Country.teams) [non-identifier,association]) 
2016-10-10 18:54:01.990 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=teams, type=java.util.Set(org.total.spring.entity.Country.teams) [non-identifier,association]) 
2016-10-10 18:54:01.995 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromStack:136 :: Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@afb5821 
2016-10-10 18:54:01.996 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingEntity:224 ::  Finished root entity : org.total.spring.entity.Country 
2016-10-10 18:54:01.996 - DEBUG - [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:94 :: Building LoadPlan... 
2016-10-10 18:54:01.997 - DEBUG - [main] LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:112 :: processing queryspace <gen:0> 
2016-10-10 18:54:01.998 - DEBUG - [main] LoadPlanTreePrinter:logTree:72 :: LoadPlan(entity=org.total.spring.entity.Country)
    - Returns
       - EntityReturnImpl(entity=org.total.spring.entity.Country, querySpaceUid=<gen:0>, path=org.total.spring.entity.Country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.total.spring.entity.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {countryI1_0_0_}
 
2016-10-10 18:54:01.999 - DEBUG - [main] EntityLoader:<init>:146 :: Static select for entity org.total.spring.entity.Country [OPTIMISTIC_FORCE_INCREMENT]: select country0_.countryId as countryI1_0_0_, country0_.countryCode as countryC2_0_0_, country0_.countryName as countryN3_0_0_ from Country country0_ where country0_.countryId=? 
2016-10-10 18:54:02.000 - DEBUG - [main] CascadeEntityLoader:<init>:56 :: Static select for action ACTION_MERGE on entity org.total.spring.entity.Country: select country0_.countryId as countryI1_0_0_, country0_.countryCode as countryC2_0_0_, country0_.countryName as countryN3_0_0_ from Country country0_ where country0_.countryId=? 
2016-10-10 18:54:02.001 - DEBUG - [main] CascadeEntityLoader:<init>:56 :: Static select for action ACTION_REFRESH on entity org.total.spring.entity.Country: select country0_.countryId as countryI1_0_0_, country0_.countryCode as countryC2_0_0_, country0_.countryName as countryN3_0_0_ from Country country0_ where country0_.countryId=? 
2016-10-10 18:54:02.002 - DEBUG - [main] AbstractEntityPersister:logStaticSQL:3676 :: Static SQL for entity: org.total.spring.entity.Team 
2016-10-10 18:54:02.003 - DEBUG - [main] AbstractEntityPersister:logStaticSQL:3681 ::  Version select: select teamId from Team where teamId =? 
2016-10-10 18:54:02.003 - DEBUG - [main] AbstractEntityPersister:logStaticSQL:3684 ::  Snapshot select: select team_.teamId, team_.countryId as countryI3_2_, team_.teamName as teamName2_2_ from Team team_ where team_.teamId=? 
2016-10-10 18:54:02.004 - DEBUG - [main] AbstractEntityPersister:logStaticSQL:3687 ::  Insert 0: insert into Team (countryId, teamName, teamId) values (?, ?, ?) 
2016-10-10 18:54:02.005 - DEBUG - [main] AbstractEntityPersister:logStaticSQL:3688 ::  Update 0: update Team set countryId=?, teamName=? where teamId=? 
2016-10-10 18:54:02.005 - DEBUG - [main] AbstractEntityPersister:logStaticSQL:3689 ::  Delete 0: delete from Team where teamId=? 
2016-10-10 18:54:02.006 - DEBUG - [main] AbstractEntityPersister:logStaticSQL:3692 ::  Identity insert: insert into Team (countryId, teamName) values (?, ?) 
2016-10-10 18:54:02.006 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntity:188 ::  Starting root entity : org.total.spring.entity.Team 
2016-10-10 18:54:02.007 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bff2185] 
2016-10-10 18:54:02.009 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToStack:129 :: Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5c20ffa8 
2016-10-10 18:54:02.010 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 :: .. Registering AssociationKey : AssociationKey(table=Team, columns={teamId}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5c20ffa8 
2016-10-10 18:54:02.010 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntityIdentifier:255 :: >> Starting entity identifier : org.total.spring.entity.Team 
2016-10-10 18:54:02.012 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : country 
2016-10-10 18:54:02.013 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=country, type=org.total.spring.entity.Country [non-identifier,association]) 
2016-10-10 18:54:02.016 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bcbf05b] 
2016-10-10 18:54:02.019 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToStack:129 :: Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@488b50ec 
2016-10-10 18:54:02.020 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 :: .... Registering AssociationKey : AssociationKey(table=Team, columns={countryId}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@488b50ec 
2016-10-10 18:54:02.021 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntityIdentifier:255 :: >>>> Starting entity identifier : org.total.spring.entity.Country 
2016-10-10 18:54:02.022 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : country.countryCode 
2016-10-10 18:54:02.023 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >>>> Starting attribute Attribute(name=countryCode, type=org.hibernate.type.EnumType [non-identifier]) 
2016-10-10 18:54:02.023 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: <<<< Finishing up attribute : Attribute(name=countryCode, type=org.hibernate.type.EnumType [non-identifier]) 
2016-10-10 18:54:02.024 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : country.countryName 
2016-10-10 18:54:02.025 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >>>> Starting attribute Attribute(name=countryName, type=string [non-identifier]) 
2016-10-10 18:54:02.026 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: <<<< Finishing up attribute : Attribute(name=countryName, type=string [non-identifier]) 
2016-10-10 18:54:02.026 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : country.teams 
2016-10-10 18:54:02.027 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:162 :: Property path deemed to be circular : country.teams 
2016-10-10 18:54:02.028 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromStack:136 :: Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@488b50ec 
2016-10-10 18:54:02.030 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=country, type=org.total.spring.entity.Country [non-identifier,association]) 
2016-10-10 18:54:02.030 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : teamName 
2016-10-10 18:54:02.031 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=teamName, type=string [non-identifier]) 
2016-10-10 18:54:02.032 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=teamName, type=string [non-identifier]) 
2016-10-10 18:54:02.032 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromStack:136 :: Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5c20ffa8 
2016-10-10 18:54:02.033 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingEntity:224 ::  Finished root entity : org.total.spring.entity.Team 
2016-10-10 18:54:02.034 - DEBUG - [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:94 :: Building LoadPlan... 
2016-10-10 18:54:02.035 - DEBUG - [main] LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:112 :: processing queryspace <gen:0> 
2016-10-10 18:54:02.036 - DEBUG - [main] LoadPlanTreePrinter:logTree:72 :: LoadPlan(entity=org.total.spring.entity.Team)
    - Returns
       - EntityReturnImpl(entity=org.total.spring.entity.Team, querySpaceUid=<gen:0>, path=org.total.spring.entity.Team)
          - EntityAttributeFetchImpl(entity=org.total.spring.entity.Country, querySpaceUid=<gen:1>, path=org.total.spring.entity.Team.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.total.spring.entity.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {teamId1_2_0_}
          - JOIN (JoinDefinedByMetadata(country)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=org.total.spring.entity.Country)
                - SQL table alias mapping - country1_
                - alias suffix - 1_
                - suffixed key columns - {countryI1_0_1_}
 
2016-10-10 18:54:02.038 - DEBUG - [main] EntityLoader:<init>:146 :: Static select for entity org.total.spring.entity.Team [NONE]: select team0_.teamId as teamId1_2_0_, team0_.countryId as countryI3_2_0_, team0_.teamName as teamName2_2_0_, country1_.countryId as countryI1_0_1_, country1_.countryCode as countryC2_0_1_, country1_.countryName as countryN3_0_1_ from Team team0_ inner join Country country1_ on team0_.countryId=country1_.countryId where team0_.teamId=? 
2016-10-10 18:54:02.039 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntity:188 ::  Starting root entity : org.total.spring.entity.Team 
2016-10-10 18:54:02.042 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18a645fd] 
2016-10-10 18:54:02.042 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToStack:129 :: Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6090f3ca 
2016-10-10 18:54:02.043 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 :: .. Registering AssociationKey : AssociationKey(table=Team, columns={teamId}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6090f3ca 
2016-10-10 18:54:02.044 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntityIdentifier:255 :: >> Starting entity identifier : org.total.spring.entity.Team 
2016-10-10 18:54:02.045 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : country 
2016-10-10 18:54:02.046 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=country, type=org.total.spring.entity.Country [non-identifier,association]) 
2016-10-10 18:54:02.047 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37a64f9d] 
2016-10-10 18:54:02.047 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToStack:129 :: Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@25b865b5 
2016-10-10 18:54:02.048 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 :: .... Registering AssociationKey : AssociationKey(table=Team, columns={countryId}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@25b865b5 
2016-10-10 18:54:02.049 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntityIdentifier:255 :: >>>> Starting entity identifier : org.total.spring.entity.Country 
2016-10-10 18:54:02.049 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : country.countryCode 
2016-10-10 18:54:02.050 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >>>> Starting attribute Attribute(name=countryCode, type=org.hibernate.type.EnumType [non-identifier]) 
2016-10-10 18:54:02.050 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: <<<< Finishing up attribute : Attribute(name=countryCode, type=org.hibernate.type.EnumType [non-identifier]) 
2016-10-10 18:54:02.051 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : country.countryName 
2016-10-10 18:54:02.051 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >>>> Starting attribute Attribute(name=countryName, type=string [non-identifier]) 
2016-10-10 18:54:02.051 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: <<<< Finishing up attribute : Attribute(name=countryName, type=string [non-identifier]) 
2016-10-10 18:54:02.052 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : country.teams 
2016-10-10 18:54:02.052 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:162 :: Property path deemed to be circular : country.teams 
2016-10-10 18:54:02.053 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromStack:136 :: Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@25b865b5 
2016-10-10 18:54:02.053 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=country, type=org.total.spring.entity.Country [non-identifier,association]) 
2016-10-10 18:54:02.054 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : teamName 
2016-10-10 18:54:02.054 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=teamName, type=string [non-identifier]) 
2016-10-10 18:54:02.055 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=teamName, type=string [non-identifier]) 
2016-10-10 18:54:02.055 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromStack:136 :: Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6090f3ca 
2016-10-10 18:54:02.056 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingEntity:224 ::  Finished root entity : org.total.spring.entity.Team 
2016-10-10 18:54:02.056 - DEBUG - [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:94 :: Building LoadPlan... 
2016-10-10 18:54:02.057 - DEBUG - [main] LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:112 :: processing queryspace <gen:0> 
2016-10-10 18:54:02.058 - DEBUG - [main] LoadPlanTreePrinter:logTree:72 :: LoadPlan(entity=org.total.spring.entity.Team)
    - Returns
       - EntityReturnImpl(entity=org.total.spring.entity.Team, querySpaceUid=<gen:0>, path=org.total.spring.entity.Team)
          - EntityAttributeFetchImpl(entity=org.total.spring.entity.Country, querySpaceUid=<gen:1>, path=org.total.spring.entity.Team.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.total.spring.entity.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {teamId1_2_0_}
          - JOIN (JoinDefinedByMetadata(country)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=org.total.spring.entity.Country)
                - SQL table alias mapping - country1_
                - alias suffix - 1_
                - suffixed key columns - {countryI1_0_1_}
 
2016-10-10 18:54:02.060 - DEBUG - [main] EntityLoader:<init>:146 :: Static select for entity org.total.spring.entity.Team [READ]: select team0_.teamId as teamId1_2_0_, team0_.countryId as countryI3_2_0_, team0_.teamName as teamName2_2_0_, country1_.countryId as countryI1_0_1_, country1_.countryCode as countryC2_0_1_, country1_.countryName as countryN3_0_1_ from Team team0_ inner join Country country1_ on team0_.countryId=country1_.countryId where team0_.teamId=? 
2016-10-10 18:54:02.061 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntity:188 ::  Starting root entity : org.total.spring.entity.Team 
2016-10-10 18:54:02.061 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f9b5552] 
2016-10-10 18:54:02.062 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToStack:129 :: Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6872f9c8 
2016-10-10 18:54:02.062 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 :: .. Registering AssociationKey : AssociationKey(table=Team, columns={teamId}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6872f9c8 
2016-10-10 18:54:02.063 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntityIdentifier:255 :: >> Starting entity identifier : org.total.spring.entity.Team 
2016-10-10 18:54:02.064 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : country 
2016-10-10 18:54:02.064 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=country, type=org.total.spring.entity.Country [non-identifier,association]) 
2016-10-10 18:54:02.065 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d2d99fc] 
2016-10-10 18:54:02.066 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=country, type=org.total.spring.entity.Country [non-identifier,association]) 
2016-10-10 18:54:02.067 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : teamName 
2016-10-10 18:54:02.067 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=teamName, type=string [non-identifier]) 
2016-10-10 18:54:02.068 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=teamName, type=string [non-identifier]) 
2016-10-10 18:54:02.069 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromStack:136 :: Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6872f9c8 
2016-10-10 18:54:02.069 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingEntity:224 ::  Finished root entity : org.total.spring.entity.Team 
2016-10-10 18:54:02.070 - DEBUG - [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:94 :: Building LoadPlan... 
2016-10-10 18:54:02.070 - DEBUG - [main] LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:112 :: processing queryspace <gen:0> 
2016-10-10 18:54:02.072 - DEBUG - [main] LoadPlanTreePrinter:logTree:72 :: LoadPlan(entity=org.total.spring.entity.Team)
    - Returns
       - EntityReturnImpl(entity=org.total.spring.entity.Team, querySpaceUid=<gen:0>, path=org.total.spring.entity.Team)
          - EntityAttributeFetchImpl(entity=org.total.spring.entity.Country, querySpaceUid=<gen:1>, path=org.total.spring.entity.Team.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.total.spring.entity.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {teamId1_2_0_}
 
2016-10-10 18:54:02.073 - DEBUG - [main] EntityLoader:<init>:146 :: Static select for entity org.total.spring.entity.Team [UPGRADE]: select team0_.teamId as teamId1_2_0_, team0_.countryId as countryI3_2_0_, team0_.teamName as teamName2_2_0_ from Team team0_ where team0_.teamId=? for update 
2016-10-10 18:54:02.074 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntity:188 ::  Starting root entity : org.total.spring.entity.Team 
2016-10-10 18:54:02.075 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bdecc21] 
2016-10-10 18:54:02.076 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToStack:129 :: Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5e3a39cd 
2016-10-10 18:54:02.076 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 :: .. Registering AssociationKey : AssociationKey(table=Team, columns={teamId}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5e3a39cd 
2016-10-10 18:54:02.077 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntityIdentifier:255 :: >> Starting entity identifier : org.total.spring.entity.Team 
2016-10-10 18:54:02.077 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : country 
2016-10-10 18:54:02.078 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=country, type=org.total.spring.entity.Country [non-identifier,association]) 
2016-10-10 18:54:02.079 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21f9277b] 
2016-10-10 18:54:02.079 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=country, type=org.total.spring.entity.Country [non-identifier,association]) 
2016-10-10 18:54:02.080 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : teamName 
2016-10-10 18:54:02.080 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=teamName, type=string [non-identifier]) 
2016-10-10 18:54:02.081 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=teamName, type=string [non-identifier]) 
2016-10-10 18:54:02.081 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromStack:136 :: Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5e3a39cd 
2016-10-10 18:54:02.082 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingEntity:224 ::  Finished root entity : org.total.spring.entity.Team 
2016-10-10 18:54:02.082 - DEBUG - [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:94 :: Building LoadPlan... 
2016-10-10 18:54:02.083 - DEBUG - [main] LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:112 :: processing queryspace <gen:0> 
2016-10-10 18:54:02.084 - DEBUG - [main] LoadPlanTreePrinter:logTree:72 :: LoadPlan(entity=org.total.spring.entity.Team)
    - Returns
       - EntityReturnImpl(entity=org.total.spring.entity.Team, querySpaceUid=<gen:0>, path=org.total.spring.entity.Team)
          - EntityAttributeFetchImpl(entity=org.total.spring.entity.Country, querySpaceUid=<gen:1>, path=org.total.spring.entity.Team.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.total.spring.entity.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {teamId1_2_0_}
 
2016-10-10 18:54:02.085 - DEBUG - [main] EntityLoader:<init>:146 :: Static select for entity org.total.spring.entity.Team [UPGRADE_NOWAIT]: select team0_.teamId as teamId1_2_0_, team0_.countryId as countryI3_2_0_, team0_.teamName as teamName2_2_0_ from Team team0_ where team0_.teamId=? for update 
2016-10-10 18:54:02.087 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntity:188 ::  Starting root entity : org.total.spring.entity.Team 
2016-10-10 18:54:02.088 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@201aa8c1] 
2016-10-10 18:54:02.089 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToStack:129 :: Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5d58c727 
2016-10-10 18:54:02.089 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 :: .. Registering AssociationKey : AssociationKey(table=Team, columns={teamId}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5d58c727 
2016-10-10 18:54:02.090 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntityIdentifier:255 :: >> Starting entity identifier : org.total.spring.entity.Team 
2016-10-10 18:54:02.090 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : country 
2016-10-10 18:54:02.091 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=country, type=org.total.spring.entity.Country [non-identifier,association]) 
2016-10-10 18:54:02.091 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52a36910] 
2016-10-10 18:54:02.092 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=country, type=org.total.spring.entity.Country [non-identifier,association]) 
2016-10-10 18:54:02.092 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : teamName 
2016-10-10 18:54:02.094 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=teamName, type=string [non-identifier]) 
2016-10-10 18:54:02.094 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=teamName, type=string [non-identifier]) 
2016-10-10 18:54:02.095 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromStack:136 :: Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5d58c727 
2016-10-10 18:54:02.096 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingEntity:224 ::  Finished root entity : org.total.spring.entity.Team 
2016-10-10 18:54:02.096 - DEBUG - [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:94 :: Building LoadPlan... 
2016-10-10 18:54:02.097 - DEBUG - [main] LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:112 :: processing queryspace <gen:0> 
2016-10-10 18:54:02.097 - DEBUG - [main] LoadPlanTreePrinter:logTree:72 :: LoadPlan(entity=org.total.spring.entity.Team)
    - Returns
       - EntityReturnImpl(entity=org.total.spring.entity.Team, querySpaceUid=<gen:0>, path=org.total.spring.entity.Team)
          - EntityAttributeFetchImpl(entity=org.total.spring.entity.Country, querySpaceUid=<gen:1>, path=org.total.spring.entity.Team.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.total.spring.entity.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {teamId1_2_0_}
 
2016-10-10 18:54:02.099 - DEBUG - [main] EntityLoader:<init>:146 :: Static select for entity org.total.spring.entity.Team [UPGRADE_SKIPLOCKED]: select team0_.teamId as teamId1_2_0_, team0_.countryId as countryI3_2_0_, team0_.teamName as teamName2_2_0_ from Team team0_ where team0_.teamId=? for update 
2016-10-10 18:54:02.099 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntity:188 ::  Starting root entity : org.total.spring.entity.Team 
2016-10-10 18:54:02.100 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a095ec0] 
2016-10-10 18:54:02.100 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToStack:129 :: Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4f20a5e0 
2016-10-10 18:54:02.101 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 :: .. Registering AssociationKey : AssociationKey(table=Team, columns={teamId}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4f20a5e0 
2016-10-10 18:54:02.101 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntityIdentifier:255 :: >> Starting entity identifier : org.total.spring.entity.Team 
2016-10-10 18:54:02.102 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : country 
2016-10-10 18:54:02.102 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=country, type=org.total.spring.entity.Country [non-identifier,association]) 
2016-10-10 18:54:02.103 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54da32dc] 
2016-10-10 18:54:02.103 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=country, type=org.total.spring.entity.Country [non-identifier,association]) 
2016-10-10 18:54:02.104 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : teamName 
2016-10-10 18:54:02.105 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=teamName, type=string [non-identifier]) 
2016-10-10 18:54:02.106 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=teamName, type=string [non-identifier]) 
2016-10-10 18:54:02.107 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromStack:136 :: Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4f20a5e0 
2016-10-10 18:54:02.107 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingEntity:224 ::  Finished root entity : org.total.spring.entity.Team 
2016-10-10 18:54:02.108 - DEBUG - [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:94 :: Building LoadPlan... 
2016-10-10 18:54:02.108 - DEBUG - [main] LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:112 :: processing queryspace <gen:0> 
2016-10-10 18:54:02.109 - DEBUG - [main] LoadPlanTreePrinter:logTree:72 :: LoadPlan(entity=org.total.spring.entity.Team)
    - Returns
       - EntityReturnImpl(entity=org.total.spring.entity.Team, querySpaceUid=<gen:0>, path=org.total.spring.entity.Team)
          - EntityAttributeFetchImpl(entity=org.total.spring.entity.Country, querySpaceUid=<gen:1>, path=org.total.spring.entity.Team.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.total.spring.entity.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {teamId1_2_0_}
 
2016-10-10 18:54:02.111 - DEBUG - [main] EntityLoader:<init>:146 :: Static select for entity org.total.spring.entity.Team [FORCE]: select team0_.teamId as teamId1_2_0_, team0_.countryId as countryI3_2_0_, team0_.teamName as teamName2_2_0_ from Team team0_ where team0_.teamId=? for update 
2016-10-10 18:54:02.111 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntity:188 ::  Starting root entity : org.total.spring.entity.Team 
2016-10-10 18:54:02.112 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d782abe] 
2016-10-10 18:54:02.112 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToStack:129 :: Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6df7988f 
2016-10-10 18:54:02.113 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 :: .. Registering AssociationKey : AssociationKey(table=Team, columns={teamId}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6df7988f 
2016-10-10 18:54:02.113 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntityIdentifier:255 :: >> Starting entity identifier : org.total.spring.entity.Team 
2016-10-10 18:54:02.113 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : country 
2016-10-10 18:54:02.114 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=country, type=org.total.spring.entity.Country [non-identifier,association]) 
2016-10-10 18:54:02.114 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27b22f74] 
2016-10-10 18:54:02.115 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=country, type=org.total.spring.entity.Country [non-identifier,association]) 
2016-10-10 18:54:02.115 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : teamName 
2016-10-10 18:54:02.115 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=teamName, type=string [non-identifier]) 
2016-10-10 18:54:02.117 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=teamName, type=string [non-identifier]) 
2016-10-10 18:54:02.118 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromStack:136 :: Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6df7988f 
2016-10-10 18:54:02.119 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingEntity:224 ::  Finished root entity : org.total.spring.entity.Team 
2016-10-10 18:54:02.120 - DEBUG - [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:94 :: Building LoadPlan... 
2016-10-10 18:54:02.121 - DEBUG - [main] LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:112 :: processing queryspace <gen:0> 
2016-10-10 18:54:02.121 - DEBUG - [main] LoadPlanTreePrinter:logTree:72 :: LoadPlan(entity=org.total.spring.entity.Team)
    - Returns
       - EntityReturnImpl(entity=org.total.spring.entity.Team, querySpaceUid=<gen:0>, path=org.total.spring.entity.Team)
          - EntityAttributeFetchImpl(entity=org.total.spring.entity.Country, querySpaceUid=<gen:1>, path=org.total.spring.entity.Team.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.total.spring.entity.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {teamId1_2_0_}
 
2016-10-10 18:54:02.123 - DEBUG - [main] EntityLoader:<init>:146 :: Static select for entity org.total.spring.entity.Team [PESSIMISTIC_READ]: select team0_.teamId as teamId1_2_0_, team0_.countryId as countryI3_2_0_, team0_.teamName as teamName2_2_0_ from Team team0_ where team0_.teamId=? lock in share mode 
2016-10-10 18:54:02.124 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntity:188 ::  Starting root entity : org.total.spring.entity.Team 
2016-10-10 18:54:02.125 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22fba58c] 
2016-10-10 18:54:02.126 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToStack:129 :: Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7e8a46b7 
2016-10-10 18:54:02.127 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 :: .. Registering AssociationKey : AssociationKey(table=Team, columns={teamId}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7e8a46b7 
2016-10-10 18:54:02.128 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntityIdentifier:255 :: >> Starting entity identifier : org.total.spring.entity.Team 
2016-10-10 18:54:02.129 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : country 
2016-10-10 18:54:02.130 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=country, type=org.total.spring.entity.Country [non-identifier,association]) 
2016-10-10 18:54:02.130 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2fe88a09] 
2016-10-10 18:54:02.131 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=country, type=org.total.spring.entity.Country [non-identifier,association]) 
2016-10-10 18:54:02.132 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : teamName 
2016-10-10 18:54:02.132 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=teamName, type=string [non-identifier]) 
2016-10-10 18:54:02.133 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=teamName, type=string [non-identifier]) 
2016-10-10 18:54:02.133 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromStack:136 :: Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7e8a46b7 
2016-10-10 18:54:02.135 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingEntity:224 ::  Finished root entity : org.total.spring.entity.Team 
2016-10-10 18:54:02.135 - DEBUG - [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:94 :: Building LoadPlan... 
2016-10-10 18:54:02.136 - DEBUG - [main] LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:112 :: processing queryspace <gen:0> 
2016-10-10 18:54:02.137 - DEBUG - [main] LoadPlanTreePrinter:logTree:72 :: LoadPlan(entity=org.total.spring.entity.Team)
    - Returns
       - EntityReturnImpl(entity=org.total.spring.entity.Team, querySpaceUid=<gen:0>, path=org.total.spring.entity.Team)
          - EntityAttributeFetchImpl(entity=org.total.spring.entity.Country, querySpaceUid=<gen:1>, path=org.total.spring.entity.Team.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.total.spring.entity.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {teamId1_2_0_}
 
2016-10-10 18:54:02.138 - DEBUG - [main] EntityLoader:<init>:146 :: Static select for entity org.total.spring.entity.Team [PESSIMISTIC_WRITE]: select team0_.teamId as teamId1_2_0_, team0_.countryId as countryI3_2_0_, team0_.teamName as teamName2_2_0_ from Team team0_ where team0_.teamId=? for update 
2016-10-10 18:54:02.139 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntity:188 ::  Starting root entity : org.total.spring.entity.Team 
2016-10-10 18:54:02.140 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1917d90f] 
2016-10-10 18:54:02.140 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToStack:129 :: Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@66bfd864 
2016-10-10 18:54:02.141 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 :: .. Registering AssociationKey : AssociationKey(table=Team, columns={teamId}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@66bfd864 
2016-10-10 18:54:02.141 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntityIdentifier:255 :: >> Starting entity identifier : org.total.spring.entity.Team 
2016-10-10 18:54:02.142 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : country 
2016-10-10 18:54:02.142 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=country, type=org.total.spring.entity.Country [non-identifier,association]) 
2016-10-10 18:54:02.143 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4aac85fa] 
2016-10-10 18:54:02.145 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=country, type=org.total.spring.entity.Country [non-identifier,association]) 
2016-10-10 18:54:02.146 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : teamName 
2016-10-10 18:54:02.146 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=teamName, type=string [non-identifier]) 
2016-10-10 18:54:02.146 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=teamName, type=string [non-identifier]) 
2016-10-10 18:54:02.147 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromStack:136 :: Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@66bfd864 
2016-10-10 18:54:02.148 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingEntity:224 ::  Finished root entity : org.total.spring.entity.Team 
2016-10-10 18:54:02.149 - DEBUG - [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:94 :: Building LoadPlan... 
2016-10-10 18:54:02.150 - DEBUG - [main] LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:112 :: processing queryspace <gen:0> 
2016-10-10 18:54:02.151 - DEBUG - [main] LoadPlanTreePrinter:logTree:72 :: LoadPlan(entity=org.total.spring.entity.Team)
    - Returns
       - EntityReturnImpl(entity=org.total.spring.entity.Team, querySpaceUid=<gen:0>, path=org.total.spring.entity.Team)
          - EntityAttributeFetchImpl(entity=org.total.spring.entity.Country, querySpaceUid=<gen:1>, path=org.total.spring.entity.Team.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.total.spring.entity.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {teamId1_2_0_}
 
2016-10-10 18:54:02.153 - DEBUG - [main] EntityLoader:<init>:146 :: Static select for entity org.total.spring.entity.Team [PESSIMISTIC_FORCE_INCREMENT]: select team0_.teamId as teamId1_2_0_, team0_.countryId as countryI3_2_0_, team0_.teamName as teamName2_2_0_ from Team team0_ where team0_.teamId=? for update 
2016-10-10 18:54:02.153 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntity:188 ::  Starting root entity : org.total.spring.entity.Team 
2016-10-10 18:54:02.154 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21fff664] 
2016-10-10 18:54:02.155 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToStack:129 :: Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6079cf5 
2016-10-10 18:54:02.155 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 :: .. Registering AssociationKey : AssociationKey(table=Team, columns={teamId}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6079cf5 
2016-10-10 18:54:02.156 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntityIdentifier:255 :: >> Starting entity identifier : org.total.spring.entity.Team 
2016-10-10 18:54:02.157 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : country 
2016-10-10 18:54:02.158 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=country, type=org.total.spring.entity.Country [non-identifier,association]) 
2016-10-10 18:54:02.159 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e6308a9] 
2016-10-10 18:54:02.159 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=country, type=org.total.spring.entity.Country [non-identifier,association]) 
2016-10-10 18:54:02.160 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : teamName 
2016-10-10 18:54:02.161 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=teamName, type=string [non-identifier]) 
2016-10-10 18:54:02.162 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=teamName, type=string [non-identifier]) 
2016-10-10 18:54:02.162 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromStack:136 :: Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6079cf5 
2016-10-10 18:54:02.163 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingEntity:224 ::  Finished root entity : org.total.spring.entity.Team 
2016-10-10 18:54:02.163 - DEBUG - [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:94 :: Building LoadPlan... 
2016-10-10 18:54:02.170 - DEBUG - [main] LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:112 :: processing queryspace <gen:0> 
2016-10-10 18:54:02.174 - DEBUG - [main] LoadPlanTreePrinter:logTree:72 :: LoadPlan(entity=org.total.spring.entity.Team)
    - Returns
       - EntityReturnImpl(entity=org.total.spring.entity.Team, querySpaceUid=<gen:0>, path=org.total.spring.entity.Team)
          - EntityAttributeFetchImpl(entity=org.total.spring.entity.Country, querySpaceUid=<gen:1>, path=org.total.spring.entity.Team.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.total.spring.entity.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {teamId1_2_0_}
 
2016-10-10 18:54:02.175 - DEBUG - [main] EntityLoader:<init>:146 :: Static select for entity org.total.spring.entity.Team [OPTIMISTIC]: select team0_.teamId as teamId1_2_0_, team0_.countryId as countryI3_2_0_, team0_.teamName as teamName2_2_0_ from Team team0_ where team0_.teamId=? 
2016-10-10 18:54:02.176 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntity:188 ::  Starting root entity : org.total.spring.entity.Team 
2016-10-10 18:54:02.177 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30cecdca] 
2016-10-10 18:54:02.177 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToStack:129 :: Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6edc4161 
2016-10-10 18:54:02.178 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 :: .. Registering AssociationKey : AssociationKey(table=Team, columns={teamId}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6edc4161 
2016-10-10 18:54:02.179 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntityIdentifier:255 :: >> Starting entity identifier : org.total.spring.entity.Team 
2016-10-10 18:54:02.179 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : country 
2016-10-10 18:54:02.180 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=country, type=org.total.spring.entity.Country [non-identifier,association]) 
2016-10-10 18:54:02.180 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5486887b] 
2016-10-10 18:54:02.181 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=country, type=org.total.spring.entity.Country [non-identifier,association]) 
2016-10-10 18:54:02.182 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : teamName 
2016-10-10 18:54:02.182 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=teamName, type=string [non-identifier]) 
2016-10-10 18:54:02.183 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=teamName, type=string [non-identifier]) 
2016-10-10 18:54:02.183 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromStack:136 :: Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6edc4161 
2016-10-10 18:54:02.184 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingEntity:224 ::  Finished root entity : org.total.spring.entity.Team 
2016-10-10 18:54:02.184 - DEBUG - [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:94 :: Building LoadPlan... 
2016-10-10 18:54:02.185 - DEBUG - [main] LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:112 :: processing queryspace <gen:0> 
2016-10-10 18:54:02.186 - DEBUG - [main] LoadPlanTreePrinter:logTree:72 :: LoadPlan(entity=org.total.spring.entity.Team)
    - Returns
       - EntityReturnImpl(entity=org.total.spring.entity.Team, querySpaceUid=<gen:0>, path=org.total.spring.entity.Team)
          - EntityAttributeFetchImpl(entity=org.total.spring.entity.Country, querySpaceUid=<gen:1>, path=org.total.spring.entity.Team.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.total.spring.entity.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {teamId1_2_0_}
 
2016-10-10 18:54:02.187 - DEBUG - [main] EntityLoader:<init>:146 :: Static select for entity org.total.spring.entity.Team [OPTIMISTIC_FORCE_INCREMENT]: select team0_.teamId as teamId1_2_0_, team0_.countryId as countryI3_2_0_, team0_.teamName as teamName2_2_0_ from Team team0_ where team0_.teamId=? 
2016-10-10 18:54:02.192 - DEBUG - [main] CascadeEntityLoader:<init>:56 :: Static select for action ACTION_MERGE on entity org.total.spring.entity.Team: select team0_.teamId as teamId1_2_0_, team0_.countryId as countryI3_2_0_, team0_.teamName as teamName2_2_0_ from Team team0_ where team0_.teamId=? 
2016-10-10 18:54:02.193 - DEBUG - [main] CascadeEntityLoader:<init>:56 :: Static select for action ACTION_REFRESH on entity org.total.spring.entity.Team: select team0_.teamId as teamId1_2_0_, team0_.countryId as countryI3_2_0_, team0_.teamName as teamName2_2_0_ from Team team0_ where team0_.teamId=? 
2016-10-10 18:54:02.194 - DEBUG - [main] AbstractEntityPersister:logStaticSQL:3676 :: Static SQL for entity: org.total.spring.entity.User 
2016-10-10 18:54:02.195 - DEBUG - [main] AbstractEntityPersister:logStaticSQL:3681 ::  Version select: select userId from User where userId =? 
2016-10-10 18:54:02.195 - DEBUG - [main] AbstractEntityPersister:logStaticSQL:3684 ::  Snapshot select: select user_.userId, user_.password as password2_3_, user_.userName as userName3_3_ from User user_ where user_.userId=? 
2016-10-10 18:54:02.196 - DEBUG - [main] AbstractEntityPersister:logStaticSQL:3687 ::  Insert 0: insert into User (password, userName, userId) values (?, ?, ?) 
2016-10-10 18:54:02.196 - DEBUG - [main] AbstractEntityPersister:logStaticSQL:3688 ::  Update 0: update User set password=?, userName=? where userId=? 
2016-10-10 18:54:02.197 - DEBUG - [main] AbstractEntityPersister:logStaticSQL:3689 ::  Delete 0: delete from User where userId=? 
2016-10-10 18:54:02.197 - DEBUG - [main] AbstractEntityPersister:logStaticSQL:3692 ::  Identity insert: insert into User (password, userName) values (?, ?) 
2016-10-10 18:54:02.198 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntity:188 ::  Starting root entity : org.total.spring.entity.User 
2016-10-10 18:54:02.199 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5226e402] 
2016-10-10 18:54:02.199 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToStack:129 :: Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1440c311 
2016-10-10 18:54:02.200 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 :: .. Registering AssociationKey : AssociationKey(table=User, columns={userId}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1440c311 
2016-10-10 18:54:02.201 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntityIdentifier:255 :: >> Starting entity identifier : org.total.spring.entity.User 
2016-10-10 18:54:02.201 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : password 
2016-10-10 18:54:02.202 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=password, type=string [non-identifier]) 
2016-10-10 18:54:02.202 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=password, type=string [non-identifier]) 
2016-10-10 18:54:02.203 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : roles 
2016-10-10 18:54:02.203 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=roles, type=java.util.Set(org.total.spring.entity.User.roles) [non-identifier,association]) 
2016-10-10 18:54:02.204 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=roles, type=java.util.Set(org.total.spring.entity.User.roles) [non-identifier,association]) 
2016-10-10 18:54:02.204 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : userName 
2016-10-10 18:54:02.205 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=userName, type=string [non-identifier]) 
2016-10-10 18:54:02.206 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=userName, type=string [non-identifier]) 
2016-10-10 18:54:02.206 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromStack:136 :: Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1440c311 
2016-10-10 18:54:02.207 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingEntity:224 ::  Finished root entity : org.total.spring.entity.User 
2016-10-10 18:54:02.211 - DEBUG - [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:94 :: Building LoadPlan... 
2016-10-10 18:54:02.212 - DEBUG - [main] LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:112 :: processing queryspace <gen:0> 
2016-10-10 18:54:02.213 - DEBUG - [main] LoadPlanTreePrinter:logTree:72 :: LoadPlan(entity=org.total.spring.entity.User)
    - Returns
       - EntityReturnImpl(entity=org.total.spring.entity.User, querySpaceUid=<gen:0>, path=org.total.spring.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.total.spring.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {userId1_3_0_}
 
2016-10-10 18:54:02.214 - DEBUG - [main] EntityLoader:<init>:146 :: Static select for entity org.total.spring.entity.User [NONE]: select user0_.userId as userId1_3_0_, user0_.password as password2_3_0_, user0_.userName as userName3_3_0_ from User user0_ where user0_.userId=? 
2016-10-10 18:54:02.215 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntity:188 ::  Starting root entity : org.total.spring.entity.User 
2016-10-10 18:54:02.215 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@189b5fb1] 
2016-10-10 18:54:02.216 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToStack:129 :: Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@783ec989 
2016-10-10 18:54:02.216 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 :: .. Registering AssociationKey : AssociationKey(table=User, columns={userId}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@783ec989 
2016-10-10 18:54:02.217 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntityIdentifier:255 :: >> Starting entity identifier : org.total.spring.entity.User 
2016-10-10 18:54:02.218 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : password 
2016-10-10 18:54:02.218 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=password, type=string [non-identifier]) 
2016-10-10 18:54:02.219 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=password, type=string [non-identifier]) 
2016-10-10 18:54:02.219 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : roles 
2016-10-10 18:54:02.219 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=roles, type=java.util.Set(org.total.spring.entity.User.roles) [non-identifier,association]) 
2016-10-10 18:54:02.220 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=roles, type=java.util.Set(org.total.spring.entity.User.roles) [non-identifier,association]) 
2016-10-10 18:54:02.220 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : userName 
2016-10-10 18:54:02.221 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=userName, type=string [non-identifier]) 
2016-10-10 18:54:02.221 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=userName, type=string [non-identifier]) 
2016-10-10 18:54:02.222 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromStack:136 :: Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@783ec989 
2016-10-10 18:54:02.222 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingEntity:224 ::  Finished root entity : org.total.spring.entity.User 
2016-10-10 18:54:02.223 - DEBUG - [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:94 :: Building LoadPlan... 
2016-10-10 18:54:02.223 - DEBUG - [main] LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:112 :: processing queryspace <gen:0> 
2016-10-10 18:54:02.224 - DEBUG - [main] LoadPlanTreePrinter:logTree:72 :: LoadPlan(entity=org.total.spring.entity.User)
    - Returns
       - EntityReturnImpl(entity=org.total.spring.entity.User, querySpaceUid=<gen:0>, path=org.total.spring.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.total.spring.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {userId1_3_0_}
 
2016-10-10 18:54:02.230 - DEBUG - [main] EntityLoader:<init>:146 :: Static select for entity org.total.spring.entity.User [READ]: select user0_.userId as userId1_3_0_, user0_.password as password2_3_0_, user0_.userName as userName3_3_0_ from User user0_ where user0_.userId=? 
2016-10-10 18:54:02.231 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntity:188 ::  Starting root entity : org.total.spring.entity.User 
2016-10-10 18:54:02.231 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ddd3478] 
2016-10-10 18:54:02.232 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToStack:129 :: Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@f973499 
2016-10-10 18:54:02.232 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 :: .. Registering AssociationKey : AssociationKey(table=User, columns={userId}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@f973499 
2016-10-10 18:54:02.233 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntityIdentifier:255 :: >> Starting entity identifier : org.total.spring.entity.User 
2016-10-10 18:54:02.233 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : password 
2016-10-10 18:54:02.234 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=password, type=string [non-identifier]) 
2016-10-10 18:54:02.234 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=password, type=string [non-identifier]) 
2016-10-10 18:54:02.235 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : roles 
2016-10-10 18:54:02.235 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=roles, type=java.util.Set(org.total.spring.entity.User.roles) [non-identifier,association]) 
2016-10-10 18:54:02.236 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=roles, type=java.util.Set(org.total.spring.entity.User.roles) [non-identifier,association]) 
2016-10-10 18:54:02.237 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : userName 
2016-10-10 18:54:02.237 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=userName, type=string [non-identifier]) 
2016-10-10 18:54:02.238 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=userName, type=string [non-identifier]) 
2016-10-10 18:54:02.238 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromStack:136 :: Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@f973499 
2016-10-10 18:54:02.239 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingEntity:224 ::  Finished root entity : org.total.spring.entity.User 
2016-10-10 18:54:02.239 - DEBUG - [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:94 :: Building LoadPlan... 
2016-10-10 18:54:02.240 - DEBUG - [main] LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:112 :: processing queryspace <gen:0> 
2016-10-10 18:54:02.241 - DEBUG - [main] LoadPlanTreePrinter:logTree:72 :: LoadPlan(entity=org.total.spring.entity.User)
    - Returns
       - EntityReturnImpl(entity=org.total.spring.entity.User, querySpaceUid=<gen:0>, path=org.total.spring.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.total.spring.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {userId1_3_0_}
 
2016-10-10 18:54:02.242 - DEBUG - [main] EntityLoader:<init>:146 :: Static select for entity org.total.spring.entity.User [UPGRADE]: select user0_.userId as userId1_3_0_, user0_.password as password2_3_0_, user0_.userName as userName3_3_0_ from User user0_ where user0_.userId=? for update 
2016-10-10 18:54:02.242 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntity:188 ::  Starting root entity : org.total.spring.entity.User 
2016-10-10 18:54:02.244 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d33940d] 
2016-10-10 18:54:02.248 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToStack:129 :: Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@43cf6ea3 
2016-10-10 18:54:02.249 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 :: .. Registering AssociationKey : AssociationKey(table=User, columns={userId}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@43cf6ea3 
2016-10-10 18:54:02.250 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntityIdentifier:255 :: >> Starting entity identifier : org.total.spring.entity.User 
2016-10-10 18:54:02.251 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : password 
2016-10-10 18:54:02.251 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=password, type=string [non-identifier]) 
2016-10-10 18:54:02.251 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=password, type=string [non-identifier]) 
2016-10-10 18:54:02.252 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : roles 
2016-10-10 18:54:02.253 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=roles, type=java.util.Set(org.total.spring.entity.User.roles) [non-identifier,association]) 
2016-10-10 18:54:02.253 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=roles, type=java.util.Set(org.total.spring.entity.User.roles) [non-identifier,association]) 
2016-10-10 18:54:02.255 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : userName 
2016-10-10 18:54:02.255 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=userName, type=string [non-identifier]) 
2016-10-10 18:54:02.255 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=userName, type=string [non-identifier]) 
2016-10-10 18:54:02.256 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromStack:136 :: Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@43cf6ea3 
2016-10-10 18:54:02.256 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingEntity:224 ::  Finished root entity : org.total.spring.entity.User 
2016-10-10 18:54:02.257 - DEBUG - [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:94 :: Building LoadPlan... 
2016-10-10 18:54:02.257 - DEBUG - [main] LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:112 :: processing queryspace <gen:0> 
2016-10-10 18:54:02.259 - DEBUG - [main] LoadPlanTreePrinter:logTree:72 :: LoadPlan(entity=org.total.spring.entity.User)
    - Returns
       - EntityReturnImpl(entity=org.total.spring.entity.User, querySpaceUid=<gen:0>, path=org.total.spring.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.total.spring.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {userId1_3_0_}
 
2016-10-10 18:54:02.263 - DEBUG - [main] EntityLoader:<init>:146 :: Static select for entity org.total.spring.entity.User [UPGRADE_NOWAIT]: select user0_.userId as userId1_3_0_, user0_.password as password2_3_0_, user0_.userName as userName3_3_0_ from User user0_ where user0_.userId=? for update 
2016-10-10 18:54:02.264 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntity:188 ::  Starting root entity : org.total.spring.entity.User 
2016-10-10 18:54:02.264 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37c5fc56] 
2016-10-10 18:54:02.288 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToStack:129 :: Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1c025cb 
2016-10-10 18:54:02.289 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 :: .. Registering AssociationKey : AssociationKey(table=User, columns={userId}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1c025cb 
2016-10-10 18:54:02.290 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntityIdentifier:255 :: >> Starting entity identifier : org.total.spring.entity.User 
2016-10-10 18:54:02.291 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : password 
2016-10-10 18:54:02.291 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=password, type=string [non-identifier]) 
2016-10-10 18:54:02.293 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=password, type=string [non-identifier]) 
2016-10-10 18:54:02.293 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : roles 
2016-10-10 18:54:02.294 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=roles, type=java.util.Set(org.total.spring.entity.User.roles) [non-identifier,association]) 
2016-10-10 18:54:02.295 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=roles, type=java.util.Set(org.total.spring.entity.User.roles) [non-identifier,association]) 
2016-10-10 18:54:02.295 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : userName 
2016-10-10 18:54:02.296 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=userName, type=string [non-identifier]) 
2016-10-10 18:54:02.296 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=userName, type=string [non-identifier]) 
2016-10-10 18:54:02.297 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromStack:136 :: Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1c025cb 
2016-10-10 18:54:02.298 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingEntity:224 ::  Finished root entity : org.total.spring.entity.User 
2016-10-10 18:54:02.298 - DEBUG - [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:94 :: Building LoadPlan... 
2016-10-10 18:54:02.299 - DEBUG - [main] LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:112 :: processing queryspace <gen:0> 
2016-10-10 18:54:02.300 - DEBUG - [main] LoadPlanTreePrinter:logTree:72 :: LoadPlan(entity=org.total.spring.entity.User)
    - Returns
       - EntityReturnImpl(entity=org.total.spring.entity.User, querySpaceUid=<gen:0>, path=org.total.spring.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.total.spring.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {userId1_3_0_}
 
2016-10-10 18:54:02.301 - DEBUG - [main] EntityLoader:<init>:146 :: Static select for entity org.total.spring.entity.User [UPGRADE_SKIPLOCKED]: select user0_.userId as userId1_3_0_, user0_.password as password2_3_0_, user0_.userName as userName3_3_0_ from User user0_ where user0_.userId=? for update 
2016-10-10 18:54:02.301 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntity:188 ::  Starting root entity : org.total.spring.entity.User 
2016-10-10 18:54:02.302 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50825a02] 
2016-10-10 18:54:02.302 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToStack:129 :: Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@68809cc7 
2016-10-10 18:54:02.303 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 :: .. Registering AssociationKey : AssociationKey(table=User, columns={userId}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@68809cc7 
2016-10-10 18:54:02.304 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntityIdentifier:255 :: >> Starting entity identifier : org.total.spring.entity.User 
2016-10-10 18:54:02.304 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : password 
2016-10-10 18:54:02.304 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=password, type=string [non-identifier]) 
2016-10-10 18:54:02.305 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=password, type=string [non-identifier]) 
2016-10-10 18:54:02.305 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : roles 
2016-10-10 18:54:02.311 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=roles, type=java.util.Set(org.total.spring.entity.User.roles) [non-identifier,association]) 
2016-10-10 18:54:02.312 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=roles, type=java.util.Set(org.total.spring.entity.User.roles) [non-identifier,association]) 
2016-10-10 18:54:02.312 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : userName 
2016-10-10 18:54:02.313 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=userName, type=string [non-identifier]) 
2016-10-10 18:54:02.313 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=userName, type=string [non-identifier]) 
2016-10-10 18:54:02.314 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromStack:136 :: Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@68809cc7 
2016-10-10 18:54:02.315 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingEntity:224 ::  Finished root entity : org.total.spring.entity.User 
2016-10-10 18:54:02.315 - DEBUG - [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:94 :: Building LoadPlan... 
2016-10-10 18:54:02.316 - DEBUG - [main] LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:112 :: processing queryspace <gen:0> 
2016-10-10 18:54:02.316 - DEBUG - [main] LoadPlanTreePrinter:logTree:72 :: LoadPlan(entity=org.total.spring.entity.User)
    - Returns
       - EntityReturnImpl(entity=org.total.spring.entity.User, querySpaceUid=<gen:0>, path=org.total.spring.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.total.spring.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {userId1_3_0_}
 
2016-10-10 18:54:02.318 - DEBUG - [main] EntityLoader:<init>:146 :: Static select for entity org.total.spring.entity.User [FORCE]: select user0_.userId as userId1_3_0_, user0_.password as password2_3_0_, user0_.userName as userName3_3_0_ from User user0_ where user0_.userId=? for update 
2016-10-10 18:54:02.319 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntity:188 ::  Starting root entity : org.total.spring.entity.User 
2016-10-10 18:54:02.320 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@703feacd] 
2016-10-10 18:54:02.321 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToStack:129 :: Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7051777c 
2016-10-10 18:54:02.322 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 :: .. Registering AssociationKey : AssociationKey(table=User, columns={userId}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7051777c 
2016-10-10 18:54:02.323 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntityIdentifier:255 :: >> Starting entity identifier : org.total.spring.entity.User 
2016-10-10 18:54:02.323 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : password 
2016-10-10 18:54:02.324 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=password, type=string [non-identifier]) 
2016-10-10 18:54:02.325 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=password, type=string [non-identifier]) 
2016-10-10 18:54:02.325 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : roles 
2016-10-10 18:54:02.326 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=roles, type=java.util.Set(org.total.spring.entity.User.roles) [non-identifier,association]) 
2016-10-10 18:54:02.326 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=roles, type=java.util.Set(org.total.spring.entity.User.roles) [non-identifier,association]) 
2016-10-10 18:54:02.327 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : userName 
2016-10-10 18:54:02.327 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=userName, type=string [non-identifier]) 
2016-10-10 18:54:02.328 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=userName, type=string [non-identifier]) 
2016-10-10 18:54:02.328 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromStack:136 :: Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7051777c 
2016-10-10 18:54:02.329 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingEntity:224 ::  Finished root entity : org.total.spring.entity.User 
2016-10-10 18:54:02.329 - DEBUG - [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:94 :: Building LoadPlan... 
2016-10-10 18:54:02.330 - DEBUG - [main] LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:112 :: processing queryspace <gen:0> 
2016-10-10 18:54:02.330 - DEBUG - [main] LoadPlanTreePrinter:logTree:72 :: LoadPlan(entity=org.total.spring.entity.User)
    - Returns
       - EntityReturnImpl(entity=org.total.spring.entity.User, querySpaceUid=<gen:0>, path=org.total.spring.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.total.spring.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {userId1_3_0_}
 
2016-10-10 18:54:02.331 - DEBUG - [main] EntityLoader:<init>:146 :: Static select for entity org.total.spring.entity.User [PESSIMISTIC_READ]: select user0_.userId as userId1_3_0_, user0_.password as password2_3_0_, user0_.userName as userName3_3_0_ from User user0_ where user0_.userId=? lock in share mode 
2016-10-10 18:54:02.332 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntity:188 ::  Starting root entity : org.total.spring.entity.User 
2016-10-10 18:54:02.332 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3241713e] 
2016-10-10 18:54:02.333 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToStack:129 :: Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5ecba515 
2016-10-10 18:54:02.333 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 :: .. Registering AssociationKey : AssociationKey(table=User, columns={userId}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5ecba515 
2016-10-10 18:54:02.334 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntityIdentifier:255 :: >> Starting entity identifier : org.total.spring.entity.User 
2016-10-10 18:54:02.334 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : password 
2016-10-10 18:54:02.335 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=password, type=string [non-identifier]) 
2016-10-10 18:54:02.335 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=password, type=string [non-identifier]) 
2016-10-10 18:54:02.336 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : roles 
2016-10-10 18:54:02.336 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=roles, type=java.util.Set(org.total.spring.entity.User.roles) [non-identifier,association]) 
2016-10-10 18:54:02.341 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=roles, type=java.util.Set(org.total.spring.entity.User.roles) [non-identifier,association]) 
2016-10-10 18:54:02.342 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : userName 
2016-10-10 18:54:02.342 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=userName, type=string [non-identifier]) 
2016-10-10 18:54:02.343 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=userName, type=string [non-identifier]) 
2016-10-10 18:54:02.343 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromStack:136 :: Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5ecba515 
2016-10-10 18:54:02.344 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingEntity:224 ::  Finished root entity : org.total.spring.entity.User 
2016-10-10 18:54:02.345 - DEBUG - [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:94 :: Building LoadPlan... 
2016-10-10 18:54:02.345 - DEBUG - [main] LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:112 :: processing queryspace <gen:0> 
2016-10-10 18:54:02.346 - DEBUG - [main] LoadPlanTreePrinter:logTree:72 :: LoadPlan(entity=org.total.spring.entity.User)
    - Returns
       - EntityReturnImpl(entity=org.total.spring.entity.User, querySpaceUid=<gen:0>, path=org.total.spring.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.total.spring.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {userId1_3_0_}
 
2016-10-10 18:54:02.347 - DEBUG - [main] EntityLoader:<init>:146 :: Static select for entity org.total.spring.entity.User [PESSIMISTIC_WRITE]: select user0_.userId as userId1_3_0_, user0_.password as password2_3_0_, user0_.userName as userName3_3_0_ from User user0_ where user0_.userId=? for update 
2016-10-10 18:54:02.348 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntity:188 ::  Starting root entity : org.total.spring.entity.User 
2016-10-10 18:54:02.349 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@512d4583] 
2016-10-10 18:54:02.349 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToStack:129 :: Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2abc224d 
2016-10-10 18:54:02.350 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 :: .. Registering AssociationKey : AssociationKey(table=User, columns={userId}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2abc224d 
2016-10-10 18:54:02.351 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntityIdentifier:255 :: >> Starting entity identifier : org.total.spring.entity.User 
2016-10-10 18:54:02.351 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : password 
2016-10-10 18:54:02.351 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=password, type=string [non-identifier]) 
2016-10-10 18:54:02.352 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=password, type=string [non-identifier]) 
2016-10-10 18:54:02.352 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : roles 
2016-10-10 18:54:02.353 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=roles, type=java.util.Set(org.total.spring.entity.User.roles) [non-identifier,association]) 
2016-10-10 18:54:02.356 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=roles, type=java.util.Set(org.total.spring.entity.User.roles) [non-identifier,association]) 
2016-10-10 18:54:02.357 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : userName 
2016-10-10 18:54:02.357 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=userName, type=string [non-identifier]) 
2016-10-10 18:54:02.358 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=userName, type=string [non-identifier]) 
2016-10-10 18:54:02.358 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromStack:136 :: Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2abc224d 
2016-10-10 18:54:02.359 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingEntity:224 ::  Finished root entity : org.total.spring.entity.User 
2016-10-10 18:54:02.359 - DEBUG - [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:94 :: Building LoadPlan... 
2016-10-10 18:54:02.360 - DEBUG - [main] LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:112 :: processing queryspace <gen:0> 
2016-10-10 18:54:02.361 - DEBUG - [main] LoadPlanTreePrinter:logTree:72 :: LoadPlan(entity=org.total.spring.entity.User)
    - Returns
       - EntityReturnImpl(entity=org.total.spring.entity.User, querySpaceUid=<gen:0>, path=org.total.spring.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.total.spring.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {userId1_3_0_}
 
2016-10-10 18:54:02.363 - DEBUG - [main] EntityLoader:<init>:146 :: Static select for entity org.total.spring.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.userId as userId1_3_0_, user0_.password as password2_3_0_, user0_.userName as userName3_3_0_ from User user0_ where user0_.userId=? for update 
2016-10-10 18:54:02.363 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntity:188 ::  Starting root entity : org.total.spring.entity.User 
2016-10-10 18:54:02.364 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13cd7ea5] 
2016-10-10 18:54:02.365 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToStack:129 :: Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@102d92c4 
2016-10-10 18:54:02.365 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 :: .. Registering AssociationKey : AssociationKey(table=User, columns={userId}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@102d92c4 
2016-10-10 18:54:02.366 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntityIdentifier:255 :: >> Starting entity identifier : org.total.spring.entity.User 
2016-10-10 18:54:02.367 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : password 
2016-10-10 18:54:02.367 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=password, type=string [non-identifier]) 
2016-10-10 18:54:02.368 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=password, type=string [non-identifier]) 
2016-10-10 18:54:02.369 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : roles 
2016-10-10 18:54:02.369 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=roles, type=java.util.Set(org.total.spring.entity.User.roles) [non-identifier,association]) 
2016-10-10 18:54:02.371 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=roles, type=java.util.Set(org.total.spring.entity.User.roles) [non-identifier,association]) 
2016-10-10 18:54:02.372 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : userName 
2016-10-10 18:54:02.372 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=userName, type=string [non-identifier]) 
2016-10-10 18:54:02.373 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=userName, type=string [non-identifier]) 
2016-10-10 18:54:02.377 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromStack:136 :: Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@102d92c4 
2016-10-10 18:54:02.378 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingEntity:224 ::  Finished root entity : org.total.spring.entity.User 
2016-10-10 18:54:02.378 - DEBUG - [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:94 :: Building LoadPlan... 
2016-10-10 18:54:02.379 - DEBUG - [main] LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:112 :: processing queryspace <gen:0> 
2016-10-10 18:54:02.380 - DEBUG - [main] LoadPlanTreePrinter:logTree:72 :: LoadPlan(entity=org.total.spring.entity.User)
    - Returns
       - EntityReturnImpl(entity=org.total.spring.entity.User, querySpaceUid=<gen:0>, path=org.total.spring.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.total.spring.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {userId1_3_0_}
 
2016-10-10 18:54:02.381 - DEBUG - [main] EntityLoader:<init>:146 :: Static select for entity org.total.spring.entity.User [OPTIMISTIC]: select user0_.userId as userId1_3_0_, user0_.password as password2_3_0_, user0_.userName as userName3_3_0_ from User user0_ where user0_.userId=? 
2016-10-10 18:54:02.382 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntity:188 ::  Starting root entity : org.total.spring.entity.User 
2016-10-10 18:54:02.382 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b97cc1f] 
2016-10-10 18:54:02.383 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToStack:129 :: Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@60723d6a 
2016-10-10 18:54:02.384 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 :: .. Registering AssociationKey : AssociationKey(table=User, columns={userId}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@60723d6a 
2016-10-10 18:54:02.384 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntityIdentifier:255 :: >> Starting entity identifier : org.total.spring.entity.User 
2016-10-10 18:54:02.385 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : password 
2016-10-10 18:54:02.385 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=password, type=string [non-identifier]) 
2016-10-10 18:54:02.388 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=password, type=string [non-identifier]) 
2016-10-10 18:54:02.388 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : roles 
2016-10-10 18:54:02.389 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=roles, type=java.util.Set(org.total.spring.entity.User.roles) [non-identifier,association]) 
2016-10-10 18:54:02.389 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=roles, type=java.util.Set(org.total.spring.entity.User.roles) [non-identifier,association]) 
2016-10-10 18:54:02.390 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : userName 
2016-10-10 18:54:02.390 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=userName, type=string [non-identifier]) 
2016-10-10 18:54:02.391 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=userName, type=string [non-identifier]) 
2016-10-10 18:54:02.391 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromStack:136 :: Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@60723d6a 
2016-10-10 18:54:02.392 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingEntity:224 ::  Finished root entity : org.total.spring.entity.User 
2016-10-10 18:54:02.393 - DEBUG - [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:94 :: Building LoadPlan... 
2016-10-10 18:54:02.393 - DEBUG - [main] LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:112 :: processing queryspace <gen:0> 
2016-10-10 18:54:02.394 - DEBUG - [main] LoadPlanTreePrinter:logTree:72 :: LoadPlan(entity=org.total.spring.entity.User)
    - Returns
       - EntityReturnImpl(entity=org.total.spring.entity.User, querySpaceUid=<gen:0>, path=org.total.spring.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=org.total.spring.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {userId1_3_0_}
 
2016-10-10 18:54:02.395 - DEBUG - [main] EntityLoader:<init>:146 :: Static select for entity org.total.spring.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.userId as userId1_3_0_, user0_.password as password2_3_0_, user0_.userName as userName3_3_0_ from User user0_ where user0_.userId=? 
2016-10-10 18:54:02.396 - DEBUG - [main] CascadeEntityLoader:<init>:56 :: Static select for action ACTION_MERGE on entity org.total.spring.entity.User: select user0_.userId as userId1_3_1_, user0_.password as password2_3_1_, user0_.userName as userName3_3_1_, roles1_.userId as userId1_3_3_, role2_.roleId as roleId2_4_3_, role2_.roleId as roleId1_1_0_, role2_.roleType as roleType2_1_0_ from User user0_ left outer join User_Role roles1_ on user0_.userId=roles1_.userId left outer join Role role2_ on roles1_.roleId=role2_.roleId where user0_.userId=? 
2016-10-10 18:54:02.398 - DEBUG - [main] CascadeEntityLoader:<init>:56 :: Static select for action ACTION_REFRESH on entity org.total.spring.entity.User: select user0_.userId as userId1_3_1_, user0_.password as password2_3_1_, user0_.userName as userName3_3_1_, roles1_.userId as userId1_3_3_, role2_.roleId as roleId2_4_3_, role2_.roleId as roleId1_1_0_, role2_.roleType as roleType2_1_0_ from User user0_ left outer join User_Role roles1_ on user0_.userId=roles1_.userId left outer join Role role2_ on roles1_.roleId=role2_.roleId where user0_.userId=? 
2016-10-10 18:54:02.404 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingCollection:357 ::  Starting root collection : org.total.spring.entity.User.roles 
2016-10-10 18:54:02.407 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@56de6d6b] 
2016-10-10 18:54:02.408 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5972d253] 
2016-10-10 18:54:02.409 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToCollectionStack:332 :: Pushing collection reference to stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@1473b8c0 
2016-10-10 18:54:02.410 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 ::  Registering AssociationKey : AssociationKey(table=User_Role, columns={userId}) -> null 
2016-10-10 18:54:02.411 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingCollectionElements:470 ::  Starting collection element graph : org.total.spring.entity.User.roles 
2016-10-10 18:54:02.412 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToStack:129 :: Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@6ef81f31 
2016-10-10 18:54:02.413 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 :: .. Registering AssociationKey : AssociationKey(table=User_Role, columns={roleId}) -> org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@6ef81f31 
2016-10-10 18:54:02.413 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntityIdentifier:255 :: >> Starting entity identifier : org.total.spring.entity.Role 
2016-10-10 18:54:02.414 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : roleType 
2016-10-10 18:54:02.414 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=roleType, type=org.hibernate.type.EnumType [non-identifier]) 
2016-10-10 18:54:02.415 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=roleType, type=org.hibernate.type.EnumType [non-identifier]) 
2016-10-10 18:54:02.416 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : users 
2016-10-10 18:54:02.416 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:162 :: Property path deemed to be circular : users 
2016-10-10 18:54:02.417 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromStack:136 :: Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@6ef81f31 
2016-10-10 18:54:02.417 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingCollectionElements:517 ::  Finished collection element graph : org.total.spring.entity.User.roles 
2016-10-10 18:54:02.418 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromCollectionStack:339 :: Popped collection reference from stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@1473b8c0 
2016-10-10 18:54:02.418 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingCollection:395 ::  Finished root collection : org.total.spring.entity.User.roles 
2016-10-10 18:54:02.420 - DEBUG - [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:94 :: Building LoadPlan... 
2016-10-10 18:54:02.424 - DEBUG - [main] LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:112 :: processing queryspace <gen:0> 
2016-10-10 18:54:02.425 - DEBUG - [main] LoadPlanTreePrinter:logTree:72 :: LoadPlan(collection=org.total.spring.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=org.total.spring.entity.User.roles, querySpaceUid=<gen:0>, path=[org.total.spring.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=org.total.spring.entity.Role, querySpaceUid=<gen:1>, path=[org.total.spring.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=org.total.spring.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {userId1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - roleId1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=org.total.spring.entity.Role)
                - SQL table alias mapping - role1_
                - alias suffix - 1_
                - suffixed key columns - {roleId1_1_1_}
 
2016-10-10 18:54:02.427 - DEBUG - [main] CollectionLoader:<init>:114 :: Static select for collection org.total.spring.entity.User.roles: select roles0_.userId as userId1_3_0_, roles0_.roleId as roleId2_4_0_, role1_.roleId as roleId1_1_1_, role1_.roleType as roleType2_1_1_ from User_Role roles0_ inner join Role role1_ on roles0_.roleId=role1_.roleId where roles0_.userId=? 
2016-10-10 18:54:02.428 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingCollection:357 ::  Starting root collection : org.total.spring.entity.Country.teams 
2016-10-10 18:54:02.429 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@777c350f] 
2016-10-10 18:54:02.429 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27aae97b] 
2016-10-10 18:54:02.431 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToCollectionStack:332 :: Pushing collection reference to stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@4c9e38 
2016-10-10 18:54:02.432 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 ::  Registering AssociationKey : AssociationKey(table=Team, columns={countryId}) -> null 
2016-10-10 18:54:02.433 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingCollectionElements:470 ::  Starting collection element graph : org.total.spring.entity.Country.teams 
2016-10-10 18:54:02.434 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToStack:129 :: Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@5d1e09bc 
2016-10-10 18:54:02.434 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntityIdentifier:255 :: >> Starting entity identifier : org.total.spring.entity.Team 
2016-10-10 18:54:02.435 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : country 
2016-10-10 18:54:02.435 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:162 :: Property path deemed to be circular : country 
2016-10-10 18:54:02.436 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : teamName 
2016-10-10 18:54:02.436 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=teamName, type=string [non-identifier]) 
2016-10-10 18:54:02.437 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=teamName, type=string [non-identifier]) 
2016-10-10 18:54:02.438 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromStack:136 :: Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@5d1e09bc 
2016-10-10 18:54:02.439 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingCollectionElements:517 ::  Finished collection element graph : org.total.spring.entity.Country.teams 
2016-10-10 18:54:02.440 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromCollectionStack:339 :: Popped collection reference from stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@4c9e38 
2016-10-10 18:54:02.441 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingCollection:395 ::  Finished root collection : org.total.spring.entity.Country.teams 
2016-10-10 18:54:02.441 - DEBUG - [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:94 :: Building LoadPlan... 
2016-10-10 18:54:02.442 - DEBUG - [main] LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:112 :: processing queryspace <gen:0> 
2016-10-10 18:54:02.442 - DEBUG - [main] LoadPlanTreePrinter:logTree:72 :: LoadPlan(collection=org.total.spring.entity.Country.teams)
    - Returns
       - CollectionReturnImpl(collection=org.total.spring.entity.Country.teams, querySpaceUid=<gen:0>, path=[org.total.spring.entity.Country.teams])
          - (collection element) CollectionFetchableElementEntityGraph(entity=org.total.spring.entity.Team, querySpaceUid=<gen:1>, path=[org.total.spring.entity.Country.teams].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=org.total.spring.entity.Country.teams)
          - SQL table alias mapping - teams0_
          - alias suffix - 0_
          - suffixed key columns - {countryI3_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - teamId1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=org.total.spring.entity.Team)
                - SQL table alias mapping - teams0_
                - alias suffix - 1_
                - suffixed key columns - {teamId1_2_1_}
 
2016-10-10 18:54:02.444 - DEBUG - [main] CollectionLoader:<init>:114 :: Static select for collection org.total.spring.entity.Country.teams: select teams0_.countryId as countryI3_0_0_, teams0_.teamId as teamId1_2_0_, teams0_.teamId as teamId1_2_1_, teams0_.countryId as countryI3_2_1_, teams0_.teamName as teamName2_2_1_ from Team teams0_ where teams0_.countryId=? 
2016-10-10 18:54:02.445 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingCollection:357 ::  Starting root collection : org.total.spring.entity.Role.users 
2016-10-10 18:54:02.445 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4bdc8b5d] 
2016-10-10 18:54:02.446 - DEBUG - [main] QuerySpacesImpl:registerQuerySpace:192 :: Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bcd426c] 
2016-10-10 18:54:02.446 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToCollectionStack:332 :: Pushing collection reference to stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@5f14a673 
2016-10-10 18:54:02.446 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 ::  Registering AssociationKey : AssociationKey(table=User_Role, columns={roleId}) -> null 
2016-10-10 18:54:02.447 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingCollectionElements:470 ::  Starting collection element graph : org.total.spring.entity.Role.users 
2016-10-10 18:54:02.448 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:pushToStack:129 :: Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@726a17c4 
2016-10-10 18:54:02.449 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:associationKeyRegistered:664 :: .. Registering AssociationKey : AssociationKey(table=User_Role, columns={userId}) -> org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@726a17c4 
2016-10-10 18:54:02.450 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingEntityIdentifier:255 :: >> Starting entity identifier : org.total.spring.entity.User 
2016-10-10 18:54:02.451 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : password 
2016-10-10 18:54:02.451 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=password, type=string [non-identifier]) 
2016-10-10 18:54:02.452 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=password, type=string [non-identifier]) 
2016-10-10 18:54:02.453 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : roles 
2016-10-10 18:54:02.453 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:162 :: Property path deemed to be circular : roles 
2016-10-10 18:54:02.454 - DEBUG - [main] MetamodelGraphWalker:visitAttributeDefinition:154 :: Visiting attribute path : userName 
2016-10-10 18:54:02.454 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:startingAttribute:563 :: >> Starting attribute Attribute(name=userName, type=string [non-identifier]) 
2016-10-10 18:54:02.455 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingAttribute:644 :: << Finishing up attribute : Attribute(name=userName, type=string [non-identifier]) 
2016-10-10 18:54:02.455 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromStack:136 :: Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@726a17c4 
2016-10-10 18:54:02.457 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingCollectionElements:517 ::  Finished collection element graph : org.total.spring.entity.Role.users 
2016-10-10 18:54:02.458 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:popFromCollectionStack:339 :: Popped collection reference from stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@5f14a673 
2016-10-10 18:54:02.459 - TRACE - [main] AbstractLoadPlanBuildingAssociationVisitationStrategy:finishingCollection:395 ::  Finished root collection : org.total.spring.entity.Role.users 
2016-10-10 18:54:02.459 - DEBUG - [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy:buildLoadPlan:94 :: Building LoadPlan... 
2016-10-10 18:54:02.460 - DEBUG - [main] LoadQueryJoinAndFetchProcessor:processQuerySpaceJoins:112 :: processing queryspace <gen:0> 
2016-10-10 18:54:02.461 - DEBUG - [main] LoadPlanTreePrinter:logTree:72 :: LoadPlan(collection=org.total.spring.entity.Role.users)
    - Returns
       - CollectionReturnImpl(collection=org.total.spring.entity.Role.users, querySpaceUid=<gen:0>, path=[org.total.spring.entity.Role.users])
          - (collection element) CollectionFetchableElementEntityGraph(entity=org.total.spring.entity.User, querySpaceUid=<gen:1>, path=[org.total.spring.entity.Role.users].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=org.total.spring.entity.Role.users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {roleId2_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - userId1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=org.total.spring.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {userId1_3_1_}
 
2016-10-10 18:54:02.463 - DEBUG - [main] CollectionLoader:<init>:114 :: Static select for collection org.total.spring.entity.Role.users: select users0_.roleId as roleId2_1_0_, users0_.userId as userId1_4_0_, user1_.userId as userId1_3_1_, user1_.password as password2_3_1_, user1_.userName as userName3_3_1_ from User_Role users0_ inner join User user1_ on users0_.userId=user1_.userId where users0_.roleId=? 
2016-10-10 18:54:02.779 - DEBUG - [main] SessionFactoryRegistry:<init>:67 :: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@340b7ef6 
2016-10-10 18:54:02.780 - DEBUG - [main] SessionFactoryRegistry:addSessionFactory:89 :: Registering SessionFactory: a986d2aa-fd01-41d3-9e11-530d90569d7f (<unnamed>) 
2016-10-10 18:54:02.780 - DEBUG - [main] SessionFactoryRegistry:addSessionFactory:96 :: Not binding SessionFactory to JNDI, no JNDI name configured 
2016-10-10 18:54:02.780 - DEBUG - [main] SessionFactoryImpl:<init>:505 :: Instantiated session factory 
2016-10-10 18:54:02.784 -  INFO - [main] SchemaUpdate:execute:207 :: HHH000228: Running hbm2ddl schema update 
2016-10-10 18:54:02.784 -  INFO - [main] SchemaUpdate:execute:218 :: HHH000102: Fetching database metadata 
2016-10-10 18:54:02.792 -  INFO - [main] SchemaUpdate:execute:230 :: HHH000396: Updating schema 
2016-10-10 18:54:02.792 - TRACE - [main] Configuration:secondPassCompile:1377 :: Starting secondPassCompile() processing 
2016-10-10 18:54:02.793 - DEBUG - [main] Configuration$MetadataSourceQueue:processHbmXmlQueue:3805 :: Processing hbm.xml files 
2016-10-10 18:54:02.793 - DEBUG - [main] Configuration$MetadataSourceQueue:processAnnotatedClassesQueue:3835 :: Process annotated classes 
2016-10-10 18:54:02.793 - DEBUG - [main] Configuration:processFkSecondPassInOrder:1484 :: Processing fk mappings (*ToOne and JoinedSubclass) 
2016-10-10 18:54:02.793 - DEBUG - [main] Configuration:originalSecondPassCompile:1689 :: Processing extends queue 
2016-10-10 18:54:02.794 - DEBUG - [main] Configuration:processExtendsQueue:1747 :: Processing extends queue 
2016-10-10 18:54:02.794 - DEBUG - [main] Configuration:originalSecondPassCompile:1692 :: Processing collection mappings 
2016-10-10 18:54:02.794 - DEBUG - [main] Configuration:originalSecondPassCompile:1702 :: Processing native query and ResultSetMapping mappings 
2016-10-10 18:54:02.795 - DEBUG - [main] Configuration:originalSecondPassCompile:1710 :: Processing association property references 
2016-10-10 18:54:02.795 - DEBUG - [main] Configuration:originalSecondPassCompile:1732 :: Creating tables' unique integer identifiers 
2016-10-10 18:54:02.795 - DEBUG - [main] Configuration:originalSecondPassCompile:1733 :: Processing foreign key constraints 
2016-10-10 18:54:02.796 - DEBUG - [main] Configuration:secondPassCompileForeignKeys:1804 :: Resolving reference to class: org.total.spring.entity.Country 
2016-10-10 18:54:02.796 - DEBUG - [main] Configuration:secondPassCompileForeignKeys:1804 :: Resolving reference to class: org.total.spring.entity.Role 
2016-10-10 18:54:02.796 - DEBUG - [main] Configuration:secondPassCompileForeignKeys:1804 :: Resolving reference to class: org.total.spring.entity.User 
2016-10-10 18:54:02.799 - TRACE - [main] UniqueConstraintSchemaUpdateStrategy:interpret:69 :: Interpreting UniqueConstraintSchemaUpdateStrategy from setting : null 
2016-10-10 18:54:02.838 -  INFO - [main] TableMetadata:<init>:65 :: HHH000261: Table found: GoalDB.country 
2016-10-10 18:54:02.838 -  INFO - [main] TableMetadata:<init>:66 :: HHH000037: Columns: [countrycode, countryname, countryid] 
2016-10-10 18:54:02.839 -  INFO - [main] TableMetadata:<init>:68 :: HHH000108: Foreign keys: [] 
2016-10-10 18:54:02.839 -  INFO - [main] TableMetadata:<init>:69 :: HHH000126: Indexes: [uk_mlnoip7x4goxmg4xppnygdm30, uk_r81ypfvufyl9j10kwf0iq2qp2, primary] 
2016-10-10 18:54:02.869 -  INFO - [main] TableMetadata:<init>:65 :: HHH000261: Table found: GoalDB.role 
2016-10-10 18:54:02.869 -  INFO - [main] TableMetadata:<init>:66 :: HHH000037: Columns: [roleid, roletype] 
2016-10-10 18:54:02.869 -  INFO - [main] TableMetadata:<init>:68 :: HHH000108: Foreign keys: [] 
2016-10-10 18:54:02.870 -  INFO - [main] TableMetadata:<init>:69 :: HHH000126: Indexes: [primary, uk_nxi0oj6rx7os1n225p9774h1h] 
2016-10-10 18:54:02.900 -  INFO - [main] TableMetadata:<init>:65 :: HHH000261: Table found: GoalDB.team 
2016-10-10 18:54:02.900 -  INFO - [main] TableMetadata:<init>:66 :: HHH000037: Columns: [teamid, countryid, teamname] 
2016-10-10 18:54:02.900 -  INFO - [main] TableMetadata:<init>:68 :: HHH000108: Foreign keys: [] 
2016-10-10 18:54:02.901 -  INFO - [main] TableMetadata:<init>:69 :: HHH000126: Indexes: [fk_aatshuhcsilb2am193ipcvwj6, uk_1evifvohc8bipdqdg44jp6h9m, primary] 
2016-10-10 18:54:02.931 -  INFO - [main] TableMetadata:<init>:65 :: HHH000261: Table found: GoalDB.user 
2016-10-10 18:54:02.931 -  INFO - [main] TableMetadata:<init>:66 :: HHH000037: Columns: [password, userid, username] 
2016-10-10 18:54:02.931 -  INFO - [main] TableMetadata:<init>:68 :: HHH000108: Foreign keys: [] 
2016-10-10 18:54:02.931 -  INFO - [main] TableMetadata:<init>:69 :: HHH000126: Indexes: [uk_hl8fftx66p59oqgkkcfit3eay, primary] 
2016-10-10 18:54:02.964 -  INFO - [main] TableMetadata:<init>:65 :: HHH000261: Table found: GoalDB.user_role 
2016-10-10 18:54:02.965 -  INFO - [main] TableMetadata:<init>:66 :: HHH000037: Columns: [roleid, userid] 
2016-10-10 18:54:02.965 -  INFO - [main] TableMetadata:<init>:68 :: HHH000108: Foreign keys: [] 
2016-10-10 18:54:02.965 -  INFO - [main] TableMetadata:<init>:69 :: HHH000126: Indexes: [fk_g39ies9dduychx2ewie6kfrm1, primary] 
2016-10-10 18:54:02.966 - DEBUG - [main] DefaultIdentifierGeneratorFactory:setDialect:107 :: Setting dialect [org.hibernate.dialect.MySQLDialect] 
2016-10-10 18:54:02.967 - DEBUG - [main] DefaultIdentifierGeneratorFactory:setDialect:107 :: Setting dialect [org.hibernate.dialect.MySQLDialect] 
2016-10-10 18:54:02.968 - DEBUG - [main] DefaultIdentifierGeneratorFactory:setDialect:107 :: Setting dialect [org.hibernate.dialect.MySQLDialect] 
2016-10-10 18:54:02.968 - DEBUG - [main] DefaultIdentifierGeneratorFactory:setDialect:107 :: Setting dialect [org.hibernate.dialect.MySQLDialect] 
2016-10-10 18:54:02.968 - DEBUG - [main] SchemaUpdate:execute:251 :: alter table User_Role add constraint FK_s85y8s12f86qe3r7f4cfe6xkb foreign key (userId) references User (userId) 
2016-10-10 18:54:03.042 -  INFO - [main] SchemaUpdate:execute:267 :: HHH000232: Schema update complete 
2016-10-10 18:54:03.043 - DEBUG - [main] NamedQueryRepository:checkNamedQueries:155 :: Checking 0 named HQL queries 
2016-10-10 18:54:03.043 - DEBUG - [main] NamedQueryRepository:checkNamedQueries:171 :: Checking 0 named SQL queries 
2016-10-10 18:54:03.044 - TRACE - [main] AbstractServiceRegistryImpl:initializeService:221 :: Initializing service [role=org.hibernate.engine.config.spi.ConfigurationService] 
2016-10-10 18:54:03.046 - TRACE - [main] AbstractServiceRegistryImpl:initializeService:221 :: Initializing service [role=org.hibernate.stat.spi.StatisticsImplementor] 
2016-10-10 18:54:03.050 - DEBUG - [main] StatisticsInitiator:initiateServiceInternal:110 :: Statistics initialized [enabled=false] 
2016-10-10 18:54:03.055 - TRACE - [main] AbstractServiceRegistryImpl:initializeService:221 :: Initializing service [role=org.hibernate.tool.hbm2ddl.ImportSqlCommandExtractor] 
2016-10-10 18:54:03.056 - DEBUG - [main] JpaSchemaGenerator$Generation:execute:115 :: No actions specified; doing nothing 
2016-10-10 18:54:03.078 - TRACE - [main] MetadataContext:wrapUp:202 :: Wrapping up metadata context... 
2016-10-10 18:54:03.078 - TRACE - [main] MetadataContext:wrapUp:209 :: Starting entity [org.total.spring.entity.Role] 
2016-10-10 18:54:03.080 - TRACE - [main] AttributeFactory:buildIdAttribute:142 :: Building identifier attribute [org.total.spring.entity.Role.roleId] 
2016-10-10 18:54:03.081 - TRACE - [main] AttributeFactory:determineAttributeMetadata:462 :: Starting attribute metadata determination [roleId] 
2016-10-10 18:54:03.083 - TRACE - [main] AttributeFactory:determineAttributeMetadata:467 ::     Determined member [public long org.total.spring.entity.Role.getRoleId()] 
2016-10-10 18:54:03.084 - TRACE - [main] AttributeFactory:determineAttributeMetadata:471 ::     Determined type [name=long, class=org.hibernate.type.LongType] 
2016-10-10 18:54:03.089 - TRACE - [main] AttributeFactory:buildAttribute:91 :: Building attribute [org.total.spring.entity.Role.roleType] 
2016-10-10 18:54:03.090 - TRACE - [main] AttributeFactory:determineAttributeMetadata:462 :: Starting attribute metadata determination [roleType] 
2016-10-10 18:54:03.090 - TRACE - [main] AttributeFactory:determineAttributeMetadata:467 ::     Determined member [public org.total.spring.entity.RoleType org.total.spring.entity.Role.getRoleType()] 
2016-10-10 18:54:03.090 - TRACE - [main] AttributeFactory:determineAttributeMetadata:471 ::     Determined type [name=org.hibernate.type.EnumType, class=org.hibernate.type.CustomType] 
2016-10-10 18:54:03.091 - TRACE - [main] AttributeFactory:buildAttribute:91 :: Building attribute [org.total.spring.entity.Role.users] 
2016-10-10 18:54:03.091 - TRACE - [main] AttributeFactory:determineAttributeMetadata:462 :: Starting attribute metadata determination [users] 
2016-10-10 18:54:03.092 - TRACE - [main] AttributeFactory:determineAttributeMetadata:467 ::     Determined member [public java.util.Set org.total.spring.entity.Role.getUsers()] 
2016-10-10 18:54:03.092 - TRACE - [main] AttributeFactory:determineAttributeMetadata:471 ::     Determined type [name=java.util.Set(org.total.spring.entity.Role.users), class=org.hibernate.type.SetType] 
2016-10-10 18:54:03.097 - TRACE - [main] MetadataContext:wrapUp:236 :: Completed entity [org.total.spring.entity.Role] 
2016-10-10 18:54:03.098 - TRACE - [main] MetadataContext:wrapUp:209 :: Starting entity [org.total.spring.entity.Country] 
2016-10-10 18:54:03.098 - TRACE - [main] AttributeFactory:buildIdAttribute:142 :: Building identifier attribute [org.total.spring.entity.Country.countryId] 
2016-10-10 18:54:03.098 - TRACE - [main] AttributeFactory:determineAttributeMetadata:462 :: Starting attribute metadata determination [countryId] 
2016-10-10 18:54:03.099 - TRACE - [main] AttributeFactory:determineAttributeMetadata:467 ::     Determined member [public long org.total.spring.entity.Country.getCountryId()] 
2016-10-10 18:54:03.099 - TRACE - [main] AttributeFactory:determineAttributeMetadata:471 ::     Determined type [name=long, class=org.hibernate.type.LongType] 
2016-10-10 18:54:03.099 - TRACE - [main] AttributeFactory:buildAttribute:91 :: Building attribute [org.total.spring.entity.Country.countryCode] 
2016-10-10 18:54:03.100 - TRACE - [main] AttributeFactory:determineAttributeMetadata:462 :: Starting attribute metadata determination [countryCode] 
2016-10-10 18:54:03.100 - TRACE - [main] AttributeFactory:determineAttributeMetadata:467 ::     Determined member [public org.total.spring.entity.CountryCode org.total.spring.entity.Country.getCountryCode()] 
2016-10-10 18:54:03.101 - TRACE - [main] AttributeFactory:determineAttributeMetadata:471 ::     Determined type [name=org.hibernate.type.EnumType, class=org.hibernate.type.CustomType] 
2016-10-10 18:54:03.101 - TRACE - [main] AttributeFactory:buildAttribute:91 :: Building attribute [org.total.spring.entity.Country.countryName] 
2016-10-10 18:54:03.102 - TRACE - [main] AttributeFactory:determineAttributeMetadata:462 :: Starting attribute metadata determination [countryName] 
2016-10-10 18:54:03.102 - TRACE - [main] AttributeFactory:determineAttributeMetadata:467 ::     Determined member [public java.lang.String org.total.spring.entity.Country.getCountryName()] 
2016-10-10 18:54:03.102 - TRACE - [main] AttributeFactory:determineAttributeMetadata:471 ::     Determined type [name=string, class=org.hibernate.type.StringType] 
2016-10-10 18:54:03.103 - TRACE - [main] AttributeFactory:buildAttribute:91 :: Building attribute [org.total.spring.entity.Country.teams] 
2016-10-10 18:54:03.103 - TRACE - [main] AttributeFactory:determineAttributeMetadata:462 :: Starting attribute metadata determination [teams] 
2016-10-10 18:54:03.104 - TRACE - [main] AttributeFactory:determineAttributeMetadata:467 ::     Determined member [public java.util.Set org.total.spring.entity.Country.getTeams()] 
2016-10-10 18:54:03.104 - TRACE - [main] AttributeFactory:determineAttributeMetadata:471 ::     Determined type [name=java.util.Set(org.total.spring.entity.Country.teams), class=org.hibernate.type.SetType] 
2016-10-10 18:54:03.105 - TRACE - [main] MetadataContext:wrapUp:236 :: Completed entity [org.total.spring.entity.Country] 
2016-10-10 18:54:03.105 - TRACE - [main] MetadataContext:wrapUp:209 :: Starting entity [org.total.spring.entity.Team] 
2016-10-10 18:54:03.105 - TRACE - [main] AttributeFactory:buildIdAttribute:142 :: Building identifier attribute [org.total.spring.entity.Team.teamId] 
2016-10-10 18:54:03.106 - TRACE - [main] AttributeFactory:determineAttributeMetadata:462 :: Starting attribute metadata determination [teamId] 
2016-10-10 18:54:03.106 - TRACE - [main] AttributeFactory:determineAttributeMetadata:467 ::     Determined member [public long org.total.spring.entity.Team.getTeamId()] 
2016-10-10 18:54:03.107 - TRACE - [main] AttributeFactory:determineAttributeMetadata:471 ::     Determined type [name=long, class=org.hibernate.type.LongType] 
2016-10-10 18:54:03.107 - TRACE - [main] AttributeFactory:buildAttribute:91 :: Building attribute [org.total.spring.entity.Team.country] 
2016-10-10 18:54:03.107 - TRACE - [main] AttributeFactory:determineAttributeMetadata:462 :: Starting attribute metadata determination [country] 
2016-10-10 18:54:03.108 - TRACE - [main] AttributeFactory:determineAttributeMetadata:467 ::     Determined member [public org.total.spring.entity.Country org.total.spring.entity.Team.getCountry()] 
2016-10-10 18:54:03.108 - TRACE - [main] AttributeFactory:determineAttributeMetadata:471 ::     Determined type [name=org.total.spring.entity.Country, class=org.hibernate.type.ManyToOneType] 
2016-10-10 18:54:03.110 - TRACE - [main] AttributeFactory:buildAttribute:91 :: Building attribute [org.total.spring.entity.Team.teamName] 
2016-10-10 18:54:03.110 - TRACE - [main] AttributeFactory:determineAttributeMetadata:462 :: Starting attribute metadata determination [teamName] 
2016-10-10 18:54:03.110 - TRACE - [main] AttributeFactory:determineAttributeMetadata:467 ::     Determined member [public java.lang.String org.total.spring.entity.Team.getTeamName()] 
2016-10-10 18:54:03.111 - TRACE - [main] AttributeFactory:determineAttributeMetadata:471 ::     Determined type [name=string, class=org.hibernate.type.StringType] 
2016-10-10 18:54:03.112 - TRACE - [main] MetadataContext:wrapUp:236 :: Completed entity [org.total.spring.entity.Team] 
2016-10-10 18:54:03.112 - TRACE - [main] MetadataContext:wrapUp:209 :: Starting entity [org.total.spring.entity.User] 
2016-10-10 18:54:03.112 - TRACE - [main] AttributeFactory:buildIdAttribute:142 :: Building identifier attribute [org.total.spring.entity.User.userId] 
2016-10-10 18:54:03.113 - TRACE - [main] AttributeFactory:determineAttributeMetadata:462 :: Starting attribute metadata determination [userId] 
2016-10-10 18:54:03.113 - TRACE - [main] AttributeFactory:determineAttributeMetadata:467 ::     Determined member [public long org.total.spring.entity.User.getUserId()] 
2016-10-10 18:54:03.113 - TRACE - [main] AttributeFactory:determineAttributeMetadata:471 ::     Determined type [name=long, class=org.hibernate.type.LongType] 
2016-10-10 18:54:03.113 - TRACE - [main] AttributeFactory:buildAttribute:91 :: Building attribute [org.total.spring.entity.User.password] 
2016-10-10 18:54:03.114 - TRACE - [main] AttributeFactory:determineAttributeMetadata:462 :: Starting attribute metadata determination [password] 
2016-10-10 18:54:03.114 - TRACE - [main] AttributeFactory:determineAttributeMetadata:467 ::     Determined member [public java.lang.String org.total.spring.entity.User.getPassword()] 
2016-10-10 18:54:03.114 - TRACE - [main] AttributeFactory:determineAttributeMetadata:471 ::     Determined type [name=string, class=org.hibernate.type.StringType] 
2016-10-10 18:54:03.114 - TRACE - [main] AttributeFactory:buildAttribute:91 :: Building attribute [org.total.spring.entity.User.roles] 
2016-10-10 18:54:03.116 - TRACE - [main] AttributeFactory:determineAttributeMetadata:462 :: Starting attribute metadata determination [roles] 
2016-10-10 18:54:03.116 - TRACE - [main] AttributeFactory:determineAttributeMetadata:467 ::     Determined member [public java.util.Set org.total.spring.entity.User.getRoles()] 
2016-10-10 18:54:03.116 - TRACE - [main] AttributeFactory:determineAttributeMetadata:471 ::     Determined type [name=java.util.Set(org.total.spring.entity.User.roles), class=org.hibernate.type.SetType] 
2016-10-10 18:54:03.117 - TRACE - [main] AttributeFactory:buildAttribute:91 :: Building attribute [org.total.spring.entity.User.userName] 
2016-10-10 18:54:03.117 - TRACE - [main] AttributeFactory:determineAttributeMetadata:462 :: Starting attribute metadata determination [userName] 
2016-10-10 18:54:03.118 - TRACE - [main] AttributeFactory:determineAttributeMetadata:467 ::     Determined member [public java.lang.String org.total.spring.entity.User.getUserName()] 
2016-10-10 18:54:03.118 - TRACE - [main] AttributeFactory:determineAttributeMetadata:471 ::     Determined type [name=string, class=org.hibernate.type.StringType] 
2016-10-10 18:54:03.119 - TRACE - [main] MetadataContext:wrapUp:236 :: Completed entity [org.total.spring.entity.User] 
2016-10-10 18:54:03.130 - DEBUG - [main] EntityManagerFactoryRegistry:<init>:56 :: Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@511505e7 
2016-10-10 18:54:03.131 - DEBUG - [main] EntityManagerFactoryRegistry:addEntityManagerFactory:66 :: Registering EntityManagerFactory: default  
2016-10-10 18:54:03.271 - TRACE - [main] SessionFactoryImpl$SessionBuilderImpl:openSession:1588 :: Opening Hibernate Session.  tenant=null, owner=org.hibernate.jpa.internal.EntityManagerImpl@24e08d59 
2016-10-10 18:54:03.309 - TRACE - [main] SessionImpl:<init>:322 :: Opened session at timestamp: 14761148432 
2016-10-10 18:54:03.313 - TRACE - [main] SessionImpl:setFlushMode:1437 :: Setting flush mode to: AUTO 
2016-10-10 18:54:03.314 - TRACE - [main] SessionImpl:setCacheMode:1457 :: Setting cache mode to: NORMAL 
2016-10-10 18:54:03.350 - TRACE - [main] SessionImpl:close:357 :: Closing session 
2016-10-10 18:54:03.350 - TRACE - [main] JdbcCoordinatorImpl:close:199 :: Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@238acd0b] 
2016-10-10 18:54:03.351 - TRACE - [main] LogicalConnectionImpl:close:178 :: Closing logical connection 
2016-10-10 18:54:03.363 - TRACE - [main] LogicalConnectionImpl:close:190 :: Logical connection closed 
2016-10-10 18:54:03.373 - TRACE - [main] SessionFactoryImpl$SessionBuilderImpl:openSession:1588 :: Opening Hibernate Session.  tenant=null, owner=org.hibernate.jpa.internal.EntityManagerImpl@7a7d1b47 
2016-10-10 18:54:03.374 - TRACE - [main] SessionImpl:<init>:322 :: Opened session at timestamp: 14761148433 
2016-10-10 18:54:03.374 - TRACE - [main] SessionImpl:setFlushMode:1437 :: Setting flush mode to: AUTO 
2016-10-10 18:54:03.375 - TRACE - [main] SessionImpl:setCacheMode:1457 :: Setting cache mode to: NORMAL 
2016-10-10 18:54:03.375 - TRACE - [main] SessionImpl:close:357 :: Closing session 
2016-10-10 18:54:03.376 - TRACE - [main] JdbcCoordinatorImpl:close:199 :: Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@6eb82908] 
2016-10-10 18:54:03.377 - TRACE - [main] LogicalConnectionImpl:close:178 :: Closing logical connection 
2016-10-10 18:54:03.377 - TRACE - [main] LogicalConnectionImpl:close:190 :: Logical connection closed 
2016-10-10 18:54:03.378 - TRACE - [main] SessionFactoryImpl$SessionBuilderImpl:openSession:1588 :: Opening Hibernate Session.  tenant=null, owner=org.hibernate.jpa.internal.EntityManagerImpl@4a8df3e2 
2016-10-10 18:54:03.378 - TRACE - [main] SessionImpl:<init>:322 :: Opened session at timestamp: 14761148433 
2016-10-10 18:54:03.379 - TRACE - [main] SessionImpl:setFlushMode:1437 :: Setting flush mode to: AUTO 
2016-10-10 18:54:03.379 - TRACE - [main] SessionImpl:setCacheMode:1457 :: Setting cache mode to: NORMAL 
2016-10-10 18:54:03.380 - TRACE - [main] SessionImpl:close:357 :: Closing session 
2016-10-10 18:54:03.380 - TRACE - [main] JdbcCoordinatorImpl:close:199 :: Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@3d98d138] 
2016-10-10 18:54:03.381 - TRACE - [main] LogicalConnectionImpl:close:178 :: Closing logical connection 
2016-10-10 18:54:03.381 - TRACE - [main] LogicalConnectionImpl:close:190 :: Logical connection closed 
2016-10-10 18:54:03.382 - TRACE - [main] SessionFactoryImpl$SessionBuilderImpl:openSession:1588 :: Opening Hibernate Session.  tenant=null, owner=org.hibernate.jpa.internal.EntityManagerImpl@2f2d52ef 
2016-10-10 18:54:03.383 - TRACE - [main] SessionImpl:<init>:322 :: Opened session at timestamp: 14761148433 
2016-10-10 18:54:03.383 - TRACE - [main] SessionImpl:setFlushMode:1437 :: Setting flush mode to: AUTO 
2016-10-10 18:54:03.384 - TRACE - [main] SessionImpl:setCacheMode:1457 :: Setting cache mode to: NORMAL 
2016-10-10 18:54:03.384 - TRACE - [main] SessionImpl:close:357 :: Closing session 
2016-10-10 18:54:03.385 - TRACE - [main] JdbcCoordinatorImpl:close:199 :: Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@f2ce6b] 
2016-10-10 18:54:03.385 - TRACE - [main] LogicalConnectionImpl:close:178 :: Closing logical connection 
2016-10-10 18:54:03.386 - TRACE - [main] LogicalConnectionImpl:close:190 :: Logical connection closed 
2016-10-10 18:54:03.387 - TRACE - [main] SessionFactoryImpl$SessionBuilderImpl:openSession:1588 :: Opening Hibernate Session.  tenant=null, owner=org.hibernate.jpa.internal.EntityManagerImpl@25c53f74 
2016-10-10 18:54:03.388 - TRACE - [main] SessionImpl:<init>:322 :: Opened session at timestamp: 14761148433 
2016-10-10 18:54:03.389 - TRACE - [main] SessionImpl:setFlushMode:1437 :: Setting flush mode to: AUTO 
2016-10-10 18:54:03.389 - TRACE - [main] SessionImpl:setCacheMode:1457 :: Setting cache mode to: NORMAL 
2016-10-10 18:54:03.390 - TRACE - [main] SessionImpl:close:357 :: Closing session 
2016-10-10 18:54:03.390 - TRACE - [main] JdbcCoordinatorImpl:close:199 :: Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@5e2f3be5] 
2016-10-10 18:54:03.391 - TRACE - [main] LogicalConnectionImpl:close:178 :: Closing logical connection 
2016-10-10 18:54:03.392 - TRACE - [main] LogicalConnectionImpl:close:190 :: Logical connection closed 
2016-10-10 18:54:03.393 - TRACE - [main] SessionFactoryImpl$SessionBuilderImpl:openSession:1588 :: Opening Hibernate Session.  tenant=null, owner=org.hibernate.jpa.internal.EntityManagerImpl@1bd0b0e5 
2016-10-10 18:54:03.394 - TRACE - [main] SessionImpl:<init>:322 :: Opened session at timestamp: 14761148433 
2016-10-10 18:54:03.394 - TRACE - [main] SessionImpl:setFlushMode:1437 :: Setting flush mode to: AUTO 
2016-10-10 18:54:03.395 - TRACE - [main] SessionImpl:setCacheMode:1457 :: Setting cache mode to: NORMAL 
2016-10-10 18:54:03.395 - TRACE - [main] SessionImpl:close:357 :: Closing session 
2016-10-10 18:54:03.397 - TRACE - [main] JdbcCoordinatorImpl:close:199 :: Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@dc7b462] 
2016-10-10 18:54:03.398 - TRACE - [main] LogicalConnectionImpl:close:178 :: Closing logical connection 
2016-10-10 18:54:03.399 - TRACE - [main] LogicalConnectionImpl:close:190 :: Logical connection closed 
2016-10-10 18:54:03.416 - TRACE - [main] SessionFactoryImpl$SessionBuilderImpl:openSession:1588 :: Opening Hibernate Session.  tenant=null, owner=org.hibernate.jpa.internal.EntityManagerImpl@6c8909c3 
2016-10-10 18:54:03.417 - TRACE - [main] SessionImpl:<init>:322 :: Opened session at timestamp: 14761148434 
2016-10-10 18:54:03.418 - TRACE - [main] SessionImpl:setFlushMode:1437 :: Setting flush mode to: AUTO 
2016-10-10 18:54:03.419 - TRACE - [main] SessionImpl:setCacheMode:1457 :: Setting cache mode to: NORMAL 
2016-10-10 18:54:03.419 - TRACE - [main] SessionImpl:close:357 :: Closing session 
2016-10-10 18:54:03.420 - TRACE - [main] JdbcCoordinatorImpl:close:199 :: Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@1e008f36] 
2016-10-10 18:54:03.421 - TRACE - [main] LogicalConnectionImpl:close:178 :: Closing logical connection 
2016-10-10 18:54:03.421 - TRACE - [main] LogicalConnectionImpl:close:190 :: Logical connection closed 
2016-10-10 18:54:03.452 - TRACE - [main] SessionFactoryImpl$SessionBuilderImpl:openSession:1588 :: Opening Hibernate Session.  tenant=null, owner=org.hibernate.jpa.internal.EntityManagerImpl@1431267b 
2016-10-10 18:54:03.453 - TRACE - [main] SessionImpl:<init>:322 :: Opened session at timestamp: 14761148434 
2016-10-10 18:54:03.454 - TRACE - [main] SessionImpl:setFlushMode:1437 :: Setting flush mode to: AUTO 
2016-10-10 18:54:03.455 - TRACE - [main] SessionImpl:setCacheMode:1457 :: Setting cache mode to: NORMAL 
2016-10-10 18:54:03.456 - TRACE - [main] SessionImpl:close:357 :: Closing session 
2016-10-10 18:54:03.457 - TRACE - [main] JdbcCoordinatorImpl:close:199 :: Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@c808207] 
2016-10-10 18:54:03.457 - TRACE - [main] LogicalConnectionImpl:close:178 :: Closing logical connection 
2016-10-10 18:54:03.458 - TRACE - [main] LogicalConnectionImpl:close:190 :: Logical connection closed 
2016-10-10 18:54:03.537 - TRACE - [main] SessionFactoryImpl$SessionBuilderImpl:openSession:1588 :: Opening Hibernate Session.  tenant=null, owner=org.hibernate.jpa.internal.EntityManagerImpl@3be4fcc0 
2016-10-10 18:54:03.537 - TRACE - [main] SessionImpl:<init>:322 :: Opened session at timestamp: 14761148435 
2016-10-10 18:54:03.538 - TRACE - [main] SessionImpl:setFlushMode:1437 :: Setting flush mode to: AUTO 
2016-10-10 18:54:03.539 - TRACE - [main] SessionImpl:setCacheMode:1457 :: Setting cache mode to: NORMAL 
2016-10-10 18:54:03.556 - TRACE - [main] QueryPlanCache:getHQLQueryPlan:166 :: Unable to locate HQL query plan in cache; generating (SELECT u FROM User u LEFT JOIN FETCH u.roles WHERE u.userName = (:userName) AND u.password = (:password)) 
2016-10-10 18:54:03.597 - DEBUG - [main] QueryTranslatorImpl:parse:294 :: parse() - HQL: SELECT u FROM org.total.spring.entity.User u LEFT JOIN FETCH u.roles WHERE u.userName = (:userName) AND u.password = (:password) 
2016-10-10 18:54:03.609 - DEBUG - [main] QueryTranslatorImpl:showHqlAst:312 :: --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'total'
    |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'User'
    |  |  |  \-[ALIAS] Node: 'u'
    |  |  \-[JOIN] Node: 'JOIN'
    |  |     +-[LEFT] Node: 'LEFT'
    |  |     +-[FETCH] Node: 'FETCH'
    |  |     \-[DOT] Node: '.'
    |  |        +-[IDENT] Node: 'u'
    |  |        \-[IDENT] Node: 'roles'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'u'
          |  |  \-[IDENT] Node: 'userName'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'userName'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'u'
             |  \-[IDENT] Node: 'password'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'password'
 
2016-10-10 18:54:03.612 - DEBUG - [main] ErrorCounter:throwQueryException:113 :: throwQueryException() : no errors 
2016-10-10 18:54:03.638 - DEBUG - [main] HqlSqlBaseWalker:beforeStatement:121 :: select << begin [level=1, statement=select] 
2016-10-10 18:54:03.659 - DEBUG - [main] FromElement:doInitialize:158 :: FromClause{level=1} : org.total.spring.entity.User (u) -> user0_ 
2016-10-10 18:54:03.671 - DEBUG - [main] FromReferenceNode:setResolved:77 :: Resolved : u -> user0_.userId 
2016-10-10 18:54:03.673 - TRACE - [main] FromElement:handlePropertyBeingDereferenced:639 :: Handling property dereference [org.total.spring.entity.User (u) -> roles (class)] 
2016-10-10 18:54:03.674 - DEBUG - [main] DotNode:getDataType:666 :: getDataType() : roles -> org.hibernate.type.SetType(org.total.spring.entity.User.roles) 
2016-10-10 18:54:03.677 - DEBUG - [main] FromElementFactory:createEntityAssociation:422 :: createManyToMany() : path = u.roles role = org.total.spring.entity.User.roles associatedEntityName = org.total.spring.entity.Role 
2016-10-10 18:54:03.680 - DEBUG - [main] FromElement:doInitialize:158 :: FromClause{level=1} : org.total.spring.entity.Role (<no alias>) -> role2_ 
2016-10-10 18:54:03.681 - DEBUG - [main] FromClause:addJoinByPathMap:284 :: addJoinByPathMap() : u.roles -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Role,tableAlias=role2_,origin=User user0_,columns={user0_.userId ,className=org.total.spring.entity.Role}} 
2016-10-10 18:54:03.682 - DEBUG - [main] DotNode:dereferenceCollection:351 :: dereferenceCollection() : Created new FROM element for u.roles : User_Role role2_ 
2016-10-10 18:54:03.684 - DEBUG - [main] FromReferenceNode:setResolved:77 :: Resolved : u.roles -> . 
2016-10-10 18:54:03.685 - DEBUG - [main] HqlSqlWalker:createFromJoinElement:425 :: createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'User_Role role2_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.total.spring.entity.User.roles,tableName=Role,tableAlias=role2_,origin=User user0_,columns={user0_.userId ,className=org.total.spring.entity.Role}}
 
2016-10-10 18:54:03.687 - DEBUG - [main] FromReferenceNode:setResolved:77 :: Resolved : u -> user0_.userId 
2016-10-10 18:54:03.692 - DEBUG - [main] FromReferenceNode:setResolved:77 :: Resolved : u -> user0_.userId 
2016-10-10 18:54:03.693 - TRACE - [main] FromElement:handlePropertyBeingDereferenced:639 :: Handling property dereference [org.total.spring.entity.User (u) -> userName (class)] 
2016-10-10 18:54:03.695 - DEBUG - [main] DotNode:getDataType:666 :: getDataType() : userName -> org.hibernate.type.StringType@4b9df8a 
2016-10-10 18:54:03.697 - DEBUG - [main] FromReferenceNode:setResolved:77 :: Resolved : u.userName -> user0_.userName 
2016-10-10 18:54:03.701 - DEBUG - [main] FromReferenceNode:setResolved:77 :: Resolved : u -> user0_.userId 
2016-10-10 18:54:03.702 - TRACE - [main] FromElement:handlePropertyBeingDereferenced:639 :: Handling property dereference [org.total.spring.entity.User (u) -> password (class)] 
2016-10-10 18:54:03.702 - DEBUG - [main] DotNode:getDataType:666 :: getDataType() : password -> org.hibernate.type.StringType@4b9df8a 
2016-10-10 18:54:03.703 - DEBUG - [main] FromReferenceNode:setResolved:77 :: Resolved : u.password -> user0_.password 
2016-10-10 18:54:03.705 - DEBUG - [main] HqlSqlBaseWalker:beforeStatementCompletion:125 :: select : finishing up [level=1, statement=select] 
2016-10-10 18:54:03.705 - DEBUG - [main] HqlSqlWalker:processQuery:671 :: processQuery() :  ( SELECT ( {select clause} user0_.userId ) ( FromClause{level=1} ( User user0_ User_Role role2_ ) ) ( WHERE ( AND ( = ( user0_.userName user0_.userId userName ) ? ) ( = ( user0_.password user0_.userId password ) ? ) ) ) ) 
2016-10-10 18:54:03.715 - DEBUG - [main] JoinProcessor:addJoinNodes:187 :: Using FROM fragment [User user0_] 
2016-10-10 18:54:03.716 - DEBUG - [main] JoinProcessor:addJoinNodes:187 :: Using FROM fragment [left outer join User_Role roles1_ on user0_.userId=roles1_.userId left outer join Role role2_ on roles1_.roleId=role2_.roleId] 
2016-10-10 18:54:03.717 - DEBUG - [main] HqlSqlBaseWalker:afterStatementCompletion:129 :: select >> end [level=1, statement=select] 
2016-10-10 18:54:03.722 - DEBUG - [main] QueryTranslatorImpl:analyze:281 :: --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Role,User,User_Role)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.userId as userId1_3_0_' {alias=u, className=org.total.spring.entity.User, tableAlias=user0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'role2_.roleId as roleId1_1_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.total.spring.entity.User.roles,tableName=Role,tableAlias=role2_,origin=User user0_,columns={user0_.userId ,className=org.total.spring.entity.Role}}}
    |  +-[SQL_TOKEN] SqlFragment: 'user0_.password as password2_3_0_, user0_.userName as userName3_3_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'role2_.roleType as roleType2_1_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'roles1_.userId as userId1_3_0__, roles1_.roleId as roleId2_4_0__'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_, role2_], fromElementsByPath=[u.roles], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'User user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=User,tableAlias=user0_,origin=null,columns={,className=org.total.spring.entity.User}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join User_Role roles1_ on user0_.userId=roles1_.userId left outer join Role role2_ on roles1_.roleId=role2_.roleId' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.total.spring.entity.User.roles,tableName=Role,tableAlias=role2_,origin=User user0_,columns={user0_.userId ,className=org.total.spring.entity.Role}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'user0_.userName' {propertyName=userName,dereferenceType=PRIMITIVE,getPropertyPath=userName,path=u.userName,tableAlias=user0_,className=org.total.spring.entity.User,classAlias=u}
          |  |  +-[ALIAS_REF] IdentNode: 'user0_.userId' {alias=u, className=org.total.spring.entity.User, tableAlias=user0_}
          |  |  \-[IDENT] IdentNode: 'userName' {originalText=userName}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=userName, expectedType=org.hibernate.type.StringType@4b9df8a}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'user0_.password' {propertyName=password,dereferenceType=PRIMITIVE,getPropertyPath=password,path=u.password,tableAlias=user0_,className=org.total.spring.entity.User,classAlias=u}
             |  +-[ALIAS_REF] IdentNode: 'user0_.userId' {alias=u, className=org.total.spring.entity.User, tableAlias=user0_}
             |  \-[IDENT] IdentNode: 'password' {originalText=password}
             \-[NAMED_PARAM] ParameterNode: '?' {name=password, expectedType=org.hibernate.type.StringType@4b9df8a}
 
2016-10-10 18:54:03.730 - DEBUG - [main] ErrorCounter:throwQueryException:113 :: throwQueryException() : no errors 
2016-10-10 18:54:03.743 - DEBUG - [main] QueryTranslatorImpl:generate:263 :: HQL: SELECT u FROM org.total.spring.entity.User u LEFT JOIN FETCH u.roles WHERE u.userName = (:userName) AND u.password = (:password) 
2016-10-10 18:54:03.744 - DEBUG - [main] QueryTranslatorImpl:generate:264 :: SQL: select user0_.userId as userId1_3_0_, role2_.roleId as roleId1_1_1_, user0_.password as password2_3_0_, user0_.userName as userName3_3_0_, role2_.roleType as roleType2_1_1_, roles1_.userId as userId1_3_0__, roles1_.roleId as roleId2_4_0__ from User user0_ left outer join User_Role roles1_ on user0_.userId=roles1_.userId left outer join Role role2_ on roles1_.roleId=role2_.roleId where user0_.userName=? and user0_.password=? 
2016-10-10 18:54:03.745 - DEBUG - [main] ErrorCounter:throwQueryException:113 :: throwQueryException() : no errors 
2016-10-10 18:54:03.754 - TRACE - [main] HQLQueryPlan:buildParameterMetadata:390 :: HQL param location recognition took 2,398,875 nanoseconds (SELECT u FROM User u LEFT JOIN FETCH u.roles WHERE u.userName = (:userName) AND u.password = (:password)) 
2016-10-10 18:54:03.759 - TRACE - [main] SessionImpl:close:357 :: Closing session 
2016-10-10 18:54:03.760 - TRACE - [main] JdbcCoordinatorImpl:close:199 :: Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@3d7b1f1c] 
2016-10-10 18:54:03.761 - TRACE - [main] LogicalConnectionImpl:close:178 :: Closing logical connection 
2016-10-10 18:54:03.761 - TRACE - [main] LogicalConnectionImpl:close:190 :: Logical connection closed 
2016-10-10 18:54:03.765 - TRACE - [main] SessionFactoryImpl$SessionBuilderImpl:openSession:1588 :: Opening Hibernate Session.  tenant=null, owner=org.hibernate.jpa.internal.EntityManagerImpl@65b66b08 
2016-10-10 18:54:03.766 - TRACE - [main] SessionImpl:<init>:322 :: Opened session at timestamp: 14761148437 
2016-10-10 18:54:03.767 - TRACE - [main] SessionImpl:setFlushMode:1437 :: Setting flush mode to: AUTO 
2016-10-10 18:54:03.768 - TRACE - [main] SessionImpl:setCacheMode:1457 :: Setting cache mode to: NORMAL 
2016-10-10 18:54:03.769 - TRACE - [main] QueryPlanCache:getHQLQueryPlan:166 :: Unable to locate HQL query plan in cache; generating (SELECT u FROM User u LEFT JOIN FETCH u.roles WHERE u.userName = (:userName)) 
2016-10-10 18:54:03.773 - DEBUG - [main] QueryTranslatorImpl:parse:294 :: parse() - HQL: SELECT u FROM org.total.spring.entity.User u LEFT JOIN FETCH u.roles WHERE u.userName = (:userName) 
2016-10-10 18:54:03.779 - DEBUG - [main] QueryTranslatorImpl:showHqlAst:312 :: --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'total'
    |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'User'
    |  |  |  \-[ALIAS] Node: 'u'
    |  |  \-[JOIN] Node: 'JOIN'
    |  |     +-[LEFT] Node: 'LEFT'
    |  |     +-[FETCH] Node: 'FETCH'
    |  |     \-[DOT] Node: '.'
    |  |        +-[IDENT] Node: 'u'
    |  |        \-[IDENT] Node: 'roles'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'userName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'userName'
 
2016-10-10 18:54:03.781 - DEBUG - [main] ErrorCounter:throwQueryException:113 :: throwQueryException() : no errors 
2016-10-10 18:54:03.782 - DEBUG - [main] HqlSqlBaseWalker:beforeStatement:121 :: select << begin [level=1, statement=select] 
2016-10-10 18:54:03.784 - DEBUG - [main] FromElement:doInitialize:158 :: FromClause{level=1} : org.total.spring.entity.User (u) -> user0_ 
2016-10-10 18:54:03.786 - DEBUG - [main] FromReferenceNode:setResolved:77 :: Resolved : u -> user0_.userId 
2016-10-10 18:54:03.787 - TRACE - [main] FromElement:handlePropertyBeingDereferenced:639 :: Handling property dereference [org.total.spring.entity.User (u) -> roles (class)] 
2016-10-10 18:54:03.788 - DEBUG - [main] DotNode:getDataType:666 :: getDataType() : roles -> org.hibernate.type.SetType(org.total.spring.entity.User.roles) 
2016-10-10 18:54:03.789 - DEBUG - [main] FromElementFactory:createEntityAssociation:422 :: createManyToMany() : path = u.roles role = org.total.spring.entity.User.roles associatedEntityName = org.total.spring.entity.Role 
2016-10-10 18:54:03.796 - DEBUG - [main] FromElement:doInitialize:158 :: FromClause{level=1} : org.total.spring.entity.Role (<no alias>) -> role2_ 
2016-10-10 18:54:03.825 - DEBUG - [main] FromClause:addJoinByPathMap:284 :: addJoinByPathMap() : u.roles -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Role,tableAlias=role2_,origin=User user0_,columns={user0_.userId ,className=org.total.spring.entity.Role}} 
2016-10-10 18:54:03.826 - DEBUG - [main] DotNode:dereferenceCollection:351 :: dereferenceCollection() : Created new FROM element for u.roles : User_Role role2_ 
2016-10-10 18:54:03.826 - DEBUG - [main] FromReferenceNode:setResolved:77 :: Resolved : u.roles -> . 
2016-10-10 18:54:03.827 - DEBUG - [main] HqlSqlWalker:createFromJoinElement:425 :: createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'User_Role role2_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.total.spring.entity.User.roles,tableName=Role,tableAlias=role2_,origin=User user0_,columns={user0_.userId ,className=org.total.spring.entity.Role}}
 
2016-10-10 18:54:03.828 - DEBUG - [main] FromReferenceNode:setResolved:77 :: Resolved : u -> user0_.userId 
2016-10-10 18:54:03.828 - DEBUG - [main] FromReferenceNode:setResolved:77 :: Resolved : u -> user0_.userId 
2016-10-10 18:54:03.830 - TRACE - [main] FromElement:handlePropertyBeingDereferenced:639 :: Handling property dereference [org.total.spring.entity.User (u) -> userName (class)] 
2016-10-10 18:54:03.830 - DEBUG - [main] DotNode:getDataType:666 :: getDataType() : userName -> org.hibernate.type.StringType@4b9df8a 
2016-10-10 18:54:03.831 - DEBUG - [main] FromReferenceNode:setResolved:77 :: Resolved : u.userName -> user0_.userName 
2016-10-10 18:54:03.832 - DEBUG - [main] HqlSqlBaseWalker:beforeStatementCompletion:125 :: select : finishing up [level=1, statement=select] 
2016-10-10 18:54:03.832 - DEBUG - [main] HqlSqlWalker:processQuery:671 :: processQuery() :  ( SELECT ( {select clause} user0_.userId ) ( FromClause{level=1} ( User user0_ User_Role role2_ ) ) ( WHERE ( = ( user0_.userName user0_.userId userName ) ? ) ) ) 
2016-10-10 18:54:03.833 - DEBUG - [main] JoinProcessor:addJoinNodes:187 :: Using FROM fragment [User user0_] 
2016-10-10 18:54:03.834 - DEBUG - [main] JoinProcessor:addJoinNodes:187 :: Using FROM fragment [left outer join User_Role roles1_ on user0_.userId=roles1_.userId left outer join Role role2_ on roles1_.roleId=role2_.roleId] 
2016-10-10 18:54:03.835 - DEBUG - [main] HqlSqlBaseWalker:afterStatementCompletion:129 :: select >> end [level=1, statement=select] 
2016-10-10 18:54:03.836 - DEBUG - [main] QueryTranslatorImpl:analyze:281 :: --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Role,User,User_Role)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.userId as userId1_3_0_' {alias=u, className=org.total.spring.entity.User, tableAlias=user0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'role2_.roleId as roleId1_1_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.total.spring.entity.User.roles,tableName=Role,tableAlias=role2_,origin=User user0_,columns={user0_.userId ,className=org.total.spring.entity.Role}}}
    |  +-[SQL_TOKEN] SqlFragment: 'user0_.password as password2_3_0_, user0_.userName as userName3_3_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'role2_.roleType as roleType2_1_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'roles1_.userId as userId1_3_0__, roles1_.roleId as roleId2_4_0__'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_, role2_], fromElementsByPath=[u.roles], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'User user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=User,tableAlias=user0_,origin=null,columns={,className=org.total.spring.entity.User}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join User_Role roles1_ on user0_.userId=roles1_.userId left outer join Role role2_ on roles1_.roleId=role2_.roleId' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.total.spring.entity.User.roles,tableName=Role,tableAlias=role2_,origin=User user0_,columns={user0_.userId ,className=org.total.spring.entity.Role}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.userName' {propertyName=userName,dereferenceType=PRIMITIVE,getPropertyPath=userName,path=u.userName,tableAlias=user0_,className=org.total.spring.entity.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.userId' {alias=u, className=org.total.spring.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'userName' {originalText=userName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=userName, expectedType=org.hibernate.type.StringType@4b9df8a}
 
2016-10-10 18:54:03.864 - DEBUG - [main] ErrorCounter:throwQueryException:113 :: throwQueryException() : no errors 
2016-10-10 18:54:03.865 - DEBUG - [main] QueryTranslatorImpl:generate:263 :: HQL: SELECT u FROM org.total.spring.entity.User u LEFT JOIN FETCH u.roles WHERE u.userName = (:userName) 
2016-10-10 18:54:03.865 - DEBUG - [main] QueryTranslatorImpl:generate:264 :: SQL: select user0_.userId as userId1_3_0_, role2_.roleId as roleId1_1_1_, user0_.password as password2_3_0_, user0_.userName as userName3_3_0_, role2_.roleType as roleType2_1_1_, roles1_.userId as userId1_3_0__, roles1_.roleId as roleId2_4_0__ from User user0_ left outer join User_Role roles1_ on user0_.userId=roles1_.userId left outer join Role role2_ on roles1_.roleId=role2_.roleId where user0_.userName=? 
2016-10-10 18:54:03.866 - DEBUG - [main] ErrorCounter:throwQueryException:113 :: throwQueryException() : no errors 
2016-10-10 18:54:03.877 - TRACE - [main] HQLQueryPlan:buildParameterMetadata:390 :: HQL param location recognition took 25,658 nanoseconds (SELECT u FROM User u LEFT JOIN FETCH u.roles WHERE u.userName = (:userName)) 
2016-10-10 18:54:03.877 - TRACE - [main] SessionImpl:close:357 :: Closing session 
2016-10-10 18:54:03.878 - TRACE - [main] JdbcCoordinatorImpl:close:199 :: Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@10ef5fa0] 
2016-10-10 18:54:03.879 - TRACE - [main] LogicalConnectionImpl:close:178 :: Closing logical connection 
2016-10-10 18:54:03.879 - TRACE - [main] LogicalConnectionImpl:close:190 :: Logical connection closed 
2016-10-10 18:54:03.892 - TRACE - [main] SessionFactoryImpl$SessionBuilderImpl:openSession:1588 :: Opening Hibernate Session.  tenant=null, owner=org.hibernate.jpa.internal.EntityManagerImpl@244e619a 
2016-10-10 18:54:03.893 - TRACE - [main] SessionImpl:<init>:322 :: Opened session at timestamp: 14761148438 
2016-10-10 18:54:03.894 - TRACE - [main] SessionImpl:setFlushMode:1437 :: Setting flush mode to: AUTO 
2016-10-10 18:54:03.894 - TRACE - [main] SessionImpl:setCacheMode:1457 :: Setting cache mode to: NORMAL 
2016-10-10 18:54:03.895 - TRACE - [main] QueryPlanCache:getHQLQueryPlan:166 :: Unable to locate HQL query plan in cache; generating (SELECT u FROM User u INNER JOIN FETCH u.roles) 
2016-10-10 18:54:03.897 - DEBUG - [main] QueryTranslatorImpl:parse:294 :: parse() - HQL: SELECT u FROM org.total.spring.entity.User u INNER JOIN FETCH u.roles 
2016-10-10 18:54:03.902 - DEBUG - [main] QueryTranslatorImpl:showHqlAst:312 :: --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  +-[RANGE] Node: 'RANGE'
       |  |  +-[DOT] Node: '.'
       |  |  |  +-[DOT] Node: '.'
       |  |  |  |  +-[DOT] Node: '.'
       |  |  |  |  |  +-[DOT] Node: '.'
       |  |  |  |  |  |  +-[IDENT] Node: 'org'
       |  |  |  |  |  |  \-[IDENT] Node: 'total'
       |  |  |  |  |  \-[IDENT] Node: 'spring'
       |  |  |  |  \-[IDENT] Node: 'entity'
       |  |  |  \-[IDENT] Node: 'User'
       |  |  \-[ALIAS] Node: 'u'
       |  \-[JOIN] Node: 'JOIN'
       |     +-[INNER] Node: 'INNER'
       |     +-[FETCH] Node: 'FETCH'
       |     \-[DOT] Node: '.'
       |        +-[IDENT] Node: 'u'
       |        \-[IDENT] Node: 'roles'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'u'
 
2016-10-10 18:54:03.906 - DEBUG - [main] ErrorCounter:throwQueryException:113 :: throwQueryException() : no errors 
2016-10-10 18:54:03.907 - DEBUG - [main] HqlSqlBaseWalker:beforeStatement:121 :: select << begin [level=1, statement=select] 
2016-10-10 18:54:03.908 - DEBUG - [main] FromElement:doInitialize:158 :: FromClause{level=1} : org.total.spring.entity.User (u) -> user0_ 
2016-10-10 18:54:03.909 - DEBUG - [main] FromReferenceNode:setResolved:77 :: Resolved : u -> user0_.userId 
2016-10-10 18:54:03.909 - TRACE - [main] FromElement:handlePropertyBeingDereferenced:639 :: Handling property dereference [org.total.spring.entity.User (u) -> roles (class)] 
2016-10-10 18:54:03.921 - DEBUG - [main] DotNode:getDataType:666 :: getDataType() : roles -> org.hibernate.type.SetType(org.total.spring.entity.User.roles) 
2016-10-10 18:54:03.922 - DEBUG - [main] FromElementFactory:createEntityAssociation:422 :: createManyToMany() : path = u.roles role = org.total.spring.entity.User.roles associatedEntityName = org.total.spring.entity.Role 
2016-10-10 18:54:03.923 - DEBUG - [main] FromElement:doInitialize:158 :: FromClause{level=1} : org.total.spring.entity.Role (<no alias>) -> role2_ 
2016-10-10 18:54:03.924 - DEBUG - [main] FromClause:addJoinByPathMap:284 :: addJoinByPathMap() : u.roles -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Role,tableAlias=role2_,origin=User user0_,columns={user0_.userId ,className=org.total.spring.entity.Role}} 
2016-10-10 18:54:03.925 - DEBUG - [main] DotNode:dereferenceCollection:351 :: dereferenceCollection() : Created new FROM element for u.roles : User_Role role2_ 
2016-10-10 18:54:03.926 - DEBUG - [main] FromReferenceNode:setResolved:77 :: Resolved : u.roles -> . 
2016-10-10 18:54:03.927 - DEBUG - [main] HqlSqlWalker:createFromJoinElement:425 :: createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'User_Role role2_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.total.spring.entity.User.roles,tableName=Role,tableAlias=role2_,origin=User user0_,columns={user0_.userId ,className=org.total.spring.entity.Role}}
 
2016-10-10 18:54:03.928 - DEBUG - [main] FromReferenceNode:setResolved:77 :: Resolved : u -> user0_.userId 
2016-10-10 18:54:03.929 - DEBUG - [main] HqlSqlBaseWalker:beforeStatementCompletion:125 :: select : finishing up [level=1, statement=select] 
2016-10-10 18:54:03.930 - DEBUG - [main] HqlSqlWalker:processQuery:671 :: processQuery() :  ( SELECT ( {select clause} user0_.userId ) ( FromClause{level=1} ( User user0_ User_Role role2_ ) ) ) 
2016-10-10 18:54:03.931 - DEBUG - [main] JoinProcessor:addJoinNodes:187 :: Using FROM fragment [User user0_] 
2016-10-10 18:54:03.932 - DEBUG - [main] JoinProcessor:addJoinNodes:187 :: Using FROM fragment [inner join User_Role roles1_ on user0_.userId=roles1_.userId inner join Role role2_ on roles1_.roleId=role2_.roleId] 
2016-10-10 18:54:03.933 - DEBUG - [main] HqlSqlBaseWalker:afterStatementCompletion:129 :: select >> end [level=1, statement=select] 
2016-10-10 18:54:03.933 - DEBUG - [main] QueryTranslatorImpl:analyze:281 :: --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Role,User,User_Role)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.userId as userId1_3_0_' {alias=u, className=org.total.spring.entity.User, tableAlias=user0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'role2_.roleId as roleId1_1_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.total.spring.entity.User.roles,tableName=Role,tableAlias=role2_,origin=User user0_,columns={user0_.userId ,className=org.total.spring.entity.Role}}}
    |  +-[SQL_TOKEN] SqlFragment: 'user0_.password as password2_3_0_, user0_.userName as userName3_3_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'role2_.roleType as roleType2_1_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'roles1_.userId as userId1_3_0__, roles1_.roleId as roleId2_4_0__'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_, role2_], fromElementsByPath=[u.roles], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'User user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=User,tableAlias=user0_,origin=null,columns={,className=org.total.spring.entity.User}}
          \-[JOIN_FRAGMENT] FromElement: 'inner join User_Role roles1_ on user0_.userId=roles1_.userId inner join Role role2_ on roles1_.roleId=role2_.roleId' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.total.spring.entity.User.roles,tableName=Role,tableAlias=role2_,origin=User user0_,columns={user0_.userId ,className=org.total.spring.entity.Role}}
 
2016-10-10 18:54:03.936 - DEBUG - [main] ErrorCounter:throwQueryException:113 :: throwQueryException() : no errors 
2016-10-10 18:54:03.937 - DEBUG - [main] QueryTranslatorImpl:generate:263 :: HQL: SELECT u FROM org.total.spring.entity.User u INNER JOIN FETCH u.roles 
2016-10-10 18:54:03.938 - DEBUG - [main] QueryTranslatorImpl:generate:264 :: SQL: select user0_.userId as userId1_3_0_, role2_.roleId as roleId1_1_1_, user0_.password as password2_3_0_, user0_.userName as userName3_3_0_, role2_.roleType as roleType2_1_1_, roles1_.userId as userId1_3_0__, roles1_.roleId as roleId2_4_0__ from User user0_ inner join User_Role roles1_ on user0_.userId=roles1_.userId inner join Role role2_ on roles1_.roleId=role2_.roleId 
2016-10-10 18:54:03.938 - DEBUG - [main] ErrorCounter:throwQueryException:113 :: throwQueryException() : no errors 
2016-10-10 18:54:03.939 - TRACE - [main] HQLQueryPlan:buildParameterMetadata:390 :: HQL param location recognition took 6,316 nanoseconds (SELECT u FROM User u INNER JOIN FETCH u.roles) 
2016-10-10 18:54:03.939 - TRACE - [main] SessionImpl:close:357 :: Closing session 
2016-10-10 18:54:03.940 - TRACE - [main] JdbcCoordinatorImpl:close:199 :: Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@5cb042da] 
2016-10-10 18:54:03.940 - TRACE - [main] LogicalConnectionImpl:close:178 :: Closing logical connection 
2016-10-10 18:54:03.940 - TRACE - [main] LogicalConnectionImpl:close:190 :: Logical connection closed 
2016-10-10 18:54:03.942 - TRACE - [main] SessionFactoryImpl$SessionBuilderImpl:openSession:1588 :: Opening Hibernate Session.  tenant=null, owner=org.hibernate.jpa.internal.EntityManagerImpl@59c33386 
2016-10-10 18:54:03.943 - TRACE - [main] SessionImpl:<init>:322 :: Opened session at timestamp: 14761148439 
2016-10-10 18:54:03.944 - TRACE - [main] SessionImpl:setFlushMode:1437 :: Setting flush mode to: AUTO 
2016-10-10 18:54:03.945 - TRACE - [main] SessionImpl:setCacheMode:1457 :: Setting cache mode to: NORMAL 
2016-10-10 18:54:03.946 - TRACE - [main] QueryPlanCache:getHQLQueryPlan:166 :: Unable to locate HQL query plan in cache; generating (SELECT u FROM User u LEFT JOIN FETCH u.roles WHERE u.userId = (:userId)) 
2016-10-10 18:54:03.947 - DEBUG - [main] QueryTranslatorImpl:parse:294 :: parse() - HQL: SELECT u FROM org.total.spring.entity.User u LEFT JOIN FETCH u.roles WHERE u.userId = (:userId) 
2016-10-10 18:54:03.949 - DEBUG - [main] QueryTranslatorImpl:showHqlAst:312 :: --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'total'
    |  |  |  |  |  |  \-[IDENT] Node: 'spring'
    |  |  |  |  |  \-[IDENT] Node: 'entity'
    |  |  |  |  \-[IDENT] Node: 'User'
    |  |  |  \-[ALIAS] Node: 'u'
    |  |  \-[JOIN] Node: 'JOIN'
    |  |     +-[LEFT] Node: 'LEFT'
    |  |     +-[FETCH] Node: 'FETCH'
    |  |     \-[DOT] Node: '.'
    |  |        +-[IDENT] Node: 'u'
    |  |        \-[IDENT] Node: 'roles'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'userId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'userId'
 
2016-10-10 18:54:03.951 - DEBUG - [main] ErrorCounter:throwQueryException:113 :: throwQueryException() : no errors 
2016-10-10 18:54:03.952 - DEBUG - [main] HqlSqlBaseWalker:beforeStatement:121 :: select << begin [level=1, statement=select] 
2016-10-10 18:54:03.953 - DEBUG - [main] FromElement:doInitialize:158 :: FromClause{level=1} : org.total.spring.entity.User (u) -> user0_ 
2016-10-10 18:54:03.954 - DEBUG - [main] FromReferenceNode:setResolved:77 :: Resolved : u -> user0_.userId 
2016-10-10 18:54:03.955 - TRACE - [main] FromElement:handlePropertyBeingDereferenced:639 :: Handling property dereference [org.total.spring.entity.User (u) -> roles (class)] 
2016-10-10 18:54:03.955 - DEBUG - [main] DotNode:getDataType:666 :: getDataType() : roles -> org.hibernate.type.SetType(org.total.spring.entity.User.roles) 
2016-10-10 18:54:03.956 - DEBUG - [main] FromElementFactory:createEntityAssociation:422 :: createManyToMany() : path = u.roles role = org.total.spring.entity.User.roles associatedEntityName = org.total.spring.entity.Role 
2016-10-10 18:54:03.957 - DEBUG - [main] FromElement:doInitialize:158 :: FromClause{level=1} : org.total.spring.entity.Role (<no alias>) -> role2_ 
2016-10-10 18:54:03.957 - DEBUG - [main] FromClause:addJoinByPathMap:284 :: addJoinByPathMap() : u.roles -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Role,tableAlias=role2_,origin=User user0_,columns={user0_.userId ,className=org.total.spring.entity.Role}} 
2016-10-10 18:54:03.959 - DEBUG - [main] DotNode:dereferenceCollection:351 :: dereferenceCollection() : Created new FROM element for u.roles : User_Role role2_ 
2016-10-10 18:54:03.960 - DEBUG - [main] FromReferenceNode:setResolved:77 :: Resolved : u.roles -> . 
2016-10-10 18:54:03.960 - DEBUG - [main] HqlSqlWalker:createFromJoinElement:425 :: createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'User_Role role2_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.total.spring.entity.User.roles,tableName=Role,tableAlias=role2_,origin=User user0_,columns={user0_.userId ,className=org.total.spring.entity.Role}}
 
2016-10-10 18:54:03.961 - DEBUG - [main] FromReferenceNode:setResolved:77 :: Resolved : u -> user0_.userId 
2016-10-10 18:54:03.962 - DEBUG - [main] FromReferenceNode:setResolved:77 :: Resolved : u -> user0_.userId 
2016-10-10 18:54:03.963 - TRACE - [main] FromElement:handlePropertyBeingDereferenced:639 :: Handling property dereference [org.total.spring.entity.User (u) -> userId (class)] 
2016-10-10 18:54:03.964 - DEBUG - [main] DotNode:getDataType:666 :: getDataType() : userId -> org.hibernate.type.LongType@77d2e85 
2016-10-10 18:54:03.964 - DEBUG - [main] FromReferenceNode:setResolved:77 :: Resolved : u.userId -> user0_.userId 
2016-10-10 18:54:03.965 - DEBUG - [main] HqlSqlBaseWalker:beforeStatementCompletion:125 :: select : finishing up [level=1, statement=select] 
2016-10-10 18:54:03.966 - DEBUG - [main] HqlSqlWalker:processQuery:671 :: processQuery() :  ( SELECT ( {select clause} user0_.userId ) ( FromClause{level=1} ( User user0_ User_Role role2_ ) ) ( WHERE ( = ( user0_.userId user0_.userId userId ) ? ) ) ) 
2016-10-10 18:54:03.967 - DEBUG - [main] JoinProcessor:addJoinNodes:187 :: Using FROM fragment [User user0_] 
2016-10-10 18:54:03.968 - DEBUG - [main] JoinProcessor:addJoinNodes:187 :: Using FROM fragment [left outer join User_Role roles1_ on user0_.userId=roles1_.userId left outer join Role role2_ on roles1_.roleId=role2_.roleId] 
2016-10-10 18:54:03.969 - DEBUG - [main] HqlSqlBaseWalker:afterStatementCompletion:129 :: select >> end [level=1, statement=select] 
2016-10-10 18:54:03.970 - DEBUG - [main] QueryTranslatorImpl:analyze:281 :: --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Role,User,User_Role)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.userId as userId1_3_0_' {alias=u, className=org.total.spring.entity.User, tableAlias=user0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'role2_.roleId as roleId1_1_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.total.spring.entity.User.roles,tableName=Role,tableAlias=role2_,origin=User user0_,columns={user0_.userId ,className=org.total.spring.entity.Role}}}
    |  +-[SQL_TOKEN] SqlFragment: 'user0_.password as password2_3_0_, user0_.userName as userName3_3_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'role2_.roleType as roleType2_1_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'roles1_.userId as userId1_3_0__, roles1_.roleId as roleId2_4_0__'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_, role2_], fromElementsByPath=[u.roles], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'User user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=User,tableAlias=user0_,origin=null,columns={,className=org.total.spring.entity.User}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join User_Role roles1_ on user0_.userId=roles1_.userId left outer join Role role2_ on roles1_.roleId=role2_.roleId' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.total.spring.entity.User.roles,tableName=Role,tableAlias=role2_,origin=User user0_,columns={user0_.userId ,className=org.total.spring.entity.Role}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.userId' {propertyName=userId,dereferenceType=PRIMITIVE,getPropertyPath=userId,path=u.userId,tableAlias=user0_,className=org.total.spring.entity.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.userId' {alias=u, className=org.total.spring.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'userId' {originalText=userId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=userId, expectedType=org.hibernate.type.LongType@77d2e85}
 
2016-10-10 18:54:03.975 - DEBUG - [main] ErrorCounter:throwQueryException:113 :: throwQueryException() : no errors 
2016-10-10 18:54:03.976 - DEBUG - [main] QueryTranslatorImpl:generate:263 :: HQL: SELECT u FROM org.total.spring.entity.User u LEFT JOIN FETCH u.roles WHERE u.userId = (:userId) 
2016-10-10 18:54:03.977 - DEBUG - [main] QueryTranslatorImpl:generate:264 :: SQL: select user0_.userId as userId1_3_0_, role2_.roleId as roleId1_1_1_, user0_.password as password2_3_0_, user0_.userName as userName3_3_0_, role2_.roleType as roleType2_1_1_, roles1_.userId as userId1_3_0__, roles1_.roleId as roleId2_4_0__ from User user0_ left outer join User_Role roles1_ on user0_.userId=roles1_.userId left outer join Role role2_ on roles1_.roleId=role2_.roleId where user0_.userId=? 
2016-10-10 18:54:03.978 - DEBUG - [main] ErrorCounter:throwQueryException:113 :: throwQueryException() : no errors 
2016-10-10 18:54:03.979 - TRACE - [main] HQLQueryPlan:buildParameterMetadata:390 :: HQL param location recognition took 22,895 nanoseconds (SELECT u FROM User u LEFT JOIN FETCH u.roles WHERE u.userId = (:userId)) 
2016-10-10 18:54:03.980 - TRACE - [main] SessionImpl:close:357 :: Closing session 
2016-10-10 18:54:03.980 - TRACE - [main] JdbcCoordinatorImpl:close:199 :: Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@6ffa56fa] 
2016-10-10 18:54:03.981 - TRACE - [main] LogicalConnectionImpl:close:178 :: Closing logical connection 
2016-10-10 18:54:03.981 - TRACE - [main] LogicalConnectionImpl:close:190 :: Logical connection closed 
2016-10-10 18:54:04.017 - TRACE - [main] SessionFactoryImpl$SessionBuilderImpl:openSession:1588 :: Opening Hibernate Session.  tenant=null, owner=org.hibernate.jpa.internal.EntityManagerImpl@2e5ee2c9 
2016-10-10 18:54:04.018 - TRACE - [main] SessionImpl:<init>:322 :: Opened session at timestamp: 14761148440 
2016-10-10 18:54:04.019 - TRACE - [main] SessionImpl:setFlushMode:1437 :: Setting flush mode to: AUTO 
2016-10-10 18:54:04.019 - TRACE - [main] SessionImpl:setCacheMode:1457 :: Setting cache mode to: NORMAL 
2016-10-10 18:54:04.020 - TRACE - [main] SessionImpl:close:357 :: Closing session 
2016-10-10 18:54:04.021 - TRACE - [main] JdbcCoordinatorImpl:close:199 :: Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@55a609dd] 
2016-10-10 18:54:04.021 - TRACE - [main] LogicalConnectionImpl:close:178 :: Closing logical connection 
2016-10-10 18:54:04.022 - TRACE - [main] LogicalConnectionImpl:close:190 :: Logical connection closed 
2016-10-10 18:54:04.024 - TRACE - [main] SessionFactoryImpl$SessionBuilderImpl:openSession:1588 :: Opening Hibernate Session.  tenant=null, owner=org.hibernate.jpa.internal.EntityManagerImpl@4afd21c6 
2016-10-10 18:54:04.025 - TRACE - [main] SessionImpl:<init>:322 :: Opened session at timestamp: 14761148440 
2016-10-10 18:54:04.026 - TRACE - [main] SessionImpl:setFlushMode:1437 :: Setting flush mode to: AUTO 
2016-10-10 18:54:04.027 - TRACE - [main] SessionImpl:setCacheMode:1457 :: Setting cache mode to: NORMAL 
2016-10-10 18:54:04.027 - TRACE - [main] SessionImpl:close:357 :: Closing session 
2016-10-10 18:54:04.028 - TRACE - [main] JdbcCoordinatorImpl:close:199 :: Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@4d0753c9] 
2016-10-10 18:54:04.028 - TRACE - [main] LogicalConnectionImpl:close:178 :: Closing logical connection 
2016-10-10 18:54:04.029 - TRACE - [main] LogicalConnectionImpl:close:190 :: Logical connection closed 
2016-10-10 18:54:04.030 - TRACE - [main] SessionFactoryImpl$SessionBuilderImpl:openSession:1588 :: Opening Hibernate Session.  tenant=null, owner=org.hibernate.jpa.internal.EntityManagerImpl@1416a80a 
2016-10-10 18:54:04.031 - TRACE - [main] SessionImpl:<init>:322 :: Opened session at timestamp: 14761148440 
2016-10-10 18:54:04.031 - TRACE - [main] SessionImpl:setFlushMode:1437 :: Setting flush mode to: AUTO 
2016-10-10 18:54:04.032 - TRACE - [main] SessionImpl:setCacheMode:1457 :: Setting cache mode to: NORMAL 
2016-10-10 18:54:04.032 - TRACE - [main] SessionImpl:close:357 :: Closing session 
2016-10-10 18:54:04.033 - TRACE - [main] JdbcCoordinatorImpl:close:199 :: Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@719bb3b4] 
2016-10-10 18:54:04.034 - TRACE - [main] LogicalConnectionImpl:close:178 :: Closing logical connection 
2016-10-10 18:54:04.034 - TRACE - [main] LogicalConnectionImpl:close:190 :: Logical connection closed 
2016-10-10 18:54:04.038 - TRACE - [main] SessionFactoryImpl$SessionBuilderImpl:openSession:1588 :: Opening Hibernate Session.  tenant=null, owner=org.hibernate.jpa.internal.EntityManagerImpl@572e6fd9 
2016-10-10 18:54:04.039 - TRACE - [main] SessionImpl:<init>:322 :: Opened session at timestamp: 14761148440 
2016-10-10 18:54:04.041 - TRACE - [main] SessionImpl:setFlushMode:1437 :: Setting flush mode to: AUTO 
2016-10-10 18:54:04.043 - TRACE - [main] SessionImpl:setCacheMode:1457 :: Setting cache mode to: NORMAL 
2016-10-10 18:54:04.044 - DEBUG - [main] AbstractEntityManagerImpl:markForRollbackOnly:1529 :: Mark transaction for rollback 
2016-10-10 18:54:04.046 - TRACE - [main] SessionImpl:close:357 :: Closing session 
2016-10-10 18:54:04.046 - TRACE - [main] JdbcCoordinatorImpl:close:199 :: Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@255e5e2e] 
2016-10-10 18:54:04.047 - TRACE - [main] LogicalConnectionImpl:close:178 :: Closing logical connection 
2016-10-10 18:54:04.048 - TRACE - [main] LogicalConnectionImpl:close:190 :: Logical connection closed 
2016-10-10 18:54:04.142 - TRACE - [main] SessionFactoryImpl$SessionBuilderImpl:openSession:1588 :: Opening Hibernate Session.  tenant=null, owner=org.hibernate.jpa.internal.EntityManagerImpl@c2e3264 
2016-10-10 18:54:04.142 - TRACE - [main] SessionImpl:<init>:322 :: Opened session at timestamp: 14761148441 
2016-10-10 18:54:04.143 - TRACE - [main] SessionImpl:setFlushMode:1437 :: Setting flush mode to: AUTO 
2016-10-10 18:54:04.144 - TRACE - [main] SessionImpl:setCacheMode:1457 :: Setting cache mode to: NORMAL 
2016-10-10 18:54:04.144 - TRACE - [main] SessionImpl:close:357 :: Closing session 
2016-10-10 18:54:04.145 - TRACE - [main] JdbcCoordinatorImpl:close:199 :: Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@107f4980] 
2016-10-10 18:54:04.145 - TRACE - [main] LogicalConnectionImpl:close:178 :: Closing logical connection 
2016-10-10 18:54:04.146 - TRACE - [main] LogicalConnectionImpl:close:190 :: Logical connection closed 
2016-10-10 18:54:04.148 - TRACE - [main] SessionFactoryImpl$SessionBuilderImpl:openSession:1588 :: Opening Hibernate Session.  tenant=null, owner=org.hibernate.jpa.internal.EntityManagerImpl@75a118e6 
2016-10-10 18:54:04.149 - TRACE - [main] SessionImpl:<init>:322 :: Opened session at timestamp: 14761148441 
2016-10-10 18:54:04.150 - TRACE - [main] SessionImpl:setFlushMode:1437 :: Setting flush mode to: AUTO 
2016-10-10 18:54:04.150 - TRACE - [main] SessionImpl:setCacheMode:1457 :: Setting cache mode to: NORMAL 
2016-10-10 18:54:04.151 - TRACE - [main] SessionImpl:close:357 :: Closing session 
2016-10-10 18:54:04.152 - TRACE - [main] JdbcCoordinatorImpl:close:199 :: Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@1d540566] 
2016-10-10 18:54:04.152 - TRACE - [main] LogicalConnectionImpl:close:178 :: Closing logical connection 
2016-10-10 18:54:04.154 - TRACE - [main] LogicalConnectionImpl:close:190 :: Logical connection closed 
2016-10-10 18:54:04.155 - TRACE - [main] SessionFactoryImpl$SessionBuilderImpl:openSession:1588 :: Opening Hibernate Session.  tenant=null, owner=org.hibernate.jpa.internal.EntityManagerImpl@6014a9ba 
2016-10-10 18:54:04.156 - TRACE - [main] SessionImpl:<init>:322 :: Opened session at timestamp: 14761148441 
2016-10-10 18:54:04.157 - TRACE - [main] SessionImpl:setFlushMode:1437 :: Setting flush mode to: AUTO 
2016-10-10 18:54:04.157 - TRACE - [main] SessionImpl:setCacheMode:1457 :: Setting cache mode to: NORMAL 
2016-10-10 18:54:04.158 - TRACE - [main] SessionImpl:close:357 :: Closing session 
2016-10-10 18:54:04.159 - TRACE - [main] JdbcCoordinatorImpl:close:199 :: Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@acdcf71] 
2016-10-10 18:54:04.160 - TRACE - [main] LogicalConnectionImpl:close:178 :: Closing logical connection 
2016-10-10 18:54:04.160 - TRACE - [main] LogicalConnectionImpl:close:190 :: Logical connection closed 
2016-10-10 18:54:04.163 - TRACE - [main] SessionFactoryImpl$SessionBuilderImpl:openSession:1588 :: Opening Hibernate Session.  tenant=null, owner=org.hibernate.jpa.internal.EntityManagerImpl@4a14c44f 
2016-10-10 18:54:04.163 - TRACE - [main] SessionImpl:<init>:322 :: Opened session at timestamp: 14761148441 
2016-10-10 18:54:04.164 - TRACE - [main] SessionImpl:setFlushMode:1437 :: Setting flush mode to: AUTO 
2016-10-10 18:54:04.165 - TRACE - [main] SessionImpl:setCacheMode:1457 :: Setting cache mode to: NORMAL 
2016-10-10 18:54:04.165 - DEBUG - [main] AbstractEntityManagerImpl:markForRollbackOnly:1529 :: Mark transaction for rollback 
2016-10-10 18:54:04.166 - TRACE - [main] SessionImpl:close:357 :: Closing session 
2016-10-10 18:54:04.166 - TRACE - [main] JdbcCoordinatorImpl:close:199 :: Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@f08fdce] 
2016-10-10 18:54:04.167 - TRACE - [main] LogicalConnectionImpl:close:178 :: Closing logical connection 
2016-10-10 18:54:04.168 - TRACE - [main] LogicalConnectionImpl:close:190 :: Logical connection closed 
2016-10-10 18:54:04.265 - TRACE - [main] SessionFactoryImpl$SessionBuilderImpl:openSession:1588 :: Opening Hibernate Session.  tenant=null, owner=org.hibernate.jpa.internal.EntityManagerImpl@21f459fc 
2016-10-10 18:54:04.266 - TRACE - [main] SessionImpl:<init>:322 :: Opened session at timestamp: 14761148442 
2016-10-10 18:54:04.267 - TRACE - [main] SessionImpl:setFlushMode:1437 :: Setting flush mode to: AUTO 
2016-10-10 18:54:04.267 - TRACE - [main] SessionImpl:setCacheMode:1457 :: Setting cache mode to: NORMAL 
2016-10-10 18:54:04.270 - DEBUG - [main] AbstractTransactionImpl:begin:160 :: begin 
2016-10-10 18:54:04.271 - DEBUG - [main] LogicalConnectionImpl:obtainConnection:226 :: Obtaining JDBC connection 
2016-10-10 18:54:04.271 - DEBUG - [main] LogicalConnectionImpl:obtainConnection:232 :: Obtained JDBC connection 
2016-10-10 18:54:04.271 - DEBUG - [main] JdbcTransaction:doBegin:69 :: initial autocommit status: true 
2016-10-10 18:54:04.272 - DEBUG - [main] JdbcTransaction:doBegin:71 :: disabling autocommit 
2016-10-10 18:54:04.283 - TRACE - [main] QueryPlanCache:getHQLQueryPlan:170 :: Located HQL query plan in cache (SELECT u FROM User u INNER JOIN FETCH u.roles) 
2016-10-10 18:54:04.288 - TRACE - [main] QueryPlanCache:getHQLQueryPlan:170 :: Located HQL query plan in cache (SELECT u FROM User u INNER JOIN FETCH u.roles) 
2016-10-10 18:54:04.291 - TRACE - [main] HQLQueryPlan:performList:209 :: Find: SELECT u FROM User u INNER JOIN FETCH u.roles 
2016-10-10 18:54:04.293 - TRACE - [main] QueryParameters:traceParameters:298 :: Named parameters: {} 
2016-10-10 18:54:04.300 - DEBUG - [main] SqlStatementLogger:logStatement:109 :: select user0_.userId as userId1_3_0_, role2_.roleId as roleId1_1_1_, user0_.password as password2_3_0_, user0_.userName as userName3_3_0_, role2_.roleType as roleType2_1_1_, roles1_.userId as userId1_3_0__, roles1_.roleId as roleId2_4_0__ from User user0_ inner join User_Role roles1_ on user0_.userId=roles1_.userId inner join Role role2_ on roles1_.roleId=role2_.roleId 
2016-10-10 18:54:04.317 - TRACE - [main] JdbcCoordinatorImpl:register:371 :: Registering statement [com.mysql.jdbc.JDBC4PreparedStatement@481e91b6: select user0_.userId as userId1_3_0_, role2_.roleId as roleId1_1_1_, user0_.password as password2_3_0_, user0_.userName as userName3_3_0_, role2_.roleType as roleType2_1_1_, roles1_.userId as userId1_3_0__, roles1_.roleId as roleId2_4_0__ from User user0_ inner join User_Role roles1_ on user0_.userId=roles1_.userId inner join Role role2_ on roles1_.roleId=role2_.roleId] 
2016-10-10 18:54:04.319 - TRACE - [main] JdbcCoordinatorImpl:registerLastQuery:386 :: Registering last query statement [com.mysql.jdbc.JDBC4PreparedStatement@481e91b6: select user0_.userId as userId1_3_0_, role2_.roleId as roleId1_1_1_, user0_.password as password2_3_0_, user0_.userName as userName3_3_0_, role2_.roleType as roleType2_1_1_, roles1_.userId as userId1_3_0__, roles1_.roleId as roleId2_4_0__ from User user0_ inner join User_Role roles1_ on user0_.userId=roles1_.userId inner join Role role2_ on roles1_.roleId=role2_.roleId] 
2016-10-10 18:54:04.321 - TRACE - [main] Loader:prepareQueryStatement:1935 :: Bound [1] parameters total 
2016-10-10 18:54:04.329 - TRACE - [main] JdbcCoordinatorImpl:register:437 :: Registering result set [org.apache.commons.dbcp.DelegatingResultSet@3a543f31] 
2016-10-10 18:54:04.332 - TRACE - [main] Loader:processResultSet:947 :: Processing result set 
2016-10-10 18:54:04.333 - DEBUG - [main] Loader:processResultSet:952 :: Result set row: 0 
2016-10-10 18:54:04.363 - TRACE - [main] BasicExtractor:extract:78 :: extracted value ([userId1_3_0_] : [BIGINT]) - [1] 
2016-10-10 18:54:04.366 - TRACE - [main] BasicExtractor:extract:78 :: extracted value ([roleId1_1_1_] : [BIGINT]) - [1] 
2016-10-10 18:54:04.367 - DEBUG - [main] Loader:getRow:1486 :: Result row: EntityKey[org.total.spring.entity.User#1], EntityKey[org.total.spring.entity.Role#1] 
2016-10-10 18:54:04.368 - TRACE - [main] Loader:loadFromResultSet:1675 :: Initializing object from ResultSet: [org.total.spring.entity.User#1] 
2016-10-10 18:54:04.377 - TRACE - [main] AbstractEntityPersister:hydrate:2901 :: Hydrating entity: [org.total.spring.entity.User#1] 
2016-10-10 18:54:04.378 - TRACE - [main] BasicExtractor:extract:78 :: extracted value ([password2_3_0_] : [VARCHAR]) - [tiger] 
2016-10-10 18:54:04.379 - TRACE - [main] BasicExtractor:extract:78 :: extracted value ([userName3_3_0_] : [VARCHAR]) - [Tiger] 
2016-10-10 18:54:04.381 - TRACE - [main] Loader:loadFromResultSet:1675 :: Initializing object from ResultSet: [org.total.spring.entity.Role#1] 
2016-10-10 18:54:04.382 - TRACE - [main] AbstractEntityPersister:hydrate:2901 :: Hydrating entity: [org.total.spring.entity.Role#1] 
2016-10-10 18:54:04.383 - TRACE - [main] EnumType$NamedEnumValueMapper:getValue:454 :: Returning [ADMIN] as column [roleType2_1_1_] 
2016-10-10 18:54:04.384 - TRACE - [main] BasicExtractor:extract:78 :: extracted value ([userId1_3_0__] : [BIGINT]) - [1] 
2016-10-10 18:54:04.385 - DEBUG - [main] Loader:readCollectionElement:1306 :: Found row of collection: [org.total.spring.entity.User.roles#1] 
2016-10-10 18:54:04.387 - TRACE - [main] LoadContexts:getCollectionLoadContext:171 :: Constructing collection load context for result set [org.apache.commons.dbcp.DelegatingResultSet@3a543f31] 
2016-10-10 18:54:04.391 - TRACE - [main] CollectionLoadContext:getLoadingCollection:114 :: Starting attempt to find loading collection [[org.total.spring.entity.User.roles#1]] 
2016-10-10 18:54:04.392 - TRACE - [main] CollectionLoadContext:getLoadingCollection:140 :: Instantiating new collection [key=1, rs=org.apache.commons.dbcp.DelegatingResultSet@3a543f31] 
2016-10-10 18:54:04.398 - TRACE - [main] BasicExtractor:extract:78 :: extracted value ([roleId2_4_0__] : [BIGINT]) - [1] 
2016-10-10 18:54:04.400 - TRACE - [main] DefaultLoadEventListener:proxyOrLoad:251 :: Loading entity: [org.total.spring.entity.Role#1] 
2016-10-10 18:54:04.401 - TRACE - [main] DefaultLoadEventListener:doLoad:425 :: Attempting to resolve: [org.total.spring.entity.Role#1] 
2016-10-10 18:54:04.402 - TRACE - [main] DefaultLoadEventListener:doLoad:444 :: Resolved object in session cache: [org.total.spring.entity.Role#1] 
2016-10-10 18:54:04.403 - DEBUG - [main] Loader:processResultSet:952 :: Result set row: 1 
2016-10-10 18:54:04.404 - TRACE - [main] BasicExtractor:extract:78 :: extracted value ([userId1_3_0_] : [BIGINT]) - [1] 
2016-10-10 18:54:04.404 - TRACE - [main] BasicExtractor:extract:78 :: extracted value ([roleId1_1_1_] : [BIGINT]) - [2] 
2016-10-10 18:54:04.405 - DEBUG - [main] Loader:getRow:1486 :: Result row: EntityKey[org.total.spring.entity.User#1], EntityKey[org.total.spring.entity.Role#2] 
2016-10-10 18:54:04.405 - TRACE - [main] Loader:loadFromResultSet:1675 :: Initializing object from ResultSet: [org.total.spring.entity.Role#2] 
2016-10-10 18:54:04.406 - TRACE - [main] AbstractEntityPersister:hydrate:2901 :: Hydrating entity: [org.total.spring.entity.Role#2] 
2016-10-10 18:54:04.407 - TRACE - [main] EnumType$NamedEnumValueMapper:getValue:454 :: Returning [MODERATOR] as column [roleType2_1_1_] 
2016-10-10 18:54:04.407 - TRACE - [main] BasicExtractor:extract:78 :: extracted value ([userId1_3_0__] : [BIGINT]) - [1] 
2016-10-10 18:54:04.408 - DEBUG - [main] Loader:readCollectionElement:1306 :: Found row of collection: [org.total.spring.entity.User.roles#1] 
2016-10-10 18:54:04.408 - TRACE - [main] CollectionLoadContext:getLoadingCollection:114 :: Starting attempt to find loading collection [[org.total.spring.entity.User.roles#1]] 
2016-10-10 18:54:04.409 - TRACE - [main] LoadContexts:locateLoadingCollectionEntry:266 :: Attempting to locate loading collection entry [CollectionKey[org.total.spring.entity.User.roles#1]] in any result-set context 
2016-10-10 18:54:04.410 - TRACE - [main] LoadContexts:locateLoadingCollectionEntry:272 :: Collection [CollectionKey[org.total.spring.entity.User.roles#1]] located in load context 
2016-10-10 18:54:04.410 - TRACE - [main] CollectionLoadContext:getLoadingCollection:151 :: Found loading collection bound to current result set processing; reading row 
2016-10-10 18:54:04.412 - TRACE - [main] BasicExtractor:extract:78 :: extracted value ([roleId2_4_0__] : [BIGINT]) - [2] 
2016-10-10 18:54:04.412 - TRACE - [main] DefaultLoadEventListener:proxyOrLoad:251 :: Loading entity: [org.total.spring.entity.Role#2] 
2016-10-10 18:54:04.413 - TRACE - [main] DefaultLoadEventListener:doLoad:425 :: Attempting to resolve: [org.total.spring.entity.Role#2] 
2016-10-10 18:54:04.413 - TRACE - [main] DefaultLoadEventListener:doLoad:444 :: Resolved object in session cache: [org.total.spring.entity.Role#2] 
2016-10-10 18:54:04.414 - DEBUG - [main] Loader:processResultSet:952 :: Result set row: 2 
2016-10-10 18:54:04.414 - TRACE - [main] BasicExtractor:extract:78 :: extracted value ([userId1_3_0_] : [BIGINT]) - [1] 
2016-10-10 18:54:04.415 - TRACE - [main] BasicExtractor:extract:78 :: extracted value ([roleId1_1_1_] : [BIGINT]) - [5] 
2016-10-10 18:54:04.416 - DEBUG - [main] Loader:getRow:1486 :: Result row: EntityKey[org.total.spring.entity.User#1], EntityKey[org.total.spring.entity.Role#5] 
2016-10-10 18:54:04.416 - TRACE - [main] Loader:loadFromResultSet:1675 :: Initializing object from ResultSet: [org.total.spring.entity.Role#5] 
2016-10-10 18:54:04.417 - TRACE - [main] AbstractEntityPersister:hydrate:2901 :: Hydrating entity: [org.total.spring.entity.Role#5] 
2016-10-10 18:54:04.418 - TRACE - [main] EnumType$NamedEnumValueMapper:getValue:454 :: Returning [GUEST] as column [roleType2_1_1_] 
2016-10-10 18:54:04.419 - TRACE - [main] BasicExtractor:extract:78 :: extracted value ([userId1_3_0__] : [BIGINT]) - [1] 
2016-10-10 18:54:04.419 - DEBUG - [main] Loader:readCollectionElement:1306 :: Found row of collection: [org.total.spring.entity.User.roles#1] 
2016-10-10 18:54:04.420 - TRACE - [main] CollectionLoadContext:getLoadingCollection:114 :: Starting attempt to find loading collection [[org.total.spring.entity.User.roles#1]] 
2016-10-10 18:54:04.420 - TRACE - [main] LoadContexts:locateLoadingCollectionEntry:266 :: Attempting to locate loading collection entry [CollectionKey[org.total.spring.entity.User.roles#1]] in any result-set context 
2016-10-10 18:54:04.420 - TRACE - [main] LoadContexts:locateLoadingCollectionEntry:272 :: Collection [CollectionKey[org.total.spring.entity.User.roles#1]] located in load context 
2016-10-10 18:54:04.421 - TRACE - [main] CollectionLoadContext:getLoadingCollection:151 :: Found loading collection bound to current result set processing; reading row 
2016-10-10 18:54:04.421 - TRACE - [main] BasicExtractor:extract:78 :: extracted value ([roleId2_4_0__] : [BIGINT]) - [5] 
2016-10-10 18:54:04.422 - TRACE - [main] DefaultLoadEventListener:proxyOrLoad:251 :: Loading entity: [org.total.spring.entity.Role#5] 
2016-10-10 18:54:04.422 - TRACE - [main] DefaultLoadEventListener:doLoad:425 :: Attempting to resolve: [org.total.spring.entity.Role#5] 
2016-10-10 18:54:04.422 - TRACE - [main] DefaultLoadEventListener:doLoad:444 :: Resolved object in session cache: [org.total.spring.entity.Role#5] 
2016-10-10 18:54:04.422 - DEBUG - [main] Loader:processResultSet:952 :: Result set row: 3 
2016-10-10 18:54:04.423 - TRACE - [main] BasicExtractor:extract:78 :: extracted value ([userId1_3_0_] : [BIGINT]) - [2] 
2016-10-10 18:54:04.423 - TRACE - [main] BasicExtractor:extract:78 :: extracted value ([roleId1_1_1_] : [BIGINT]) - [5] 
2016-10-10 18:54:04.423 - DEBUG - [main] Loader:getRow:1486 :: Result row: EntityKey[org.total.spring.entity.User#2], EntityKey[org.total.spring.entity.Role#5] 
2016-10-10 18:54:04.424 - TRACE - [main] Loader:loadFromResultSet:1675 :: Initializing object from ResultSet: [org.total.spring.entity.User#2] 
2016-10-10 18:54:04.424 - TRACE - [main] AbstractEntityPersister:hydrate:2901 :: Hydrating entity: [org.total.spring.entity.User#2] 
2016-10-10 18:54:04.425 - TRACE - [main] BasicExtractor:extract:78 :: extracted value ([password2_3_0_] : [VARCHAR]) - [d077f244def8a70e5ea758bd8352fcd8] 
2016-10-10 18:54:04.425 - TRACE - [main] BasicExtractor:extract:78 :: extracted value ([userName3_3_0_] : [VARCHAR]) - [Cat] 
2016-10-10 18:54:04.425 - TRACE - [main] BasicExtractor:extract:78 :: extracted value ([userId1_3_0__] : [BIGINT]) - [2] 
2016-10-10 18:54:04.426 - DEBUG - [main] Loader:readCollectionElement:1306 :: Found row of collection: [org.total.spring.entity.User.roles#2] 
2016-10-10 18:54:04.426 - TRACE - [main] CollectionLoadContext:getLoadingCollection:114 :: Starting attempt to find loading collection [[org.total.spring.entity.User.roles#2]] 
2016-10-10 18:54:04.427 - TRACE - [main] LoadContexts:locateLoadingCollectionEntry:266 :: Attempting to locate loading collection entry [CollectionKey[org.total.spring.entity.User.roles#2]] in any result-set context 
2016-10-10 18:54:04.427 - TRACE - [main] LoadContexts:locateLoadingCollectionEntry:269 :: Collection [CollectionKey[org.total.spring.entity.User.roles#2]] not located in load context 
2016-10-10 18:54:04.427 - TRACE - [main] CollectionLoadContext:getLoadingCollection:140 :: Instantiating new collection [key=2, rs=org.apache.commons.dbcp.DelegatingResultSet@3a543f31] 
2016-10-10 18:54:04.428 - TRACE - [main] BasicExtractor:extract:78 :: extracted value ([roleId2_4_0__] : [BIGINT]) - [5] 
2016-10-10 18:54:04.428 - TRACE - [main] DefaultLoadEventListener:proxyOrLoad:251 :: Loading entity: [org.total.spring.entity.Role#5] 
2016-10-10 18:54:04.429 - TRACE - [main] DefaultLoadEventListener:doLoad:425 :: Attempting to resolve: [org.total.spring.entity.Role#5] 
2016-10-10 18:54:04.429 - TRACE - [main] DefaultLoadEventListener:doLoad:444 :: Resolved object in session cache: [org.total.spring.entity.Role#5] 
2016-10-10 18:54:04.430 - TRACE - [main] Loader:processResultSet:971 :: Done processing result set (4 rows) 
2016-10-10 18:54:04.431 - TRACE - [main] Loader:initializeEntitiesAndCollections:1113 :: Total objects hydrated: 5 
2016-10-10 18:54:04.432 - DEBUG - [main] TwoPhaseLoad:doInitializeEntity:160 :: Resolving associations for [org.total.spring.entity.User#1] 
2016-10-10 18:54:04.433 - TRACE - [main] LoadContexts:locateLoadingCollectionEntry:266 :: Attempting to locate loading collection entry [CollectionKey[org.total.spring.entity.User.roles#1]] in any result-set context 
2016-10-10 18:54:04.434 - TRACE - [main] LoadContexts:locateLoadingCollectionEntry:272 :: Collection [CollectionKey[org.total.spring.entity.User.roles#1]] located in load context 
2016-10-10 18:54:04.435 - TRACE - [main] LoadContexts:locateLoadingCollection:190 :: Returning loading collection: [org.total.spring.entity.User.roles#1] 
2016-10-10 18:54:04.437 - DEBUG - [main] TwoPhaseLoad:doInitializeEntity:286 :: Done materializing entity [org.total.spring.entity.User#1] 
2016-10-10 18:54:04.437 - DEBUG - [main] TwoPhaseLoad:doInitializeEntity:160 :: Resolving associations for [org.total.spring.entity.Role#1] 
2016-10-10 18:54:04.437 - TRACE - [main] LoadContexts:locateLoadingCollectionEntry:266 :: Attempting to locate loading collection entry [CollectionKey[org.total.spring.entity.Role.users#1]] in any result-set context 
2016-10-10 18:54:04.438 - TRACE - [main] LoadContexts:locateLoadingCollectionEntry:269 :: Collection [CollectionKey[org.total.spring.entity.Role.users#1]] not located in load context 
2016-10-10 18:54:04.440 - TRACE - [main] CollectionType:getCollection:783 :: Created collection wrapper: [org.total.spring.entity.Role.users#1] 
2016-10-10 18:54:04.440 - DEBUG - [main] TwoPhaseLoad:doInitializeEntity:286 :: Done materializing entity [org.total.spring.entity.Role#1] 
2016-10-10 18:54:04.441 - DEBUG - [main] TwoPhaseLoad:doInitializeEntity:160 :: Resolving associations for [org.total.spring.entity.Role#2] 
2016-10-10 18:54:04.441 - TRACE - [main] LoadContexts:locateLoadingCollectionEntry:266 :: Attempting to locate loading collection entry [CollectionKey[org.total.spring.entity.Role.users#2]] in any result-set context 
2016-10-10 18:54:04.442 - TRACE - [main] LoadContexts:locateLoadingCollectionEntry:269 :: Collection [CollectionKey[org.total.spring.entity.Role.users#2]] not located in load context 
2016-10-10 18:54:04.442 - TRACE - [main] CollectionType:getCollection:783 :: Created collection wrapper: [org.total.spring.entity.Role.users#2] 
2016-10-10 18:54:04.442 - DEBUG - [main] TwoPhaseLoad:doInitializeEntity:286 :: Done materializing entity [org.total.spring.entity.Role#2] 
2016-10-10 18:54:04.443 - DEBUG - [main] TwoPhaseLoad:doInitializeEntity:160 :: Resolving associations for [org.total.spring.entity.Role#5] 
2016-10-10 18:54:04.443 - TRACE - [main] LoadContexts:locateLoadingCollectionEntry:266 :: Attempting to locate loading collection entry [CollectionKey[org.total.spring.entity.Role.users#5]] in any result-set context 
2016-10-10 18:54:04.444 - TRACE - [main] LoadContexts:locateLoadingCollectionEntry:269 :: Collection [CollectionKey[org.total.spring.entity.Role.users#5]] not located in load context 
2016-10-10 18:54:04.444 - TRACE - [main] CollectionType:getCollection:783 :: Created collection wrapper: [org.total.spring.entity.Role.users#5] 
2016-10-10 18:54:04.445 - DEBUG - [main] TwoPhaseLoad:doInitializeEntity:286 :: Done materializing entity [org.total.spring.entity.Role#5] 
2016-10-10 18:54:04.445 - DEBUG - [main] TwoPhaseLoad:doInitializeEntity:160 :: Resolving associations for [org.total.spring.entity.User#2] 
2016-10-10 18:54:04.446 - TRACE - [main] LoadContexts:locateLoadingCollectionEntry:266 :: Attempting to locate loading collection entry [CollectionKey[org.total.spring.entity.User.roles#2]] in any result-set context 
2016-10-10 18:54:04.446 - TRACE - [main] LoadContexts:locateLoadingCollectionEntry:272 :: Collection [CollectionKey[org.total.spring.entity.User.roles#2]] located in load context 
2016-10-10 18:54:04.446 - TRACE - [main] LoadContexts:locateLoadingCollection:190 :: Returning loading collection: [org.total.spring.entity.User.roles#2] 
2016-10-10 18:54:04.447 - DEBUG - [main] TwoPhaseLoad:doInitializeEntity:286 :: Done materializing entity [org.total.spring.entity.User#2] 
2016-10-10 18:54:04.447 - TRACE - [main] LoadContexts:locateLoadingCollectionEntry:266 :: Attempting to locate loading collection entry [CollectionKey[org.total.spring.entity.User.roles#2]] in any result-set context 
2016-10-10 18:54:04.448 - TRACE - [main] LoadContexts:locateLoadingCollectionEntry:272 :: Collection [CollectionKey[org.total.spring.entity.User.roles#2]] located in load context 
2016-10-10 18:54:04.448 - TRACE - [main] CollectionLoadContext:endLoadingCollections:203 :: Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=org.apache.commons.dbcp.DelegatingResultSet@3a543f31, coll=[org.total.spring.entity.User.roles#2]>@2a2843ec] 
2016-10-10 18:54:04.448 - TRACE - [main] LoadContexts:locateLoadingCollectionEntry:266 :: Attempting to locate loading collection entry [CollectionKey[org.total.spring.entity.User.roles#1]] in any result-set context 
2016-10-10 18:54:04.449 - TRACE - [main] LoadContexts:locateLoadingCollectionEntry:272 :: Collection [CollectionKey[org.total.spring.entity.User.roles#1]] located in load context 
2016-10-10 18:54:04.449 - TRACE - [main] CollectionLoadContext:endLoadingCollections:203 :: Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=org.apache.commons.dbcp.DelegatingResultSet@3a543f31, coll=[org.total.spring.entity.User.roles#1]>@2042ccce] 
2016-10-10 18:54:04.449 - DEBUG - [main] CollectionLoadContext:endLoadingCollections:234 :: 2 collections were found in result set for role: org.total.spring.entity.User.roles 
2016-10-10 18:54:04.450 - TRACE - [main] CollectionLoadContext:endLoadingCollection:247 :: Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=org.apache.commons.dbcp.DelegatingResultSet@3a543f31, coll=[org.total.spring.entity.User.roles#2]>@2a2843ec] 
2016-10-10 18:54:04.450 - DEBUG - [main] CollectionLoadContext:endLoadingCollection:282 :: Collection fully initialized: [org.total.spring.entity.User.roles#2] 
2016-10-10 18:54:04.452 - TRACE - [main] CollectionLoadContext:endLoadingCollection:247 :: Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=org.apache.commons.dbcp.DelegatingResultSet@3a543f31, coll=[org.total.spring.entity.User.roles#1]>@2042ccce] 
2016-10-10 18:54:04.452 - DEBUG - [main] CollectionLoadContext:endLoadingCollection:282 :: Collection fully initialized: [org.total.spring.entity.User.roles#1] 
2016-10-10 18:54:04.453 - DEBUG - [main] CollectionLoadContext:endLoadingCollections:242 :: 2 collections initialized for role: org.total.spring.entity.User.roles 
2016-10-10 18:54:04.453 - TRACE - [main] JdbcCoordinatorImpl:release:412 :: Releasing statement [com.mysql.jdbc.JDBC4PreparedStatement@481e91b6: select user0_.userId as userId1_3_0_, role2_.roleId as roleId1_1_1_, user0_.password as password2_3_0_, user0_.userName as userName3_3_0_, role2_.roleType as roleType2_1_1_, roles1_.userId as userId1_3_0__, roles1_.roleId as roleId2_4_0__ from User user0_ inner join User_Role roles1_ on user0_.userId=roles1_.userId inner join Role role2_ on roles1_.roleId=role2_.roleId] 
2016-10-10 18:54:04.454 - TRACE - [main] JdbcCoordinatorImpl:close:573 :: Closing result set [org.apache.commons.dbcp.DelegatingResultSet@3a543f31] 
2016-10-10 18:54:04.455 - TRACE - [main] JdbcCoordinatorImpl:close:525 :: Closing prepared statement [com.mysql.jdbc.JDBC4PreparedStatement@481e91b6: select user0_.userId as userId1_3_0_, role2_.roleId as roleId1_1_1_, user0_.password as password2_3_0_, user0_.userName as userName3_3_0_, role2_.roleType as roleType2_1_1_, roles1_.userId as userId1_3_0__, roles1_.roleId as roleId2_4_0__ from User user0_ inner join User_Role roles1_ on user0_.userId=roles1_.userId inner join Role role2_ on roles1_.roleId=role2_.roleId] 
2016-10-10 18:54:04.464 - TRACE - [main] JdbcCoordinatorImpl:afterStatementExecution:278 :: Starting after statement execution processing [ON_CLOSE] 
2016-10-10 18:54:04.464 - TRACE - [main] StatefulPersistenceContext:initializeNonLazyCollections:884 :: Initializing non-lazy collections 
2016-10-10 18:54:04.466 - DEBUG - [main] AbstractTransactionImpl:commit:175 :: committing 
2016-10-10 18:54:04.466 - TRACE - [main] SessionImpl:managedFlush:424 :: Automatically flushing session 
2016-10-10 18:54:04.467 - TRACE - [main] AbstractFlushingEventListener:flushEverythingToExecutions:84 :: Flushing session 
2016-10-10 18:54:04.468 - DEBUG - [main] AbstractFlushingEventListener:prepareEntityFlushes:149 :: Processing flush-time cascades 
2016-10-10 18:54:04.471 - TRACE - [main] Cascade:cascade:103 :: Processing cascade ACTION_PERSIST_ON_FLUSH for: org.total.spring.entity.User 
2016-10-10 18:54:04.472 - TRACE - [main] Cascade:cascadeCollectionElements:374 :: Cascade ACTION_PERSIST_ON_FLUSH for collection: org.total.spring.entity.User.roles 
2016-10-10 18:54:04.473 - TRACE - [main] CascadingActions$8:cascade:356 :: Cascading to persist on flush: org.total.spring.entity.Role 
2016-10-10 18:54:04.474 - TRACE - [main] AbstractSaveEventListener:getEntityState:506 :: Persistent instance of: org.total.spring.entity.Role 
2016-10-10 18:54:04.475 - TRACE - [main] DefaultPersistEventListener:entityIsPersistent:172 :: Ignoring persistent instance 
2016-10-10 18:54:04.476 - TRACE - [main] Cascade:cascade:103 :: Processing cascade ACTION_PERSIST_ON_FLUSH for: org.total.spring.entity.Role 
2016-10-10 18:54:04.477 - TRACE - [main] Cascade:cascade:140 :: Done processing cascade ACTION_PERSIST_ON_FLUSH for: org.total.spring.entity.Role 
2016-10-10 18:54:04.477 - TRACE - [main] Cascade:cascade:103 :: Processing cascade ACTION_PERSIST_ON_FLUSH for: org.total.spring.entity.Role 
2016-10-10 18:54:04.477 - TRACE - [main] Cascade:cascadeCollectionElements:374 :: Cascade ACTION_PERSIST_ON_FLUSH for collection: org.total.spring.entity.Role.users 
2016-10-10 18:54:04.478 - TRACE - [main] Cascade:cascadeCollectionElements:391 :: Done cascade ACTION_PERSIST_ON_FLUSH for collection: org.total.spring.entity.Role.users 
2016-10-10 18:54:04.478 - TRACE - [main] Cascade:cascade:140 :: Done processing cascade ACTION_PERSIST_ON_FLUSH for: org.total.spring.entity.Role 
2016-10-10 18:54:04.478 - TRACE - [main] CascadingActions$8:cascade:356 :: Cascading to persist on flush: org.total.spring.entity.Role 
2016-10-10 18:54:04.479 - TRACE - [main] AbstractSaveEventListener:getEntityState:506 :: Persistent instance of: org.total.spring.entity.Role 
2016-10-10 18:54:04.479 - TRACE - [main] DefaultPersistEventListener:entityIsPersistent:172 :: Ignoring persistent instance 
2016-10-10 18:54:04.479 - TRACE - [main] Cascade:cascade:103 :: Processing cascade ACTION_PERSIST_ON_FLUSH for: org.total.spring.entity.Role 
2016-10-10 18:54:04.480 - TRACE - [main] Cascade:cascade:140 :: Done processing cascade ACTION_PERSIST_ON_FLUSH for: org.total.spring.entity.Role 
2016-10-10 18:54:04.480 - TRACE - [main] Cascade:cascade:103 :: Processing cascade ACTION_PERSIST_ON_FLUSH for: org.total.spring.entity.Role 
2016-10-10 18:54:04.480 - TRACE - [main] Cascade:cascadeCollectionElements:374 :: Cascade ACTION_PERSIST_ON_FLUSH for collection: org.total.spring.entity.Role.users 
2016-10-10 18:54:04.480 - TRACE - [main] Cascade:cascadeCollectionElements:391 :: Done cascade ACTION_PERSIST_ON_FLUSH for collection: org.total.spring.entity.Role.users 
2016-10-10 18:54:04.481 - TRACE - [main] Cascade:cascade:140 :: Done processing cascade ACTION_PERSIST_ON_FLUSH for: org.total.spring.entity.Role 
2016-10-10 18:54:04.482 - TRACE - [main] CascadingActions$8:cascade:356 :: Cascading to persist on flush: org.total.spring.entity.Role 
2016-10-10 18:54:04.482 - TRACE - [main] AbstractSaveEventListener:getEntityState:506 :: Persistent instance of: org.total.spring.entity.Role 
2016-10-10 18:54:04.482 - TRACE - [main] DefaultPersistEventListener:entityIsPersistent:172 :: Ignoring persistent instance 
2016-10-10 18:54:04.483 - TRACE - [main] Cascade:cascade:103 :: Processing cascade ACTION_PERSIST_ON_FLUSH for: org.total.spring.entity.Role 
2016-10-10 18:54:04.483 - TRACE - [main] Cascade:cascade:140 :: Done processing cascade ACTION_PERSIST_ON_FLUSH for: org.total.spring.entity.Role 
2016-10-10 18:54:04.484 - TRACE - [main] Cascade:cascade:103 :: Processing cascade ACTION_PERSIST_ON_FLUSH for: org.total.spring.entity.Role 
2016-10-10 18:54:04.484 - TRACE - [main] Cascade:cascadeCollectionElements:374 :: Cascade ACTION_PERSIST_ON_FLUSH for collection: org.total.spring.entity.Role.users 
2016-10-10 18:54:04.485 - TRACE - [main] Cascade:cascadeCollectionElements:391 :: Done cascade ACTION_PERSIST_ON_FLUSH for collection: org.total.spring.entity.Role.users 
2016-10-10 18:54:04.485 - TRACE - [main] Cascade:cascade:140 :: Done processing cascade ACTION_PERSIST_ON_FLUSH for: org.total.spring.entity.Role 
2016-10-10 18:54:04.485 - TRACE - [main] Cascade:cascadeCollectionElements:391 :: Done cascade ACTION_PERSIST_ON_FLUSH for collection: org.total.spring.entity.User.roles 
2016-10-10 18:54:04.486 - TRACE - [main] Cascade:cascade:140 :: Done processing cascade ACTION_PERSIST_ON_FLUSH for: org.total.spring.entity.User 
2016-10-10 18:54:04.486 - TRACE - [main] Cascade:cascade:103 :: Processing cascade ACTION_PERSIST_ON_FLUSH for: org.total.spring.entity.Role 
2016-10-10 18:54:04.486 - TRACE - [main] Cascade:cascadeCollectionElements:374 :: Cascade ACTION_PERSIST_ON_FLUSH for collection: org.total.spring.entity.Role.users 
2016-10-10 18:54:04.486 - TRACE - [main] Cascade:cascadeCollectionElements:391 :: Done cascade ACTION_PERSIST_ON_FLUSH for collection: org.total.spring.entity.Role.users 
2016-10-10 18:54:04.487 - TRACE - [main] Cascade:cascade:140 :: Done processing cascade ACTION_PERSIST_ON_FLUSH for: org.total.spring.entity.Role 
2016-10-10 18:54:04.487 - TRACE - [main] Cascade:cascade:103 :: Processing cascade ACTION_PERSIST_ON_FLUSH for: org.total.spring.entity.Role 
2016-10-10 18:54:04.488 - TRACE - [main] Cascade:cascadeCollectionElements:374 :: Cascade ACTION_PERSIST_ON_FLUSH for collection: org.total.spring.entity.Role.users 
2016-10-10 18:54:04.488 - TRACE - [main] Cascade:cascadeCollectionElements:391 :: Done cascade ACTION_PERSIST_ON_FLUSH for collection: org.total.spring.entity.Role.users 
2016-10-10 18:54:04.489 - TRACE - [main] Cascade:cascade:140 :: Done processing cascade ACTION_PERSIST_ON_FLUSH for: org.total.spring.entity.Role 
2016-10-10 18:54:04.489 - TRACE - [main] Cascade:cascade:103 :: Processing cascade ACTION_PERSIST_ON_FLUSH for: org.total.spring.entity.Role 
2016-10-10 18:54:04.489 - TRACE - [main] Cascade:cascadeCollectionElements:374 :: Cascade ACTION_PERSIST_ON_FLUSH for collection: org.total.spring.entity.Role.users 
2016-10-10 18:54:04.490 - TRACE - [main] Cascade:cascadeCollectionElements:391 :: Done cascade ACTION_PERSIST_ON_FLUSH for collection: org.total.spring.entity.Role.users 
2016-10-10 18:54:04.490 - TRACE - [main] Cascade:cascade:140 :: Done processing cascade ACTION_PERSIST_ON_FLUSH for: org.total.spring.entity.Role 
2016-10-10 18:54:04.490 - TRACE - [main] Cascade:cascade:103 :: Processing cascade ACTION_PERSIST_ON_FLUSH for: org.total.spring.entity.User 
2016-10-10 18:54:04.491 - TRACE - [main] Cascade:cascadeCollectionElements:374 :: Cascade ACTION_PERSIST_ON_FLUSH for collection: org.total.spring.entity.User.roles 
2016-10-10 18:54:04.491 - TRACE - [main] CascadingActions$8:cascade:356 :: Cascading to persist on flush: org.total.spring.entity.Role 
2016-10-10 18:54:04.492 - TRACE - [main] AbstractSaveEventListener:getEntityState:506 :: Persistent instance of: org.total.spring.entity.Role 
2016-10-10 18:54:04.492 - TRACE - [main] DefaultPersistEventListener:entityIsPersistent:172 :: Ignoring persistent instance 
2016-10-10 18:54:04.492 - TRACE - [main] Cascade:cascadeCollectionElements:391 :: Done cascade ACTION_PERSIST_ON_FLUSH for collection: org.total.spring.entity.User.roles 
2016-10-10 18:54:04.493 - TRACE - [main] Cascade:cascade:140 :: Done processing cascade ACTION_PERSIST_ON_FLUSH for: org.total.spring.entity.User 
2016-10-10 18:54:04.493 - DEBUG - [main] AbstractFlushingEventListener:prepareCollectionFlushes:189 :: Dirty checking collections 
2016-10-10 18:54:04.494 - TRACE - [main] AbstractFlushingEventListener:flushEntities:204 :: Flushing entities and processing referenced collections 
2016-10-10 18:54:04.498 - DEBUG - [main] Collections:processReachableCollection:194 :: Collection found: [org.total.spring.entity.User.roles#1], was: [org.total.spring.entity.User.roles#1] (initialized) 
2016-10-10 18:54:04.499 - DEBUG - [main] Collections:processReachableCollection:201 :: Collection found: [org.total.spring.entity.Role.users#1], was: [org.total.spring.entity.Role.users#1] (uninitialized) 
2016-10-10 18:54:04.500 - DEBUG - [main] Collections:processReachableCollection:201 :: Collection found: [org.total.spring.entity.Role.users#2], was: [org.total.spring.entity.Role.users#2] (uninitialized) 
2016-10-10 18:54:04.500 - DEBUG - [main] Collections:processReachableCollection:201 :: Collection found: [org.total.spring.entity.Role.users#5], was: [org.total.spring.entity.Role.users#5] (uninitialized) 
2016-10-10 18:54:04.501 - DEBUG - [main] Collections:processReachableCollection:194 :: Collection found: [org.total.spring.entity.User.roles#2], was: [org.total.spring.entity.User.roles#2] (initialized) 
2016-10-10 18:54:04.502 - TRACE - [main] AbstractFlushingEventListener:flushCollections:247 :: Processing unreferenced collections 
2016-10-10 18:54:04.502 - TRACE - [main] AbstractFlushingEventListener:flushCollections:264 :: Scheduling collection removes/(re)creates/updates 
2016-10-10 18:54:04.502 - DEBUG - [main] AbstractFlushingEventListener:logFlushResults:123 :: Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects 
2016-10-10 18:54:04.503 - DEBUG - [main] AbstractFlushingEventListener:logFlushResults:130 :: Flushed: 0 (re)creations, 0 updates, 0 removals to 5 collections 
2016-10-10 18:54:04.503 - DEBUG - [main] EntityPrinter:toString:114 :: Listing entities: 
2016-10-10 18:54:04.504 - DEBUG - [main] EntityPrinter:toString:121 :: org.total.spring.entity.Role{roleId=5, roleType=GUEST, users=<uninitialized>} 
2016-10-10 18:54:04.505 - DEBUG - [main] EntityPrinter:toString:121 :: org.total.spring.entity.User{password=tiger, roles=[org.total.spring.entity.Role#2, org.total.spring.entity.Role#1, org.total.spring.entity.Role#5], userName=Tiger, userId=1} 
2016-10-10 18:54:04.506 - DEBUG - [main] EntityPrinter:toString:121 :: org.total.spring.entity.Role{roleId=1, roleType=ADMIN, users=<uninitialized>} 
2016-10-10 18:54:04.506 - DEBUG - [main] EntityPrinter:toString:121 :: org.total.spring.entity.Role{roleId=2, roleType=MODERATOR, users=<uninitialized>} 
2016-10-10 18:54:04.507 - DEBUG - [main] EntityPrinter:toString:121 :: org.total.spring.entity.User{password=d077f244def8a70e5ea758bd8352fcd8, roles=[org.total.spring.entity.Role#5], userName=Cat, userId=2} 
2016-10-10 18:54:04.507 - TRACE - [main] AbstractFlushingEventListener:performExecutions:338 :: Executing flush 
2016-10-10 18:54:04.508 - TRACE - [main] JdbcCoordinatorImpl:afterStatementExecution:278 :: Starting after statement execution processing [ON_CLOSE] 
2016-10-10 18:54:04.508 - TRACE - [main] AbstractFlushingEventListener:postFlush:370 :: Post flush 
2016-10-10 18:54:04.508 - TRACE - [main] SessionImpl:beforeTransactionCompletion:515 :: before transaction completion 
2016-10-10 18:54:04.509 - DEBUG - [main] JdbcTransaction:doCommit:113 :: committed JDBC Connection 
2016-10-10 18:54:04.509 - DEBUG - [main] JdbcTransaction:releaseManagedConnection:126 :: re-enabling autocommit 
2016-10-10 18:54:04.511 - TRACE - [main] TransactionCoordinatorImpl:afterTransaction:139 :: after transaction completion 
2016-10-10 18:54:04.512 - TRACE - [main] SessionImpl:afterTransactionCompletion:527 :: after transaction completion 
2016-10-10 18:54:04.513 - TRACE - [main] SessionImpl:close:357 :: Closing session 
2016-10-10 18:54:04.513 - TRACE - [main] JdbcCoordinatorImpl:close:199 :: Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@684b31de] 
2016-10-10 18:54:04.513 - TRACE - [main] LogicalConnectionImpl:close:178 :: Closing logical connection 
2016-10-10 18:54:04.514 - DEBUG - [main] LogicalConnectionImpl:releaseConnection:246 :: Releasing JDBC connection 
2016-10-10 18:54:04.514 - DEBUG - [main] LogicalConnectionImpl:releaseConnection:264 :: Released JDBC connection 
2016-10-10 18:54:04.515 - TRACE - [main] LogicalConnectionImpl:close:190 :: Logical connection closed 
2016-10-10 18:54:04.515 -  INFO - [main] TestDrive:createUserTest:246 :: [User{userId=1, userName='Tiger', password='tiger', roles=[Role{roleId=2, roleType='MODERATOR'}, Role{roleId=1, roleType='ADMIN'}, Role{roleId=5, roleType='GUEST'}]}, User{userId=1, userName='Tiger', password='tiger', roles=[Role{roleId=2, roleType='MODERATOR'}, Role{roleId=1, roleType='ADMIN'}, Role{roleId=5, roleType='GUEST'}]}, User{userId=1, userName='Tiger', password='tiger', roles=[Role{roleId=2, roleType='MODERATOR'}, Role{roleId=1, roleType='ADMIN'}, Role{roleId=5, roleType='GUEST'}]}, User{userId=2, userName='Cat', password='d077f244def8a70e5ea758bd8352fcd8', roles=[Role{roleId=5, roleType='GUEST'}]}] 
